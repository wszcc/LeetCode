[{"D:\\PROJECT\\leetCode\\src\\index.tsx":"1","D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts":"2","D:\\PROJECT\\leetCode\\src\\App.tsx":"3","D:\\PROJECT\\leetCode\\src\\router\\index.jsx":"4","D:\\PROJECT\\leetCode\\src\\router\\config.js":"5","D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js":"6","D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js":"7","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js":"8","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js":"9","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js":"10","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js":"11","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js":"12","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js":"13","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js":"14","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js":"15","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\data.js":"16","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js":"17","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx":"18","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx":"19","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx":"20","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts":"21","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx":"22","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts":"23","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts":"24","D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx":"25","D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts":"26","D:\\PROJECT\\leetCode\\src\\config\\colors.ts":"27","D:\\PROJECT\\leetCode\\src\\apis\\index.ts":"28","D:\\PROJECT\\leetCode\\src\\utils\\shared.ts":"29","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\index.js":"30","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js":"31","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\index.js":"32","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginFooter\\index.jsx":"33","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginHeader\\index.jsx":"34","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\index.jsx":"35","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\phoneLogin.js":"36","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\pwdLogin.js":"37","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\constant.js":"38","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\loginHeader.js":"39","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx":"40","D:\\PROJECT\\leetCode\\src\\config\\code.ts":"41","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx":"42","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx":"43","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\mdEditor\\index.tsx":"44","D:\\PROJECT\\leetCode\\src\\apis\\comments.ts":"45","D:\\PROJECT\\leetCode\\src\\mock\\questionIndex.js":"46","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\actions.ts":"47","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\dif-tag\\DigTag.tsx":"48","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\index.ts":"49","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\reducer.ts":"50","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\index.tsx":"51","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\SolutionList.tsx":"52","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Footer.tsx":"53","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Header.tsx":"54","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\index.ts":"55","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\epic.ts":"56","D:\\PROJECT\\leetCode\\src\\apis\\solution.ts":"57","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-right\\index.tsx":"58"},{"size":417,"mtime":1611926463004,"results":"59","hashOfConfig":"60"},{"size":440,"mtime":1611827611826,"results":"61","hashOfConfig":"60"},{"size":263,"mtime":1613704674959,"results":"62","hashOfConfig":"60"},{"size":492,"mtime":1611827611827,"results":"63","hashOfConfig":"60"},{"size":669,"mtime":1611827611826,"results":"64","hashOfConfig":"60"},{"size":149,"mtime":1611827611822,"results":"65","hashOfConfig":"60"},{"size":1128,"mtime":1612057753301,"results":"66","hashOfConfig":"60"},{"size":165,"mtime":1614091253396,"results":"67","hashOfConfig":"60"},{"size":368,"mtime":1614091363306,"results":"68","hashOfConfig":"60"},{"size":168,"mtime":1611827611825,"results":"69","hashOfConfig":"60"},{"size":1819,"mtime":1611827611824,"results":"70","hashOfConfig":"60"},{"size":366,"mtime":1614091334240,"results":"71","hashOfConfig":"60"},{"size":1141,"mtime":1614093021685,"results":"72","hashOfConfig":"60"},{"size":1123,"mtime":1614071413079,"results":"73","hashOfConfig":"60"},{"size":3247,"mtime":1614090048476,"results":"74","hashOfConfig":"60"},{"size":851,"mtime":1611928955737,"results":"75","hashOfConfig":"60"},{"size":600,"mtime":1614159577107,"results":"76","hashOfConfig":"60"},{"size":291,"mtime":1614091922783,"results":"77","hashOfConfig":"60"},{"size":2804,"mtime":1614092095310,"results":"78","hashOfConfig":"60"},{"size":1683,"mtime":1614156628182,"results":"79","hashOfConfig":"60"},{"size":341,"mtime":1614092017891,"results":"80","hashOfConfig":"60"},{"size":3335,"mtime":1614092127996,"results":"81","hashOfConfig":"60"},{"size":1338,"mtime":1613440428650,"results":"82","hashOfConfig":"60"},{"size":859,"mtime":1612419281395,"results":"83","hashOfConfig":"60"},{"size":1669,"mtime":1613704674961,"results":"84","hashOfConfig":"60"},{"size":1968,"mtime":1614166217589,"results":"85","hashOfConfig":"60"},{"size":125,"mtime":1612419281391,"results":"86","hashOfConfig":"60"},{"size":4420,"mtime":1614071265146,"results":"87","hashOfConfig":"60"},{"size":3992,"mtime":1614089446868,"results":"88","hashOfConfig":"60"},{"size":370,"mtime":1612057753306,"results":"89","hashOfConfig":"60"},{"size":124,"mtime":1611827611822,"results":"90","hashOfConfig":"60"},{"size":242,"mtime":1612057753306,"results":"91","hashOfConfig":"60"},{"size":2427,"mtime":1612057753302,"results":"92","hashOfConfig":"60"},{"size":338,"mtime":1612057753302,"results":"93","hashOfConfig":"60"},{"size":2574,"mtime":1612057753303,"results":"94","hashOfConfig":"60"},{"size":0,"mtime":1612057753307,"results":"95","hashOfConfig":"60"},{"size":0,"mtime":1612057753307,"results":"96","hashOfConfig":"60"},{"size":312,"mtime":1612057753305,"results":"97","hashOfConfig":"60"},{"size":410,"mtime":1612057753307,"results":"98","hashOfConfig":"60"},{"size":1090,"mtime":1613704674963,"results":"99","hashOfConfig":"60"},{"size":90,"mtime":1612419297472,"results":"100","hashOfConfig":"60"},{"size":1477,"mtime":1614071265147,"results":"101","hashOfConfig":"60"},{"size":4499,"mtime":1614071265147,"results":"102","hashOfConfig":"60"},{"size":1511,"mtime":1614166962736,"results":"103","hashOfConfig":"60"},{"size":1579,"mtime":1614145107251,"results":"104","hashOfConfig":"60"},{"size":1888,"mtime":1614071413077,"results":"105","hashOfConfig":"60"},{"size":635,"mtime":1614071413079,"results":"106","hashOfConfig":"60"},{"size":494,"mtime":1614071413078,"results":"107","hashOfConfig":"60"},{"size":1022,"mtime":1614149262239,"results":"108","hashOfConfig":"60"},{"size":813,"mtime":1614071413079,"results":"109","hashOfConfig":"60"},{"size":657,"mtime":1614159331512,"results":"110","hashOfConfig":"60"},{"size":1730,"mtime":1614166132549,"results":"111","hashOfConfig":"60"},{"size":168,"mtime":1614137212023,"results":"112","hashOfConfig":"60"},{"size":168,"mtime":1614137186592,"results":"113","hashOfConfig":"60"},{"size":2586,"mtime":1614165965172,"results":"114","hashOfConfig":"60"},{"size":1277,"mtime":1614156769479,"results":"115","hashOfConfig":"60"},{"size":978,"mtime":1614163712479,"results":"116","hashOfConfig":"60"},{"size":1854,"mtime":1614166844333,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"12bdsu8",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"128"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"128"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"128"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"120"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"128"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PROJECT\\leetCode\\src\\index.tsx",[],["249","250"],"D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts",[],"D:\\PROJECT\\leetCode\\src\\App.tsx",[],"D:\\PROJECT\\leetCode\\src\\router\\index.jsx",["251"],"import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport routerMap from \"./config\";\r\n\r\n\r\nconst RouterView = () => {\r\n  return (\r\n    <Router>\r\n      {/* <Redirect to=\"/home\"></Redirect> */}\r\n      <Switch>\r\n        {routerMap.map((item,index) => (\r\n          <Route key={index} path={item.path} component={item.component}></Route>\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RouterView;\r\n",["252","253"],"D:\\PROJECT\\leetCode\\src\\router\\config.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js",["254","255","256","257","258","259","260"],"import { Provider, useSelector } from 'react-redux'\r\nimport store from './store/index'\r\nimport { Card } from 'antd'\r\n\r\nimport Header from './components/LoginHeader'\r\nimport LoginMain from './components/LoginMain'\r\nimport Footer from './components/LoginFooter'\r\n\r\nimport './login.scss'\r\n\r\n\r\nconst Login = (props) =>{\r\n    // const { isPhoneLogin } = useSelector(allStates => ({\r\n    //     isPhoneLogin: allStates.loginHeader.isPhoneLogin\r\n    // }))\r\n    // return (\r\n    //     <Provider store={store}>\r\n    //         <div className='login' \r\n    //             // style={isPhoneLogin ? {height: '514px', margin: '80px auto 0 auto'} : {height: '462px', margin: '100px auto 0 auto'}}\r\n    //         >\r\n    //             <Card className='login-card'\r\n    //                 title={<Header />}\r\n    //                 bordered={false}\r\n    //             >\r\n    //                 <LoginMain />\r\n    //                 {/* assets */}\r\n    //                 <Footer />\r\n    //             </Card>\r\n    //         </div>\r\n    //     </Provider>\r\n    // ) \r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js",["261","262","263"],"import React from \"react\";\r\nimport Logo from \"../../../../assets/imgs/logo.svg\";\r\nimport \"./header.scss\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n  RightSquareOutlined,\r\n  BellOutlined,\r\n  UserOutlined,\r\n  DownOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nfunction Header(props) {\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.alipay.com/\"\r\n        >\r\n          题目以中文显示\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.taobao.com/\"\r\n        >\r\n          题目以英文显示\r\n        </a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div className=\"header\">\r\n      <ul className=\"header-nav\">\r\n        <li>\r\n          <img src={Logo} alt=\"力扣\"></img>\r\n        </li>\r\n        <li>学习</li>\r\n        <li>题库</li>\r\n        <li>讨论</li>\r\n        <li>竞赛</li>\r\n        <li>求职</li>\r\n        <li className=\"shop\">商店</li>\r\n        <li>\r\n          <a className=\"download\" href=\"#\">\r\n            下载 App\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"member\" href=\"#\">\r\n            Plus 会员\r\n          </a>\r\n        </li>\r\n        <Dropdown overlay={menu}>\r\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\r\n            中 <DownOutlined />\r\n          </a>\r\n        </Dropdown>\r\n        <li>\r\n          <RightSquareOutlined />\r\n        </li>\r\n        <li>\r\n          <BellOutlined />\r\n        </li>\r\n        <li>\r\n          <Link to='/profile'><UserOutlined /></Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js",["264","265","266"],"import { Table, Tag, Space } from \"antd\";\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport { getCommit } from '../../../../../../apis/comments'\r\nimport { getKeys } from '../../../../../../utils/shared'\r\nconst columns = [\r\n  {\r\n    title: \"提交时间\",\r\n    dataIndex: \"commitTime\",\r\n    key: \"commitTime\",\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: \"提交结果\",\r\n    dataIndex: \"commitResult\",\r\n    key: \"commitResult\",\r\n  },\r\n  {\r\n    title: \"运行时间\",\r\n    dataIndex: \"runtime\",\r\n    key: \"runtime\",\r\n  },\r\n  {\r\n    title: \"语言\",\r\n    dataIndex: \"word\",\r\n    key: \"java\",\r\n  },\r\n];\r\n\r\nconst SubmitRecord = () => {\r\n  const [commitList, setCommitList] = useState()\r\n  useEffect(() =>{\r\n    getCommit('josdnf')\r\n    .then(res =>{\r\n      setCommitList(getKeys(res.data.data.commitList))\r\n      console.log(getKeys(res.data.data.commitList))\r\n    })\r\n  },[])\r\n  return (\r\n    <div className=\"submit-record\">\r\n      {\r\n        commitList? <Table pagination={false} columns={columns} dataSource={commitList} /> :''\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(SubmitRecord);\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js",["267"],"import \"./desc.scss\";\r\nimport \"../../../../../../mock/questionIndex.js\";\r\nimport { getDescData, likeQuestion,  } from \"../../../../../../apis/comments\";\r\nimport DiffTag from \"../components/dif-tag/DigTag\";\r\nimport { devContetn } from \"../../../../../../utils/shared\";\r\nimport {\r\n  likeAction,\r\n  unLikeAction,\r\n  collectAction,\r\n  unCollectAction,\r\n} from \"../../../../store/actions\";\r\nimport {\r\n  LikeOutlined,\r\n  HeartOutlined,\r\n  RotateRightOutlined,\r\n  SwapOutlined,\r\n  BellOutlined,\r\n  MessageOutlined,\r\n  LikeFilled,\r\n  HeartFilled,\r\n} from \"@ant-design/icons\";\r\nimport { Fragment, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst Desc = (props) => {\r\n  let [descData, setDescData] = useState({ code: 0 });\r\n  let {\r\n    like,\r\n    dispatchLike,\r\n    dispatchUnlike,\r\n    collect,\r\n    dispatchCollect,\r\n    dispatchUnCollect,\r\n  } = props;\r\n  useEffect(() => {\r\n    getDescData().then((res) => {\r\n      setDescData(res.data);\r\n    });\r\n  }, [descData.code]);\r\n  return (\r\n    <div className=\"desc\">\r\n      {descData.code ? (\r\n        <>\r\n          <div className=\"title\">1.{descData.data.title}</div>\r\n          <ul className=\"tag\">\r\n            <li>\r\n              难度 <DiffTag difficulty={descData.data.difficulty} />\r\n            </li>\r\n            <li>\r\n              {like ? (\r\n                <LikeFilled onClick={dispatchUnlike} />\r\n              ) : (\r\n                <LikeOutlined onClick={dispatchLike} />\r\n              )}\r\n              {descData.data.thumbup}\r\n            </li>\r\n            <li>\r\n              {collect ? (\r\n                <HeartFilled onClick={dispatchUnCollect} />\r\n              ) : (\r\n                <HeartOutlined onClick={dispatchCollect} />\r\n              )}\r\n              收藏\r\n            </li>\r\n            <li>\r\n              <RotateRightOutlined /> 分享\r\n            </li>\r\n            <li>\r\n              <SwapOutlined /> 切换为英文\r\n            </li>\r\n            <li>\r\n              <BellOutlined /> 接收动态\r\n            </li>\r\n            <li>\r\n              <MessageOutlined /> 反馈\r\n            </li>\r\n          </ul>\r\n          <div className=\"content\">\r\n            {devContetn(descData.data.content).map((p, i) => (\r\n              <Fragment key={i}>\r\n                <p>{p} </p>\r\n                <br />\r\n              </Fragment>\r\n            ))}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    like: state.desc.like,\r\n    collect: state.desc.collect,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    dispatchLike() {\r\n      const disLikeAction = likeAction();\r\n      dispatch(disLikeAction);\r\n      likeQuestion(\"question\", true, \"jsaodfnasd\");\r\n    },\r\n    dispatchUnlike() {\r\n      const disUnlikeAction = unLikeAction();\r\n      dispatch(disUnlikeAction);\r\n      likeQuestion(\"question\", false, \"jsaodfnasd\");\r\n    },\r\n    dispatchCollect() {\r\n      const disLikeAction = collectAction();\r\n      dispatch(disLikeAction);\r\n    },\r\n    dispatchUnCollect() {\r\n      const disUnlikeAction = unCollectAction();\r\n      dispatch(disUnlikeAction);\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Desc);\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\data.js",[],["268","269"],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx",["270"],"import { FC, useEffect, useRef } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/addon/display/autorefresh\";\r\nimport \"codemirror/addon/comment/comment\";\r\nimport \"codemirror/addon/edit/matchbrackets\";\r\nimport \"codemirror/keymap/vim\";\r\nimport \"codemirror/theme/eclipse.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/theme/ambiance.css\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/mode/clike/clike.js\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/addon/hint/show-hint.css\";\r\nimport \"codemirror/addon/hint/show-hint\";\r\nimport \"codemirror/addon/hint/anyword-hint\";\r\nimport \"codemirror/addon/selection/active-line\";\r\nimport \"codemirror/mode/xml/xml.js\";\r\nimport \"codemirror/addon/fold/foldgutter.css\";\r\nimport \"codemirror/addon/fold/foldcode.js\";\r\nimport \"codemirror/addon/fold/foldgutter.js\";\r\nimport \"codemirror/addon/fold/brace-fold.js\";\r\nimport \"codemirror/addon/fold/comment-fold.js\";\r\n\r\nimport \"codemirror/addon/comment/comment\";\r\nimport \"codemirror/keymap/sublime\";\r\nimport \"codemirror/addon/edit/closebrackets.js\"; //自动括号\r\nimport { connect } from \"react-redux\";\r\nimport { actSaveCode } from \"../store/actions\";\r\nimport { stat } from \"fs\";\r\nimport { RootState } from \"../../../store\";\r\n\r\ninterface Config {\r\n  fontSize: number;\r\n  theme: \"dark\" | \"light\";\r\n  indent: number;\r\n  code: string;\r\n  dispatch: Dispatch;\r\n}\r\n\r\nconst CodeEditor: FC<Config> = ({\r\n  fontSize,\r\n  theme,\r\n  indent,\r\n  code,\r\n  dispatch,\r\n}) => {\r\n  const editor = useRef<CodeMirror>(null);\r\n\r\n  useEffect(() => {\r\n    const $editor = (editor.current as any).editor;\r\n    $editor.setSize(\"100%\", \"100%\");\r\n  }, []);\r\n\r\n  return (\r\n    <CodeMirror\r\n      className={\"font-size-\" + fontSize + \" editor\"}\r\n      ref={editor}\r\n      value={code}\r\n      options={{\r\n        mode: {\r\n          name: \"text/x-java\",\r\n        },\r\n        theme: theme === \"light\" ? \"eclipse\" : \"material\",\r\n        indentWithTabs: indent,\r\n        tabSize: indent,\r\n        lineNumbers: true,\r\n        smartIndent: true,\r\n        autoCloseBrackets: true,\r\n        matchBrackets: true,\r\n        extraKyes: {\r\n          Tab: \"autocomplete\",\r\n        },\r\n        lineWrapping: true,\r\n        foldGutter: true,\r\n        gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n      }}\r\n      onBeforeChange={(...arr) => {\r\n        dispatch(actSaveCode(arr[2]));\r\n      }}\r\n      onInputRead={(cm, change) => {\r\n        cm.setOption(\"hintOptions\", {\r\n          completeSingle: false,\r\n        });\r\n        if (![\";\"].includes(change.text[0])) cm.execCommand(\"autocomplete\");\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect((state: RootState) => ({\r\n  ...state.editorConfig\r\n}))(CodeEditor);\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts",["271","272","273"],"import { createStore, combineReducers } from 'redux'\r\nimport reducer, { initState } from './reducer'\r\nimport { produce } from 'immer'\r\n\r\ntype MappedReducer<T extends { [k: string]: (...args: any) => any }> = {\r\n  [K in keyof T]: ReturnType<T[K]>\r\n}\r\n\r\nconst editorConfigReducer = produce(reducer, initState)\r\n\r\nexport { editorConfigReducer }","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts",[],"D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts",["274","275"],"D:\\PROJECT\\leetCode\\src\\config\\colors.ts",[],"D:\\PROJECT\\leetCode\\src\\apis\\index.ts",["276"],"import axios from 'axios'\r\nimport { message } from 'antd'\r\nimport { storage } from '../utils/shared'\r\n\r\ntype PendingQueue = ((...args: any) => void)[]\r\n\r\nconst BASE_URL = 'http://localhost:3000/api'\r\n\r\nconst CONNECT_LIMIT = 6 // 最大网络连接数\r\nconst TIMEOUT = 1000 * 10 //最大请求到期时间 10s\r\n\r\nexport enum ErrorCode {\r\n  Success = 200,\r\n  BadRequest = 400, /**参数类型或者字段错误，只展示给我们开发者看，我会log到控制台 */\r\n  UnAuthorized = 401,\r\n  Abort = 520,\r\n  Connect_Fail = 1314, /**由于用户网络断了等特殊情况导致的请求失败 */\r\n}\r\nconst CodeMap = {\r\n  [ErrorCode.Success]: \"请求成功\",\r\n  [ErrorCode.UnAuthorized]: \"请登陆\",\r\n  [ErrorCode.Connect_Fail]: \"网络连接失败\",\r\n  [ErrorCode.BadRequest]: \"出现未知异常\",\r\n  [ErrorCode.Abort]: \"请求取消\"\r\n}\r\nlet now = window.performance\r\n  ? () => performance.now()\r\n  : () => Date.now();\r\n\r\n/** 当前请求数 */\r\nlet requestNum = 0\r\nlet pendingQueue: PendingQueue = []\r\nlet isRefreshing = false\r\n\r\n/** 不需要token的请求 */\r\nconst whiteList = new Set([\r\n  '/user/resetToken',\r\n  '/user/login',\r\n  '/user/register',\r\n  '/user/checkEmail',\r\n  '/user/checkUserId',\r\n  '/user/sendActiveMail',\r\n  '/user/logout',\r\n  '/user/findBackPassword',\r\n  '/user/checkUserLegality',\r\n  '/token',\r\n  '/course/queryCourse'\r\n])\r\n\r\nconst request = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: TIMEOUT\r\n})\r\n\r\nrequest.interceptors.request.use(\r\n  async config => {\r\n    if (!storage.get('token') && !whiteList.has(config.url!)) {\r\n      config.cancelToken = new axios.CancelToken(c => c())\r\n      return config\r\n    }\r\n\r\n    if (!config.headers.priority && (isRefreshing || requestNum >= CONNECT_LIMIT)) { //如果正在请求新的token，代表当前token是过期了的\r\n      try {\r\n        await block() //等待前面的请求完\r\n      } catch (e) {//这里表示等待时间过长, 仍然取消请求\r\n        config.cancelToken = new axios.CancelToken(c => c())\r\n        config.data.message = '超时'\r\n        return config\r\n      }\r\n    }\r\n    config.headers = {\r\n      token: storage.get(\"token\") || \"\",\r\n      contentType: 'application/json;charset=utf-8',\r\n    }\r\n    return config\r\n  },\r\n  err => {\r\n    console.log('异常未知情况造成的错误'); /**正常情况应该永远不会出现这里 */\r\n    console.log(err);\r\n  }\r\n)\r\n\r\nrequest.interceptors.response.use(\r\n  async res => {\r\n    try {\r\n      return res\r\n    } finally {\r\n      requestNum--\r\n      send()\r\n    }\r\n  },\r\n  err => {\r\n    /** 只有网络连接失败和取消请求（没有携带token）会走到这里 */\r\n    try {\r\n      if (axios.isCancel(err)) { //是被取消的请求\r\n        if (!storage.get('token')) { //因为没有token取消的，需要重新登陆\r\n          return {\r\n            ...err,\r\n            data: {\r\n              message: \"未登录\",\r\n              code: ErrorCode.UnAuthorized\r\n            }\r\n          }\r\n        }\r\n        return {\r\n          ...err,\r\n          data: {\r\n            message: err.data.message,\r\n            code: ErrorCode.Abort\r\n          }\r\n        }\r\n      }\r\n      /** 网络异常 */\r\n      return {\r\n        ...err,\r\n        data: {\r\n          message: \"网络异常\",\r\n          code: ErrorCode.Connect_Fail\r\n        }\r\n      }\r\n    } finally {\r\n      requestNum--\r\n      send()\r\n    }\r\n  }\r\n)\r\n\r\nrequest.interceptors.response.use(\r\n  (res: any) => {\r\n    const code = res.data.code as ErrorCode\r\n\r\n    switch (code) {\r\n      case ErrorCode.Success: {\r\n        const newTK = res.headers.token\r\n        if (newTK && newTK !== res.config.headers.token) {\r\n          storage.set(\"token\", res.headers.token)\r\n        }\r\n        return res.data\r\n      }\r\n      default:\r\n        message.info(CodeMap[code])\r\n        return {\r\n          code: code,\r\n          message: res.data.message,\r\n          data: null\r\n        }\r\n    }\r\n  }\r\n)\r\n\r\nfunction block() {\r\n  return new Promise((resolve, reject) => {\r\n    const timerId: number = window.setTimeout(() => {\r\n      reject(undefined)\r\n    }, TIMEOUT)\r\n    pendingQueue.push(() => {\r\n      clearTimeout(timerId)\r\n      resolve(undefined)\r\n    })\r\n  })\r\n}\r\n\r\nfunction send() {\r\n  if (!isRefreshing && pendingQueue.length) {\r\n    const resolve = pendingQueue.shift()!\r\n    resolve()\r\n  }\r\n}\r\n\r\nexport default request\r\n\r\nexport interface Response<T = any> {\r\n  code: number,\r\n  message: string,\r\n  data: T\r\n}","D:\\PROJECT\\leetCode\\src\\utils\\shared.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js",["277"],"import { takeEvery } from \"redux-saga/effects\";\r\n\r\n\r\nfunction* watchFetchData() {\r\n  \r\n}\r\n\r\nexport default watchFetchData;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginFooter\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginHeader\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\index.jsx",["278"],"import { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button, \r\n    Select\r\n} from 'antd'\r\n\r\nimport { TO_PHONE_LOGIN, TO_PWD_LOGIN } from '../../store/constant';\r\n\r\nconst LoginMain = () => {\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch;\r\n    const { Option } = Select;\r\n\r\n\r\n    const { isPhoneLogin } = useSelector(allStates => ({\r\n        isPhoneLogin: allStates.loginHeader.isPhoneLogin\r\n    }))\r\n\r\n    const changeLoginWay = () => {\r\n        console.log('changeway');\r\n        dispatch({ type: TO_PWD_LOGIN, isPhoneLogin: false })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form className='login-card-form' form={form}>\r\n                {/* phone or username*/}\r\n                <Form.Item className='login-card-form-item'>\r\n                    {/* phone */}\r\n                    <Input.Group compact style={{ display: `${isPhoneLogin ? 'block' : 'none'}` }}>\r\n                        <Select style={{ width: '23%' }} defaultValue=\"Zhejiang\">\r\n                            <Option value=\"Zhejiang\">+86</Option>\r\n                            <Option value=\"Jiangsu\">+852</Option>\r\n                        </Select>\r\n                        <Input className='login-card-form-input sp' style={{ width: '77%' }} placeholder='输入手机号' />\r\n                    </Input.Group>\r\n\r\n\r\n                    {/* username */}\r\n                    <Input className='login-card-form-input' placeholder='手机号/邮箱' style={{ display: `${!isPhoneLogin ? 'block' : 'none'}` }} />\r\n                </Form.Item>\r\n\r\n                {/* verification or password */}\r\n                <Form.Item className='login-card-form-item'>\r\n                    <Input className='login-card-form-input' placeholder={isPhoneLogin ? '验证码' : '输入密码'} />\r\n                </Form.Item>\r\n\r\n                {/* login/register or login */}\r\n                <Form.Item className='login-card-form-item'>\r\n                    <Button type='primary'>{isPhoneLogin ? '登录 / 注册' : '登录'}</Button>\r\n                </Form.Item>\r\n\r\n                {/* link button */}\r\n                <Form.Item className='login-card-form-item'>\r\n                    <Button type='link' onClick={changeLoginWay}>\r\n                        {isPhoneLogin ? '账号密码登录' : '验证码登录'}\r\n                    </Button>\r\n                    <Button type='link'>{isPhoneLogin ? '邮箱注册' : '忘记密码'}</Button>\r\n                </Form.Item>\r\n            </Form>        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginMain","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\phoneLogin.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\pwdLogin.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\constant.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\loginHeader.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\config\\code.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx",["279","280","281"],"import { FC, memo, useEffect, useState } from \"react\";\r\nimport { ErrorCode } from \"../../../../../../../apis\";\r\nimport { Comment, queryComments } from \"../../../../../../../apis/comments\";\r\nimport { Flags } from \"../../../../../../../utils/shared\";\r\nimport Common from \"./components/Common\";\r\n\r\ninterface CommentsProps {\r\n  parentId: string;\r\n}\r\n\r\nconst CommentFC: FC<CommentsProps> = (props) => {\r\n  const [comments, setComments] = useState<Comment[] | null>(null);\r\n  const [curPage, setCurPage] = useState(1);\r\n  const [pageNum, setPageNum] = useState(1);\r\n\r\n  const send = async (pageNum: number, parentId: string) => {\r\n    const res = await queryComments(pageNum, parentId);\r\n    if (res.code === ErrorCode.Success) {\r\n      setPageNum(res.data.totalPage);\r\n      setComments(res.data.g);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    send(curPage, props.parentId);\r\n  }, [curPage, props.parentId]);\r\n\r\n  return (\r\n    <div>\r\n      {comments ? (\r\n        comments.map((item) => (\r\n          <Common\r\n            userName={item.nickname}\r\n            avatar={item.avatar}\r\n            content={item.content}\r\n            thumbup={item.thumbup}\r\n            replyNum={item.replyNum}\r\n            parentId={props.parentId}\r\n            commentTime={item.commentTime}\r\n            commentId={item.commentId}\r\n            islike={item.islike}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div>loading...</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(CommentFC);\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx",["282","283","284"],"import { FC, memo, useEffect, useRef, useState } from \"react\";\r\nimport Editor from \"../../mdEditor\";\r\nimport {\r\n  LikeOutlined,\r\n  CommentOutlined,\r\n  FormOutlined,\r\n  LikeFilled,\r\n  LoadingOutlined,\r\n  ShareAltOutlined,\r\n  WarningOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Image } from \"antd\";\r\nimport \"../style.scss\";\r\nimport { getReply, sendComment } from \"../../../../../../../../apis/comments\";\r\nimport { ErrorCode } from \"../../../../../../../../apis\";\r\nimport { wrapRequest } from \"../../../../../../../../utils/hooks\";\r\nimport { storage } from \"../../../../../../../../utils/shared\";\r\ninterface P {\r\n  userName: string;\r\n  avatar: string;\r\n  content: string;\r\n  thumbup: number | null;\r\n  parentId: string;\r\n  commentTime: string | null;\r\n  commentId: string;\r\n  islike: number;\r\n  replyNum?: number | null;\r\n  isRoot?: boolean;\r\n}\r\n\r\ninterface Sub {\r\n  at: string;\r\n  content: string;\r\n  nickname: string;\r\n  avatar: string;\r\n  userId: string;\r\n  commentId: string;\r\n  commentTime: null | string;\r\n  thumbup: null | number;\r\n  islike: number;\r\n}\r\n\r\nconst Common: FC<P> = ({\r\n  content,\r\n  commentTime,\r\n  parentId,\r\n  replyNum,\r\n  userName,\r\n  avatar,\r\n  thumbup,\r\n  commentId,\r\n  islike,\r\n  isRoot = true,\r\n}) => {\r\n  const [sub, setSub] = useState<Sub[]>([]);\r\n  const [visible, setVisible] = useState(false);\r\n  const [showSub, setShowSub] = useState(false);\r\n  const [subLoading, setSubLoading] = useState(false);\r\n  const editor = useRef<{\r\n    getContent(): string;\r\n  }>(null);\r\n\r\n  const queryReply = async () => {\r\n    setShowSub(!showSub);\r\n    if (sub.length) return;\r\n    if (showSub) return;\r\n    setSubLoading(true);\r\n    const res = await getReply(parentId);\r\n    setSubLoading(false);\r\n    if (res.code === ErrorCode.Success) {\r\n      setSub(res.data);\r\n    }\r\n  };\r\n\r\n  const dispatchComment = async () => {\r\n    console.log(editor.current?.getContent()!);\r\n\r\n    const res = await sendComment(\r\n      parentId,\r\n      storage.get(\"userId\")!,\r\n      editor.current?.getContent()!\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"comment-item\">\r\n        <div className=\"flex j-between a-center\">\r\n          <div className=\"header-avatar flex a-center\">\r\n            <Image\r\n              src={avatar}\r\n              alt={userName}\r\n              fallback={\r\n                \"https://assets.leetcode-cn.com/aliyun-lc-upload/default_avatar.png\"\r\n              }\r\n            />\r\n            <span>{userName}</span>\r\n          </div>\r\n          <span className=\"comment-time\">{commentTime}</span>\r\n        </div>\r\n        <div className=\"item-content\">{content}</div>\r\n        <div className=\"item-footer  flex \">\r\n          <div>\r\n            {islike === 1 ? <LikeFilled /> : <LikeOutlined />}\r\n            {thumbup || 0}\r\n          </div>\r\n          {isRoot && (\r\n            <div onClick={queryReply}>\r\n              <CommentOutlined />\r\n              查看{replyNum || 0}条评论\r\n            </div>\r\n          )}\r\n          <div onClick={setVisible.bind(null, !visible)}>\r\n            <FormOutlined />\r\n            回复\r\n          </div>\r\n          <div className=\"show-onHover\">\r\n            <ShareAltOutlined />\r\n            分享\r\n          </div>\r\n          <div className=\"show-onHover\">\r\n            <WarningOutlined />\r\n            举报\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"sub\">\r\n        <div className=\"edit\">\r\n          {visible && (\r\n            <Editor\r\n              ref={editor}\r\n              onSubmit={dispatchComment}\r\n              mentionName={userName}\r\n            />\r\n          )}\r\n        </div>\r\n        {isRoot && showSub && (\r\n          <div className=\"sub-comment\">\r\n            {sub.map((item, i) => {\r\n              return (\r\n                <Common\r\n                  key={i}\r\n                  userName={item.nickname}\r\n                  avatar={item.avatar}\r\n                  parentId={parentId}\r\n                  islike={item.islike}\r\n                  thumbup={item.thumbup ? item.thumbup : 0}\r\n                  content={item.content}\r\n                  commentTime={item.commentTime}\r\n                  commentId={item.commentId}\r\n                  isRoot={false}\r\n                />\r\n              );\r\n            })}\r\n            {subLoading && (\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <LoadingOutlined />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default memo(Common);\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\mdEditor\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\apis\\comments.ts",[],"D:\\PROJECT\\leetCode\\src\\mock\\questionIndex.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\actions.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\dif-tag\\DigTag.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\reducer.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\SolutionList.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Footer.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Header.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\epic.ts",[],"D:\\PROJECT\\leetCode\\src\\apis\\solution.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-right\\index.tsx",[],{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":6,"column":3,"nodeType":"291","messageId":"292","endLine":6,"endColumn":11},{"ruleId":"285","replacedBy":"286"},{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"293","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":18},{"ruleId":"289","severity":1,"message":"294","line":1,"column":20,"nodeType":"291","messageId":"292","endLine":1,"endColumn":31},{"ruleId":"289","severity":1,"message":"295","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":13},{"ruleId":"289","severity":1,"message":"296","line":3,"column":10,"nodeType":"291","messageId":"292","endLine":3,"endColumn":14},{"ruleId":"289","severity":1,"message":"297","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":14},{"ruleId":"289","severity":1,"message":"298","line":6,"column":8,"nodeType":"291","messageId":"292","endLine":6,"endColumn":17},{"ruleId":"289","severity":1,"message":"299","line":7,"column":8,"nodeType":"291","messageId":"292","endLine":7,"endColumn":14},{"ruleId":"300","severity":1,"message":"301","line":49,"column":11,"nodeType":"302","endLine":49,"endColumn":44},{"ruleId":"300","severity":1,"message":"301","line":54,"column":11,"nodeType":"302","endLine":54,"endColumn":42},{"ruleId":"300","severity":1,"message":"303","line":59,"column":11,"nodeType":"302","endLine":59,"endColumn":80},{"ruleId":"289","severity":1,"message":"304","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":20},{"ruleId":"289","severity":1,"message":"305","line":1,"column":22,"nodeType":"291","messageId":"292","endLine":1,"endColumn":27},{"ruleId":"300","severity":1,"message":"303","line":10,"column":23,"nodeType":"302","endLine":10,"endColumn":26},{"ruleId":"289","severity":1,"message":"306","line":22,"column":41,"nodeType":"291","messageId":"292","endLine":22,"endColumn":45},{"ruleId":"285","replacedBy":"307"},{"ruleId":"287","replacedBy":"308"},{"ruleId":"309","severity":1,"message":"310","line":30,"column":10,"nodeType":"291","messageId":"292","endLine":30,"endColumn":14},{"ruleId":"309","severity":1,"message":"311","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":21},{"ruleId":"309","severity":1,"message":"312","line":1,"column":23,"nodeType":"291","messageId":"292","endLine":1,"endColumn":38},{"ruleId":"309","severity":1,"message":"313","line":5,"column":6,"nodeType":"291","messageId":"292","endLine":5,"endColumn":19},{"ruleId":"314","severity":1,"message":"315","line":70,"column":8,"nodeType":"316","endLine":70,"endColumn":17,"suggestions":"317"},{"ruleId":"314","severity":1,"message":"318","line":70,"column":9,"nodeType":"319","endLine":70,"endColumn":16},{"ruleId":"309","severity":1,"message":"320","line":26,"column":5,"nodeType":"291","messageId":"292","endLine":26,"endColumn":8},{"ruleId":"289","severity":1,"message":"321","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":19},{"ruleId":"289","severity":1,"message":"322","line":9,"column":10,"nodeType":"291","messageId":"292","endLine":9,"endColumn":24},{"ruleId":"309","severity":1,"message":"323","line":4,"column":10,"nodeType":"291","messageId":"292","endLine":4,"endColumn":15},{"ruleId":"309","severity":1,"message":"324","line":13,"column":19,"nodeType":"291","messageId":"292","endLine":13,"endColumn":29},{"ruleId":"309","severity":1,"message":"325","line":14,"column":10,"nodeType":"291","messageId":"292","endLine":14,"endColumn":17},{"ruleId":"309","severity":1,"message":"326","line":1,"column":20,"nodeType":"291","messageId":"292","endLine":1,"endColumn":29},{"ruleId":"309","severity":1,"message":"327","line":16,"column":10,"nodeType":"291","messageId":"292","endLine":16,"endColumn":21},{"ruleId":"309","severity":1,"message":"328","line":78,"column":11,"nodeType":"291","messageId":"292","endLine":78,"endColumn":14},"no-native-reassign",["329"],"no-negated-in-lhs",["330"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'useSelector' is defined but never used.","'store' is defined but never used.","'Card' is defined but never used.","'Header' is defined but never used.","'LoginMain' is defined but never used.","'Footer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Tag' is defined but never used.","'Space' is defined but never used.","'memo' is defined but never used.",["329"],["330"],"@typescript-eslint/no-unused-vars","'stat' is defined but never used.","'createStore' is defined but never used.","'combineReducers' is defined but never used.","'MappedReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'args'. Either include it or remove the dependency array.","ArrayExpression",["331"],"React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","'now' is assigned a value but never used.","'takeEvery' is defined but never used.","'TO_PHONE_LOGIN' is defined but never used.","'Flags' is defined but never used.","'setCurPage' is assigned a value but never used.","'pageNum' is assigned a value but never used.","'useEffect' is defined but never used.","'wrapRequest' is defined but never used.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"332","fix":"333"},"Update the dependencies array to be: [args]",{"range":"334","text":"335"},[1819,1828],"[args]"]