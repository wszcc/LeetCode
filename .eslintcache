[{"D:\\PROJECT\\leetCode\\src\\index.tsx":"1","D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts":"2","D:\\PROJECT\\leetCode\\src\\App.tsx":"3","D:\\PROJECT\\leetCode\\src\\router\\index.jsx":"4","D:\\PROJECT\\leetCode\\src\\router\\config.js":"5","D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js":"6","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js":"7","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js":"8","D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js":"9","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js":"10","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js":"11","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js":"12","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\index.js":"13","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js":"14","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js":"15","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js":"16","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\index.ts":"17","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\index.js":"18","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js":"19","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js":"20","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\components\\ResetPwdWindow\\index.jsx":"21","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\captchaInput.js":"22","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\phoneInput.js":"23","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\pwdLoginForm.js":"24","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\reducer.ts":"25","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\epic.ts":"26","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx":"27","D:\\PROJECT\\leetCode\\src\\mock\\questionIndex.js":"28","D:\\PROJECT\\leetCode\\src\\utils\\shared.ts":"29","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\constant.js":"30","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\actions.ts":"31","D:\\PROJECT\\leetCode\\src\\apis\\comments.ts":"32","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx":"33","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\index.ts":"34","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts":"35","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\index.tsx":"36","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-right\\index.tsx":"37","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx":"38","D:\\PROJECT\\leetCode\\src\\apis\\solution.ts":"39","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\dif-tag\\DigTag.tsx":"40","D:\\PROJECT\\leetCode\\src\\apis\\index.ts":"41","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Header.tsx":"42","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Footer.tsx":"43","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\components\\ResetPwdMain\\index.jsx":"44","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx":"45","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\SolutionList.tsx":"46","D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts":"47","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\mdEditor\\index.tsx":"48","D:\\PROJECT\\leetCode\\src\\config\\colors.ts":"49","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PwdLoginForm\\index.jsx":"50","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\index.jsx":"51","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\components\\ResetPwdMain\\PhoneResetForm\\index.jsx":"52","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\phoneInput.js":"53","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\captchaInput.js":"54","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\pwdLoginForm.js":"55","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\CaptchaInput\\index.jsx":"56","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\PhoneInput\\index.jsx":"57","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts":"58","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx":"59","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx":"60","D:\\PROJECT\\leetCode\\src\\config\\code.ts":"61","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts":"62","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx":"63","D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx":"64","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\index.js":"65","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\index.js":"66","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\footer\\Footer.tsx":"67","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\index.jsx":"68","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\reudcer\\list.js":"69","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\sagaRoot.js":"70","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\reducers\\profile_reqHistory.js":"71","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\WindowWarp\\index.tsx":"72","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Side\\index.jsx":"73","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\index.jsx":"74","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Head\\index.jsx":"75","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\redux_test.js":"76","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\req_historySaga.js":"77","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\req_questionInfo.js":"78","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\indexNav\\indexNav.jsx":"79","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\list\\list.jsx":"80","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\action\\index.js":"81","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginWindow\\index.tsx":"82","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\mock\\index.js":"83","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\router\\config.js":"84","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\search\\index.jsx":"85","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\randomStart\\index.jsx":"86","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginFooter\\index.tsx":"87","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\InfoDisplay\\index.jsx":"88","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\QuestionInfo\\index.jsx":"89","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\index.tsx":"90","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\actions\\proReqHistory_action.js":"91","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\ErrorInfo\\index.tsx":"92"},{"size":417,"mtime":1611926463004,"results":"93","hashOfConfig":"94"},{"size":440,"mtime":1611827611826,"results":"95","hashOfConfig":"94"},{"size":263,"mtime":1613704674959,"results":"96","hashOfConfig":"94"},{"size":492,"mtime":1611827611827,"results":"97","hashOfConfig":"94"},{"size":669,"mtime":1611827611826,"results":"98","hashOfConfig":"94"},{"size":914,"mtime":1614603412200,"results":"99","hashOfConfig":"94"},{"size":326,"mtime":1614603412211,"results":"100","hashOfConfig":"94"},{"size":429,"mtime":1614603412210,"results":"101","hashOfConfig":"94"},{"size":285,"mtime":1614603412196,"results":"102","hashOfConfig":"94"},{"size":273,"mtime":1614603412216,"results":"103","hashOfConfig":"94"},{"size":1819,"mtime":1611827611824,"results":"104","hashOfConfig":"94"},{"size":366,"mtime":1614091334240,"results":"105","hashOfConfig":"94"},{"size":370,"mtime":1612057753306,"results":"106","hashOfConfig":"94"},{"size":600,"mtime":1614171717105,"results":"107","hashOfConfig":"94"},{"size":1141,"mtime":1614171717103,"results":"108","hashOfConfig":"94"},{"size":124,"mtime":1611827611822,"results":"109","hashOfConfig":"94"},{"size":1022,"mtime":1614171717107,"results":"110","hashOfConfig":"94"},{"size":303,"mtime":1614171830881,"results":"111","hashOfConfig":"94"},{"size":3860,"mtime":1614171717104,"results":"112","hashOfConfig":"94"},{"size":1123,"mtime":1614071413079,"results":"113","hashOfConfig":"94"},{"size":440,"mtime":1614171830883,"results":"114","hashOfConfig":"94"},{"size":1290,"mtime":1614171830881,"results":"115","hashOfConfig":"94"},{"size":1429,"mtime":1614171830882,"results":"116","hashOfConfig":"94"},{"size":1722,"mtime":1614171830882,"results":"117","hashOfConfig":"94"},{"size":813,"mtime":1614071413079,"results":"118","hashOfConfig":"94"},{"size":1277,"mtime":1614170971364,"results":"119","hashOfConfig":"94"},{"size":1090,"mtime":1613704674963,"results":"120","hashOfConfig":"94"},{"size":2126,"mtime":1614171500635,"results":"121","hashOfConfig":"94"},{"size":3992,"mtime":1614089446868,"results":"122","hashOfConfig":"94"},{"size":1782,"mtime":1614171830881,"results":"123","hashOfConfig":"94"},{"size":635,"mtime":1614071413079,"results":"124","hashOfConfig":"94"},{"size":1765,"mtime":1614607755746,"results":"125","hashOfConfig":"94"},{"size":291,"mtime":1614171717106,"results":"126","hashOfConfig":"94"},{"size":2586,"mtime":1614170971365,"results":"127","hashOfConfig":"94"},{"size":341,"mtime":1614171717106,"results":"128","hashOfConfig":"94"},{"size":657,"mtime":1614170971362,"results":"129","hashOfConfig":"94"},{"size":1941,"mtime":1614609279652,"results":"130","hashOfConfig":"94"},{"size":2926,"mtime":1614612643205,"results":"131","hashOfConfig":"94"},{"size":978,"mtime":1614170971360,"results":"132","hashOfConfig":"94"},{"size":494,"mtime":1614071413078,"results":"133","hashOfConfig":"94"},{"size":4420,"mtime":1614071265146,"results":"134","hashOfConfig":"94"},{"size":168,"mtime":1614170971362,"results":"135","hashOfConfig":"94"},{"size":168,"mtime":1614170971362,"results":"136","hashOfConfig":"94"},{"size":1320,"mtime":1614614194909,"results":"137","hashOfConfig":"94"},{"size":4703,"mtime":1614614272195,"results":"138","hashOfConfig":"94"},{"size":1730,"mtime":1614170971362,"results":"139","hashOfConfig":"94"},{"size":2159,"mtime":1614605316842,"results":"140","hashOfConfig":"94"},{"size":2115,"mtime":1614613179240,"results":"141","hashOfConfig":"94"},{"size":125,"mtime":1612419281391,"results":"142","hashOfConfig":"94"},{"size":5151,"mtime":1614603412198,"results":"143","hashOfConfig":"94"},{"size":5205,"mtime":1614603412198,"results":"144","hashOfConfig":"94"},{"size":3274,"mtime":1614603412216,"results":"145","hashOfConfig":"94"},{"size":1002,"mtime":1614171830881,"results":"146","hashOfConfig":"94"},{"size":885,"mtime":1614171830880,"results":"147","hashOfConfig":"94"},{"size":1204,"mtime":1614171830881,"results":"148","hashOfConfig":"94"},{"size":2977,"mtime":1614603412197,"results":"149","hashOfConfig":"94"},{"size":5846,"mtime":1614614021630,"results":"150","hashOfConfig":"94"},{"size":1338,"mtime":1613440428650,"results":"151","hashOfConfig":"94"},{"size":2774,"mtime":1614603338793,"results":"152","hashOfConfig":"94"},{"size":1683,"mtime":1614171717105,"results":"153","hashOfConfig":"94"},{"size":90,"mtime":1612419297472,"results":"154","hashOfConfig":"94"},{"size":859,"mtime":1612419281395,"results":"155","hashOfConfig":"94"},{"size":3335,"mtime":1614171717105,"results":"156","hashOfConfig":"94"},{"size":1669,"mtime":1613704674961,"results":"157","hashOfConfig":"94"},{"size":172,"mtime":1614603412215,"results":"158","hashOfConfig":"94"},{"size":354,"mtime":1614603412209,"results":"159","hashOfConfig":"94"},{"size":2390,"mtime":1614603412211,"results":"160","hashOfConfig":"94"},{"size":790,"mtime":1614603412214,"results":"161","hashOfConfig":"94"},{"size":416,"mtime":1614603412215,"results":"162","hashOfConfig":"94"},{"size":284,"mtime":1614603412210,"results":"163","hashOfConfig":"94"},{"size":369,"mtime":1614603412209,"results":"164","hashOfConfig":"94"},{"size":4601,"mtime":1614603412200,"results":"165","hashOfConfig":"94"},{"size":2130,"mtime":1614603412208,"results":"166","hashOfConfig":"94"},{"size":1701,"mtime":1614603412206,"results":"167","hashOfConfig":"94"},{"size":821,"mtime":1614603412201,"results":"168","hashOfConfig":"94"},{"size":92,"mtime":1614603412210,"results":"169","hashOfConfig":"94"},{"size":374,"mtime":1614603412210,"results":"170","hashOfConfig":"94"},{"size":369,"mtime":1614603412210,"results":"171","hashOfConfig":"94"},{"size":1924,"mtime":1614603412212,"results":"172","hashOfConfig":"94"},{"size":1192,"mtime":1614603412213,"results":"173","hashOfConfig":"94"},{"size":579,"mtime":1614603412215,"results":"174","hashOfConfig":"94"},{"size":787,"mtime":1614603412199,"results":"175","hashOfConfig":"94"},{"size":645,"mtime":1614603412214,"results":"176","hashOfConfig":"94"},{"size":554,"mtime":1614603412214,"results":"177","hashOfConfig":"94"},{"size":276,"mtime":1614603412214,"results":"178","hashOfConfig":"94"},{"size":236,"mtime":1614603412213,"results":"179","hashOfConfig":"94"},{"size":2070,"mtime":1614603412196,"results":"180","hashOfConfig":"94"},{"size":4499,"mtime":1614603412203,"results":"181","hashOfConfig":"94"},{"size":1410,"mtime":1614603412204,"results":"182","hashOfConfig":"94"},{"size":1815,"mtime":1614603412198,"results":"183","hashOfConfig":"94"},{"size":149,"mtime":1614603412209,"results":"184","hashOfConfig":"94"},{"size":550,"mtime":1614603412196,"results":"185","hashOfConfig":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},"12bdsu8",{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"196"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"196"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"196"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"196"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"196"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"188"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"188"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"188"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"196"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"196"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"196"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"188"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"196"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"196"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"196"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"196"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"196"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"188"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},"D:\\PROJECT\\leetCode\\src\\index.tsx",[],["391","392"],"D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts",[],"D:\\PROJECT\\leetCode\\src\\App.tsx",[],"D:\\PROJECT\\leetCode\\src\\router\\index.jsx",["393"],"import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport routerMap from \"./config\";\r\n\r\n\r\nconst RouterView = () => {\r\n  return (\r\n    <Router>\r\n      {/* <Redirect to=\"/home\"></Redirect> */}\r\n      <Switch>\r\n        {routerMap.map((item,index) => (\r\n          <Route key={index} path={item.path} component={item.component}></Route>\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RouterView;\r\n",["394","395"],"D:\\PROJECT\\leetCode\\src\\router\\config.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js",["396"],"import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport ResetPwdWindow from './components/ResetPwdWindow'\r\n\r\nconst resetPassword = (props) =>{\r\n    return <div className='login'>\r\n        <ResetPwdWindow />\r\n    </div>\r\n}\r\n\r\nexport default resetPassword","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js",["397","398","399"],"import React from \"react\";\r\nimport Logo from \"../../../../assets/imgs/logo.svg\";\r\nimport \"./header.scss\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n  RightSquareOutlined,\r\n  BellOutlined,\r\n  UserOutlined,\r\n  DownOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nfunction Header(props) {\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.alipay.com/\"\r\n        >\r\n          题目以中文显示\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.taobao.com/\"\r\n        >\r\n          题目以英文显示\r\n        </a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div className=\"header\">\r\n      <ul className=\"header-nav\">\r\n        <li>\r\n          <img src={Logo} alt=\"力扣\"></img>\r\n        </li>\r\n        <li>学习</li>\r\n        <li>题库</li>\r\n        <li>讨论</li>\r\n        <li>竞赛</li>\r\n        <li>求职</li>\r\n        <li className=\"shop\">商店</li>\r\n        <li>\r\n          <a className=\"download\" href=\"#\">\r\n            下载 App\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"member\" href=\"#\">\r\n            Plus 会员\r\n          </a>\r\n        </li>\r\n        <Dropdown overlay={menu}>\r\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\r\n            中 <DownOutlined />\r\n          </a>\r\n        </Dropdown>\r\n        <li>\r\n          <RightSquareOutlined />\r\n        </li>\r\n        <li>\r\n          <BellOutlined />\r\n        </li>\r\n        <li>\r\n          <Link to='/profile'><UserOutlined /></Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js",["400"],"import { takeEvery } from \"redux-saga/effects\";\r\n\r\n\r\nfunction* watchFetchData() {\r\n  \r\n}\r\n\r\nexport default watchFetchData;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js",["401"],"import \"./desc.scss\";\r\nimport \"../../../../../../mock/questionIndex.js\";\r\nimport { getDescData, likeQuestion,  } from \"../../../../../../apis/comments\";\r\nimport DiffTag from \"../components/dif-tag/DigTag\";\r\nimport { devContetn } from \"../../../../../../utils/shared\";\r\nimport {\r\n  likeAction,\r\n  unLikeAction,\r\n  collectAction,\r\n  unCollectAction,\r\n} from \"../../../../store/actions\";\r\nimport {\r\n  LikeOutlined,\r\n  HeartOutlined,\r\n  RotateRightOutlined,\r\n  SwapOutlined,\r\n  BellOutlined,\r\n  MessageOutlined,\r\n  LikeFilled,\r\n  HeartFilled,\r\n} from \"@ant-design/icons\";\r\nimport { Fragment, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst Desc = (props) => {\r\n  let [descData, setDescData] = useState({ code: 0 });\r\n  let {\r\n    like,\r\n    dispatchLike,\r\n    dispatchUnlike,\r\n    collect,\r\n    dispatchCollect,\r\n    dispatchUnCollect,\r\n  } = props;\r\n  useEffect(() => {\r\n    getDescData().then((res) => {\r\n      setDescData(res.data);\r\n    });\r\n  }, [descData.code]);\r\n  return (\r\n    <div className=\"desc\">\r\n      {descData.code ? (\r\n        <>\r\n          <div className=\"title\">1.{descData.data.title}</div>\r\n          <ul className=\"tag\">\r\n            <li>\r\n              难度 <DiffTag difficulty={descData.data.difficulty} />\r\n            </li>\r\n            <li>\r\n              {like ? (\r\n                <LikeFilled onClick={dispatchUnlike} />\r\n              ) : (\r\n                <LikeOutlined onClick={dispatchLike} />\r\n              )}\r\n              {descData.data.thumbup}\r\n            </li>\r\n            <li>\r\n              {collect ? (\r\n                <HeartFilled onClick={dispatchUnCollect} />\r\n              ) : (\r\n                <HeartOutlined onClick={dispatchCollect} />\r\n              )}\r\n              收藏\r\n            </li>\r\n            <li>\r\n              <RotateRightOutlined /> 分享\r\n            </li>\r\n            <li>\r\n              <SwapOutlined /> 切换为英文\r\n            </li>\r\n            <li>\r\n              <BellOutlined /> 接收动态\r\n            </li>\r\n            <li>\r\n              <MessageOutlined /> 反馈\r\n            </li>\r\n          </ul>\r\n          <div className=\"content\">\r\n            {devContetn(descData.data.content).map((p, i) => (\r\n              <Fragment key={i}>\r\n                <p>{p} </p>\r\n                <br />\r\n              </Fragment>\r\n            ))}\r\n            <ul className='submit-number'>\r\n              <li>通过次数 {descData.data.commit_num}</li>\r\n              <li>提交次数 {descData.data.answe_num}</li>\r\n            </ul>\r\n          </div>\r\n          <ul className='footer'>\r\n            <li>在真实的面试中遇到过这道题？ <button>是</button> <button>否</button></li>\r\n            <li>力扣(leetCode)版权所有</li>\r\n            <li>相关企业</li>\r\n            <li>相关标签</li>\r\n            <li>相似题目</li>\r\n            <li>显示提示1</li>\r\n            <li>显示提示2</li>\r\n            <li>显示提示3</li>\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    like: state.desc.like,\r\n    collect: state.desc.collect,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    dispatchLike() {\r\n      const disLikeAction = likeAction();\r\n      dispatch(disLikeAction);\r\n      likeQuestion(\"question\", true, \"jsaodfnasd\");\r\n    },\r\n    dispatchUnlike() {\r\n      const disUnlikeAction = unLikeAction();\r\n      dispatch(disUnlikeAction);\r\n      likeQuestion(\"question\", false, \"jsaodfnasd\");\r\n    },\r\n    dispatchCollect() {\r\n      const disLikeAction = collectAction();\r\n      dispatch(disLikeAction);\r\n    },\r\n    dispatchUnCollect() {\r\n      const disUnlikeAction = unCollectAction();\r\n      dispatch(disUnlikeAction);\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Desc);\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js",["402","403","404"],"import { Table, Tag, Space } from \"antd\";\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport { getCommit } from '../../../../../../apis/comments'\r\nimport { getKeys } from '../../../../../../utils/shared'\r\nconst columns = [\r\n  {\r\n    title: \"提交时间\",\r\n    dataIndex: \"commitTime\",\r\n    key: \"commitTime\",\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: \"提交结果\",\r\n    dataIndex: \"commitResult\",\r\n    key: \"commitResult\",\r\n  },\r\n  {\r\n    title: \"运行时间\",\r\n    dataIndex: \"runtime\",\r\n    key: \"runtime\",\r\n  },\r\n  {\r\n    title: \"语言\",\r\n    dataIndex: \"word\",\r\n    key: \"java\",\r\n  },\r\n];\r\n\r\nconst SubmitRecord = () => {\r\n  const [commitList, setCommitList] = useState()\r\n  useEffect(() =>{\r\n    getCommit('josdnf')\r\n    .then(res =>{\r\n      setCommitList(getKeys(res.data.data.commitList))\r\n      console.log(getKeys(res.data.data.commitList))\r\n    })\r\n  },[])\r\n  return (\r\n    <div className=\"submit-record\">\r\n      {\r\n        commitList? <Table pagination={false} columns={columns} dataSource={commitList} /> :''\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(SubmitRecord);\r\n","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\components\\ResetPwdWindow\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\captchaInput.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\phoneInput.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\pwdLoginForm.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\reducer.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\epic.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\mock\\questionIndex.js",[],"D:\\PROJECT\\leetCode\\src\\utils\\shared.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\constant.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\actions.ts",[],"D:\\PROJECT\\leetCode\\src\\apis\\comments.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts",["405","406","407"],"import { createStore, combineReducers } from 'redux'\r\nimport reducer, { initState } from './reducer'\r\nimport { produce } from 'immer'\r\n\r\ntype MappedReducer<T extends { [k: string]: (...args: any) => any }> = {\r\n  [K in keyof T]: ReturnType<T[K]>\r\n}\r\n\r\nconst editorConfigReducer = produce(reducer, initState)\r\n\r\nexport { editorConfigReducer }","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-right\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx",["408","409","410","411"],"D:\\PROJECT\\leetCode\\src\\apis\\solution.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\dif-tag\\DigTag.tsx",[],"D:\\PROJECT\\leetCode\\src\\apis\\index.ts",["412"],"import axios from 'axios'\r\nimport { message } from 'antd'\r\nimport { storage } from '../utils/shared'\r\n\r\ntype PendingQueue = ((...args: any) => void)[]\r\n\r\nconst BASE_URL = 'http://localhost:3000/api'\r\n\r\nconst CONNECT_LIMIT = 6 // 最大网络连接数\r\nconst TIMEOUT = 1000 * 10 //最大请求到期时间 10s\r\n\r\nexport enum ErrorCode {\r\n  Success = 200,\r\n  BadRequest = 400, /**参数类型或者字段错误，只展示给我们开发者看，我会log到控制台 */\r\n  UnAuthorized = 401,\r\n  Abort = 520,\r\n  Connect_Fail = 1314, /**由于用户网络断了等特殊情况导致的请求失败 */\r\n}\r\nconst CodeMap = {\r\n  [ErrorCode.Success]: \"请求成功\",\r\n  [ErrorCode.UnAuthorized]: \"请登陆\",\r\n  [ErrorCode.Connect_Fail]: \"网络连接失败\",\r\n  [ErrorCode.BadRequest]: \"出现未知异常\",\r\n  [ErrorCode.Abort]: \"请求取消\"\r\n}\r\nlet now = window.performance\r\n  ? () => performance.now()\r\n  : () => Date.now();\r\n\r\n/** 当前请求数 */\r\nlet requestNum = 0\r\nlet pendingQueue: PendingQueue = []\r\nlet isRefreshing = false\r\n\r\n/** 不需要token的请求 */\r\nconst whiteList = new Set([\r\n  '/user/resetToken',\r\n  '/user/login',\r\n  '/user/register',\r\n  '/user/checkEmail',\r\n  '/user/checkUserId',\r\n  '/user/sendActiveMail',\r\n  '/user/logout',\r\n  '/user/findBackPassword',\r\n  '/user/checkUserLegality',\r\n  '/token',\r\n  '/course/queryCourse'\r\n])\r\n\r\nconst request = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: TIMEOUT\r\n})\r\n\r\nrequest.interceptors.request.use(\r\n  async config => {\r\n    if (!storage.get('token') && !whiteList.has(config.url!)) {\r\n      config.cancelToken = new axios.CancelToken(c => c())\r\n      return config\r\n    }\r\n\r\n    if (!config.headers.priority && (isRefreshing || requestNum >= CONNECT_LIMIT)) { //如果正在请求新的token，代表当前token是过期了的\r\n      try {\r\n        await block() //等待前面的请求完\r\n      } catch (e) {//这里表示等待时间过长, 仍然取消请求\r\n        config.cancelToken = new axios.CancelToken(c => c())\r\n        config.data.message = '超时'\r\n        return config\r\n      }\r\n    }\r\n    config.headers = {\r\n      token: storage.get(\"token\") || \"\",\r\n      contentType: 'application/json;charset=utf-8',\r\n    }\r\n    return config\r\n  },\r\n  err => {\r\n    console.log('异常未知情况造成的错误'); /**正常情况应该永远不会出现这里 */\r\n    console.log(err);\r\n  }\r\n)\r\n\r\nrequest.interceptors.response.use(\r\n  async res => {\r\n    try {\r\n      return res\r\n    } finally {\r\n      requestNum--\r\n      send()\r\n    }\r\n  },\r\n  err => {\r\n    /** 只有网络连接失败和取消请求（没有携带token）会走到这里 */\r\n    try {\r\n      if (axios.isCancel(err)) { //是被取消的请求\r\n        if (!storage.get('token')) { //因为没有token取消的，需要重新登陆\r\n          return {\r\n            ...err,\r\n            data: {\r\n              message: \"未登录\",\r\n              code: ErrorCode.UnAuthorized\r\n            }\r\n          }\r\n        }\r\n        return {\r\n          ...err,\r\n          data: {\r\n            message: err.data.message,\r\n            code: ErrorCode.Abort\r\n          }\r\n        }\r\n      }\r\n      /** 网络异常 */\r\n      return {\r\n        ...err,\r\n        data: {\r\n          message: \"网络异常\",\r\n          code: ErrorCode.Connect_Fail\r\n        }\r\n      }\r\n    } finally {\r\n      requestNum--\r\n      send()\r\n    }\r\n  }\r\n)\r\n\r\nrequest.interceptors.response.use(\r\n  (res: any) => {\r\n    const code = res.data.code as ErrorCode\r\n\r\n    switch (code) {\r\n      case ErrorCode.Success: {\r\n        const newTK = res.headers.token\r\n        if (newTK && newTK !== res.config.headers.token) {\r\n          storage.set(\"token\", res.headers.token)\r\n        }\r\n        return res.data\r\n      }\r\n      default:\r\n        message.info(CodeMap[code])\r\n        return {\r\n          code: code,\r\n          message: res.data.message,\r\n          data: null\r\n        }\r\n    }\r\n  }\r\n)\r\n\r\nfunction block() {\r\n  return new Promise((resolve, reject) => {\r\n    const timerId: number = window.setTimeout(() => {\r\n      reject(undefined)\r\n    }, TIMEOUT)\r\n    pendingQueue.push(() => {\r\n      clearTimeout(timerId)\r\n      resolve(undefined)\r\n    })\r\n  })\r\n}\r\n\r\nfunction send() {\r\n  if (!isRefreshing && pendingQueue.length) {\r\n    const resolve = pendingQueue.shift()!\r\n    resolve()\r\n  }\r\n}\r\n\r\nexport default request\r\n\r\nexport interface Response<T = any> {\r\n  code: number,\r\n  message: string,\r\n  data: T\r\n}","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Header.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Footer.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\components\\ResetPwdMain\\index.jsx",["413"],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx",["414"],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\SolutionList.tsx",[],"D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts",["415","416"],"import produce, { Immutable } from \"immer\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport { Flags, LooseObj } from \"../shared\"\r\nimport { Modal } from 'antd'\r\nimport { Main_Dark, Main_Light } from \"../../config/colors\"\r\nimport { ErrorCode, Response } from '../../apis'\r\nimport { useParams } from \"react-router\"\r\ninterface Update<T> {\r\n  (updateFn: (draft: Immutable<T>) => void): void\r\n}\r\ninterface IConfirm {\r\n  msg?: string\r\n  title?: string\r\n  onOk?(): void\r\n  onCancel?(): void\r\n}\r\n\r\nexport const useImmer = <T extends LooseObj>(initState: T): [T, Update<T>] => {\r\n  const [state, setState] = useState<T>(initState)\r\n\r\n  const update: Update<T> = (updateFn) => {\r\n    const newState = produce<T>(state, updateFn)\r\n    setState(newState)\r\n  }\r\n  return [state, update]\r\n}\r\n\r\nexport const useConfirm = ({\r\n  msg = \"你确定吗\",\r\n  title = \"确定？\",\r\n  onOk,\r\n  onCancel\r\n}: IConfirm = {}) => {\r\n  return () => {\r\n    Modal.confirm({\r\n      title,\r\n      content: msg,\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      onOk,\r\n      onCancel,\r\n      okButtonProps: {\r\n        style: {\r\n          background: Main_Light,\r\n          color: \"#fff\"\r\n        }\r\n      },\r\n      cancelButtonProps: {\r\n        style: {\r\n          color: Main_Dark\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const wrapRequest = <T extends any[], R>(req: (...args: T) => Promise<Response<R>>) => {\r\n  const useReqImpl = (...args: T): [Response<R>[\"data\"], Flags, () => void] => {\r\n    const [data, setData] = useState<Response[\"data\"]>(null)\r\n    const [flag, setFlag] = useState(Flags.Normal)\r\n\r\n    const send = useCallback(async () => {\r\n      setFlag(Flags.Pending)\r\n      const res = await req(...args)\r\n      if (res.code === ErrorCode.Success) {\r\n        setFlag(Flags.Success)\r\n      } else {\r\n        setFlag(Flags.Fail)\r\n      }\r\n      setData(res.data)\r\n    }, [...args])\r\n\r\n    useEffect(() => {\r\n      send()\r\n    }, [send])\r\n\r\n    return [data, flag, send]\r\n  }\r\n  return useReqImpl\r\n}\r\n\r\nexport const useGetQuestionId = () => {\r\n  const { questionId } = useParams<{\r\n    questionId: string | undefined\r\n  }>()\r\n  return questionId\r\n}","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\mdEditor\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\config\\colors.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PwdLoginForm\\index.jsx",["417","418","419"],"import { Form, Button, Input } from 'antd';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { EmptyUsername, EmptyPassword } from '../ErrorInfo/index'\r\nimport './index.scss'\r\n\r\n\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport {\r\n    beEmptyPwd,\r\n    beEmptyUername,\r\n    beInvalid,\r\n    notBeEmptyPwd,\r\n    notBeEmptyUsername,\r\n    notBeInvalid,\r\n    breakPwdDefault,\r\n    breakUsernameDefault,\r\n    keepPwdDefault,\r\n    keepUsernameDefault,\r\n    onPwdChange,\r\n    onUsernameChange\r\n} from '../../../store/actions/pwdLoginForm'\r\n\r\n\r\n\r\n\r\nconst PhoneLoginForm = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const isUsernameKeepDefault = useSelector(state => state.pwdLoginForm.isUsernameKeepDefault, shallowEqual);\r\n    const isPwdKeepDefault = useSelector(state => state.pwdLoginForm.isPwdKeepDefault, shallowEqual);\r\n    const isInValid = useSelector(state => state.pwdLoginForm.isInvalid, shallowEqual);\r\n    const isUsernameEmpty = useSelector(state => state.pwdLoginForm.isUsernameEmpty, shallowEqual);\r\n    const isPwdEmpty = useSelector(state => state.pwdLoginForm.isPwdEmpty, shallowEqual);\r\n    const username = useSelector(state => state.pwdLoginForm.username, shallowEqual);\r\n    const password = useSelector(state => state.pwdLoginForm.password, shallowEqual);\r\n\r\n    const dispacth = useDispatch()\r\n\r\n\r\n    // 将表单填入的信息提交\r\n    const onFinish = () => {\r\n        // const { username, password } = values;\r\n        if (username === '') {\r\n            dispacth(breakUsernameDefault());\r\n            dispacth(beEmptyUername());\r\n        }\r\n        if (password === '') {\r\n            dispacth(breakPwdDefault());\r\n            dispacth(beEmptyPwd());\r\n        }\r\n\r\n        console.log(username, password);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    const listenUsername = e => {\r\n        dispacth(keepUsernameDefault());\r\n\r\n        let username = e.target.value;\r\n\r\n        // 更新 username\r\n        dispacth(onUsernameChange(username));\r\n\r\n        // isEmpty\r\n        const isEmpty = username === '';\r\n        if (isEmpty) dispacth(beEmptyUername());\r\n        else dispacth(notBeEmptyUsername());\r\n    }\r\n    const listenPassword = e => {\r\n        dispacth(keepPwdDefault());\r\n\r\n        let password = e.target.value;\r\n\r\n        // 更新 password\r\n        dispacth(onPwdChange(password));\r\n\r\n        // isEmpty\r\n        const isEmpty = password === '';\r\n        if (isEmpty) dispacth(beEmptyPwd());\r\n        else dispacth(notBeEmptyPwd());\r\n    }\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form\r\n            className='pwd-login-form'\r\n            name='pwd_login_form'\r\n            // onFinish={onFinish}\r\n            form={form}\r\n            initialValues={{\r\n                username: '',\r\n                password: ''\r\n            }}\r\n            {...props}\r\n        >\r\n            <Form.Item\r\n                className='pwd-login-form-item username-input-item'\r\n                name='username'\r\n                style={\r\n                    isUsernameKeepDefault ? { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ } :\r\n                        isUsernameEmpty ? { marginBottom: '40px' } :\r\n                            { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ }\r\n                }\r\n                help={\r\n                    isUsernameKeepDefault ? <></> :\r\n                        isUsernameEmpty ? <EmptyUsername /> :\r\n                            <></>\r\n                }\r\n                validateStatus={\r\n                    isUsernameKeepDefault ? 'success' :\r\n                        isUsernameEmpty ? 'error' : 'success'\r\n            \r\n                }\r\n            >\r\n                <Input className='username-input' placeholder='手机号 / 邮箱'onChange={listenUsername} />\r\n            </Form.Item>\r\n\r\n\r\n\r\n            <Form.Item\r\n                className='pwd-login-form-item password-input-item'\r\n                name=\"password\"\r\n                style={\r\n                    isPwdKeepDefault ? { marginBottom: '24px' } :\r\n                        isPwdEmpty ? { marginBottom: '40px' } : { marginBottom: '24px' }\r\n                }\r\n                help={\r\n                    isPwdKeepDefault ? <></> :\r\n                        isPwdEmpty ? <EmptyPassword /> :\r\n                            <></>\r\n                }\r\n                validateStatus={\r\n                    isPwdKeepDefault ? 'success' :\r\n                        isPwdEmpty ? 'error' : 'success'\r\n                }\r\n            >\r\n                <Input.Password className='password-input' placeholder='输入密码' onChange={listenPassword} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                className='pwd-login-form-item primary-button-item'\r\n            >\r\n                <Button \r\n                    // loading={true}\r\n                    className='primary-button' \r\n                    type='primary' \r\n                    onClick={onFinish} \r\n                    style={{ width: '100%' }}>登录</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PhoneLoginForm","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\index.jsx",["420","421","422"],"import { Form, Button, message } from 'antd';\r\nimport React, { useEffect, useContext } from 'react';\r\nimport PhoneInput from './PhoneInput'\r\nimport CaptchaInput from './CaptchaInput'\r\n\r\nimport { InvalidPhoneNumber, EmptyPhoneNumber, EmptyCaptcha } from '../ErrorInfo/index'\r\nimport './index.scss'\r\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\r\nimport { beEmptyCaptcha, breakCaptchaDefault } from '../../../store/actions/captchaInput'\r\nimport { beEmptyNumber, breakPhoneDefault } from '../../../store/actions/phoneInput'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst PhoneLoginForm = (props) => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n\r\n    const isPhoneKeepDefault = useSelector(state => state.phoneInput.isKeepDefault, shallowEqual);\r\n    const isCaptchaKeepDefault = useSelector(state => state.captchaInput.isKeepDefault, shallowEqual);\r\n    const isInValidPhoneNumber = useSelector(state => state.phoneInput.isInvalid, shallowEqual);\r\n    const isPhoneEmpty = useSelector(state => state.phoneInput.isEmpty, shallowEqual);\r\n    const isCaptchaEmpty = useSelector(state => state.captchaInput.isEmpty, shallowEqual);\r\n\r\n    // const isPhoneInputOnBlur = useSelector(state => state.phoneInput.isOnBlur, shallowEqual);\r\n\r\n\r\n    const dispacth = useDispatch()\r\n    /* \r\n\r\n        需求：\r\n            1. 用户在输入完手机号，并且失去该输入框焦点的时候，检测输入的手机号是否正确\r\n                * 正确的手机号需要将输入框的背景变淡蓝色，并且使获取验证码的按钮解除 disabled\r\n                * 输入错误的时候提示：error\r\n                    * 用户再次进行输入的时候取消 error 保持默认状态\r\n                \r\n            2. 用户在点击按钮的检测手机号输入框和验证码输入框是否为空\r\n                * 如果为空提示：error\r\n    \r\n    */\r\n\r\n\r\n    // 将表单填入的信息提交\r\n    const onFinish = (values) => {\r\n        const { captcha: { captchaValue }, phone: { phoneNumber } } = values;\r\n        if (captchaValue === '') {\r\n            dispacth(breakCaptchaDefault());\r\n            dispacth(beEmptyCaptcha());\r\n        }\r\n        if (phoneNumber === '') {\r\n            dispacth(breakPhoneDefault());\r\n            dispacth(beEmptyNumber());\r\n        }\r\n\r\n        // message.error('验证码错误，请重新验证');\r\n        console.log(values);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Form\r\n            className='phone-login-form'\r\n            name='phone_login_form'\r\n            onFinish={onFinish}\r\n            form={form}\r\n            initialValues={{\r\n                phone: {\r\n                    selectValue: '+86',\r\n                    phoneNumber: ''\r\n                },\r\n                captcha: {\r\n                    captchaValue: ''\r\n                }\r\n            }}\r\n            {...props}\r\n        >\r\n            <Form.Item\r\n                style={\r\n                    isPhoneKeepDefault ? { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ } :\r\n                        isPhoneEmpty ? { marginBottom: '40px' } :\r\n                            isInValidPhoneNumber ? { marginBottom: '40px' } :\r\n                                { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ }\r\n                }\r\n                className='phone-login-form-item phone-input-item'\r\n                name='phone'\r\n                help={\r\n                    isPhoneKeepDefault ? <></> :\r\n                        isPhoneEmpty ? <EmptyPhoneNumber /> :\r\n                            isInValidPhoneNumber ? <InvalidPhoneNumber /> :\r\n                                <></>\r\n                }\r\n                validateStatus={\r\n                    isPhoneKeepDefault ? 'success' :\r\n                        isPhoneEmpty ? 'error' :\r\n                        isInValidPhoneNumber ? 'error' : 'success'\r\n                }\r\n            >\r\n                <PhoneInput />\r\n            </Form.Item>\r\n\r\n\r\n\r\n            <Form.Item\r\n                style={\r\n                    isCaptchaKeepDefault ? { marginBottom: '24px' } :\r\n                        isCaptchaEmpty ? { marginBottom: '40px' } : { marginBottom: '24px' }\r\n                }\r\n                className='phone-login-form-item captcha-input-item'\r\n                name=\"captcha\"\r\n                help={\r\n                    isCaptchaKeepDefault ? <></> :\r\n                        isCaptchaEmpty ? <EmptyCaptcha /> :\r\n                            <></>\r\n                }\r\n                validateStatus={\r\n                    isCaptchaKeepDefault ? 'success' :\r\n                        isCaptchaEmpty ? 'error' : 'success'\r\n                }\r\n            >\r\n                <CaptchaInput />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                className='phone-login-form-item primary-button-item'\r\n            >\r\n                <Button \r\n                    className='primary-button' \r\n                    type='primary' \r\n                    htmlType='submit' \r\n                    style={{ width: '100%' }}\r\n                >\r\n                    登录 / 注册\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default PhoneLoginForm\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\components\\ResetPwdMain\\PhoneResetForm\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\phoneInput.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\captchaInput.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\pwdLoginForm.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\CaptchaInput\\index.jsx",["423"],"import { Input, Button } from 'antd';\r\nimport { useCallback, shallowEqual, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n    beEmptyCaptcha, \r\n    notBeEmptyCaptcha, \r\n    loading, \r\n    cancelLoading, \r\n    countDown, \r\n    countDownEnd,\r\n    onCaptchaChange,\r\n    keepCaptchaDefault\r\n} from '../../../../store/actions/captchaInput'\r\nimport './index.scss'\r\n\r\n\r\n\r\nconst CaptchaInput = ({ onChange, value = {} }) => {\r\n    const dispacth = useDispatch();\r\n    const captchaValue = useSelector(allStates => allStates.captchaInput.value, shallowEqual);\r\n    const isInvalid = useSelector(allStates => allStates.phoneInput.isInvalid, shallowEqual);\r\n    const isLoading = useSelector(allStates => allStates.captchaInput.isLoading, shallowEqual);\r\n    const isCountDown = useSelector(allStates => allStates.captchaInput.isCountDown, shallowEqual);\r\n    const [seconds, setSeconds] = useState(5);\r\n\r\n\r\n\r\n    // 让当前控件 onChange 的时候与 Form.Item 产生交互\r\n    const triggerChange = useCallback((changedValue) => {\r\n        if (onChange) {\r\n            onChange({\r\n                captchaValue,\r\n                ...value,\r\n                ...changedValue\r\n            });\r\n        }\r\n    }, [captchaValue, value, onChange]);\r\n\r\n    const defOnChange = useCallback((e) => {\r\n        const captchaValue = e.target.value;\r\n        dispacth(keepCaptchaDefault());\r\n        dispacth(onCaptchaChange(captchaValue));   \r\n        triggerChange({\r\n            captchaValue\r\n        });\r\n\r\n        const isEmpty = captchaValue === '';\r\n        if (isEmpty) dispacth(beEmptyCaptcha());\r\n        else dispacth(notBeEmptyCaptcha());\r\n    }, [dispacth, triggerChange]);\r\n\r\n\r\n    let timer;\r\n    const startCountDown = () => {\r\n        dispacth(countDown())\r\n        let minite = 5;\r\n        timer = setInterval(() => {\r\n\r\n            if (minite <= 1) {\r\n                dispacth(countDownEnd());\r\n                clearInterval(timer);\r\n            }\r\n            minite -= 1;\r\n            setSeconds(minite);\r\n        }, 1000);\r\n    }\r\n\r\n\r\n    const handleClick = () => {\r\n        dispacth(loading());\r\n        setSeconds(5);\r\n        setTimeout(() => {\r\n            dispacth(cancelLoading());\r\n            startCountDown();\r\n        }, 500);\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Input className='captcha-input'\r\n            placeholder='验证码'\r\n            onChange={defOnChange}\r\n            suffix={\r\n                <Button\r\n                    type='link'\r\n                    loading={isLoading}\r\n                    disabled={isInvalid || isLoading || isCountDown}\r\n                    onClick={handleClick}\r\n                >\r\n                    {\r\n                        isLoading ? '发送中' : \r\n                        isCountDown ? seconds + ' 秒后可重发' : '获取验证码'\r\n                    }\r\n                </Button>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default CaptchaInput","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\PhoneInput\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx",[],"D:\\PROJECT\\leetCode\\src\\config\\code.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx",[],"D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\footer\\Footer.tsx",["424","425"],"import React,{ FC, useEffect, useRef, useState } from 'react'\r\nimport './style.scss'\r\nimport { exeCode } from '../../../../apis/comments'\r\nimport { message } from 'antd'\r\nimport { BarsOutlined, SwapOutlined, LeftOutlined, RightOutlined, CaretRightOutlined, } from '@ant-design/icons'\r\n\r\ninterface CodeRes {\r\n    \"state\": string,\r\n    \"input\": string,\r\n    \"output\": string,\r\n    \"exceptResult\": string\r\n}\r\n\r\nconst Footer: FC = () => {\r\n    const codeResult = useRef<null | HTMLDivElement>(null)\r\n    const [codeRes, setCodeRes] = useState<CodeRes | ''>('')\r\n    async function handleExeCode() {\r\n        const res = await exeCode('questionId', 'code', 'testCode')\r\n        if (res.data.code === 200) {\r\n            setCodeRes(res.data.data)\r\n            codeResult.current!.style.display = 'block'\r\n        } else {\r\n            message.error('网络错误！')\r\n        }\r\n    }\r\n    function handleCloseExeCode() {\r\n        codeResult.current!.style.display = 'none'\r\n    }\r\n    function handleCodeSubmit () {\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <ul className='exe-code-box'>\r\n                <li><BarsOutlined />题目列表</li>\r\n                <li><SwapOutlined />随机一题</li>\r\n                <li className='before'><LeftOutlined />上一题</li>\r\n                <li className='totalnumber'>1/1982</li>\r\n                <li>下一题<RightOutlined /></li>\r\n                <li>控制台</li>\r\n                <li>贡献</li>\r\n                <li onClick={handleExeCode} className='execode'><CaretRightOutlined />执行代码</li>\r\n                <li className='submit'>提交</li>\r\n            </ul>\r\n            <div ref={codeResult} className='code-result'>\r\n                <span className='header'>\r\n                    执行结果\r\n                <span onClick={handleCloseExeCode} className='close'>X</span>\r\n                </span>\r\n                {\r\n                    codeRes?<ul className='result-info'>\r\n                    <li>状态 <span >{codeRes.state}</span></li>\r\n                    <li>输入 <span className=\"info\">{codeRes.input}</span></li>\r\n                    <li>输出 <span className=\"info\">{codeRes.output}</span></li>\r\n                    <li>结果 <span className=\"info\">{codeRes.exceptResult}</span></li>\r\n                </ul>:''\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\index.jsx",["426"],"import React, { useEffect } from 'react'\r\nimport Sider from './components/indexNav/indexNav'\r\nimport ListIndex from './components/list/list'\r\nimport '../questionlist/QuestionList.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { useListData } from './store/action'\r\nimport './index.css'\r\n\r\n\r\nconst Index = (props) =>{\r\n    let {data,loading} = useSelector(state=>state.list)\r\n    let getData = useListData()\r\n    // let {scearch} = useLocation()\r\n    // let {difficulty,status} = qs.parse(search.substr(1))\r\n    useEffect(()=>{\r\n        getData()\r\n       },[])\r\n    return <div className='login' id='indexWrap'>\r\n        <Sider />\r\n        <ListIndex\r\n            data={data}\r\n            loading={loading}    \r\n        />\r\n        <div></div>\r\n    </div>\r\n}\r\n\r\nexport default Index","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\reudcer\\list.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\sagaRoot.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\reducers\\profile_reqHistory.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\WindowWarp\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Side\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Head\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\redux_test.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\req_historySaga.js",["427"],"import { call, put, takeLatest } from 'redux-saga/effects'\r\n// import { reqPersonal } from '../../API/index'\r\nimport { GETLISTOFTOPICS } from '../redux_test'\r\n\r\n\r\nfunction* reqHistoryData(action) {\r\n\r\n    yield put({ type: GETLISTOFTOPICS })\r\n}\r\n\r\n\r\nfunction* watchReqHistoryData() {\r\n    yield takeLatest(\"getList\", reqHistoryData);\r\n}\r\n\r\nexport default watchReqHistoryData","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\req_questionInfo.js",["428"],"import { call, put, takeEvery, } from 'redux-saga/effects'\r\n// import { reqQuestion } from '../../API/index'\r\nimport { GETQUESTION } from '../redux_test'\r\n\r\n\r\nfunction* reqQuestionInfo(action) {\r\n\r\n    yield put({ type: GETQUESTION })\r\n}\r\n\r\n\r\nfunction* watchreqQuestionInfo() {\r\n    yield takeEvery(\"getQues\", reqQuestionInfo);\r\n}\r\n\r\nexport default watchreqQuestionInfo","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\indexNav\\indexNav.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\list\\list.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\action\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginWindow\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\mock\\index.js",["429"],"import Mock from 'mockjs'\r\nimport data from '../store'\r\n\r\nconst Random = Mock.Random\r\nconst dataList = []\r\nfor(let i = 10;i<100;i++){\r\n    const template ={\r\n        \"code\":1,\r\n        \"title\":Random.string(12,30),\r\n        \"questionId\":Random.string(11),\r\n        \"answer_num\":Random.integer(200,1000),\r\n        \"difficulty\":\"简单\",\r\n        \"passrate\":Random.integer(0,100)+'%',\r\n        \"status\":\"未完成\"\r\n    }\r\n    dataList.push(template)\r\n}\r\n\r\nMock.mock('/question/list','get',function() {\r\n    return Mock.mock({\r\n            \"code\": 1,\r\n            \"data\": dataList,\r\n            \"message\": \"请求成功！\"\r\n          })\r\n})\r\n\r\n\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\router\\config.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\search\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\randomStart\\index.jsx",["430"],"import React from 'react'\r\nimport { Button,Card } from \"antd\";\r\n\r\nconst RandomStart = (props) =>{\r\n    return  (<div id=\"button_wrap\">\r\n        <Button>随机开始</Button>\r\n    </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default RandomStart;","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginFooter\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\InfoDisplay\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\QuestionInfo\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\index.tsx",["431","432"],"import React, { useRef, useState } from 'react';\r\nimport { Card, Button } from 'antd';\r\nimport {useHistory} from 'react-router-dom'\r\nimport PhoneLoginForm from './PhoneLoginForm'\r\nimport PwdLoginForm from './PwdLoginForm'\r\nimport { CaretRightOutlined} from '@ant-design/icons'\r\n\r\nimport './index.scss'\r\n\r\n\r\ninterface IProps {\r\n    isPhoneLogin: boolean,\r\n    setIsPhoneLogin: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\n\r\nconst LoginMain: React.FC<IProps> = ({ isPhoneLogin, setIsPhoneLogin}) => {\r\n\r\n    let history = useHistory();\r\n    const handleClick = () => {\r\n        \r\n        if (!isPhoneLogin) {\r\n            history.push('/resetpassword');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card \r\n            className='login-window-main'\r\n            title={isPhoneLogin ? '欢迎使用力扣' : '账号密码登录'}\r\n            bordered={false}\r\n        >\r\n\r\n            <PhoneLoginForm style={{display: isPhoneLogin ? 'block' : 'none'}} />\r\n            <PwdLoginForm style={{display: isPhoneLogin ? 'none' : 'block'}} />\r\n            \r\n\r\n\r\n            <div className='link-button-warp'>\r\n                <Button className='link-button' type='link' onClick={() => setIsPhoneLogin(!isPhoneLogin)}>\r\n                    {isPhoneLogin ? '账号密码登录' : '验证码登录'}\r\n                </Button>\r\n\r\n\r\n                <Button className='link-button' type='link' onClick={handleClick}>\r\n                    {isPhoneLogin ? '邮箱注册' : '忘记密码'}\r\n                </Button>\r\n            </div>\r\n\r\n            <div className='us-username' style={{display: isPhoneLogin ? 'flex' : 'none'}}>\r\n                <span>已有美国站账号</span><CaretRightOutlined style={{fontSize: '12px', marginLeft: '2px'}}/>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LoginMain;","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\actions\\proReqHistory_action.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\ErrorInfo\\index.tsx",[],{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","replacedBy":"436"},{"ruleId":"437","severity":1,"message":"438","line":6,"column":3,"nodeType":"439","messageId":"440","endLine":6,"endColumn":11},{"ruleId":"433","replacedBy":"434"},{"ruleId":"435","replacedBy":"436"},{"ruleId":"437","severity":1,"message":"441","line":2,"column":10,"nodeType":"439","messageId":"440","endLine":2,"endColumn":18},{"ruleId":"442","severity":1,"message":"443","line":49,"column":11,"nodeType":"444","endLine":49,"endColumn":44},{"ruleId":"442","severity":1,"message":"443","line":54,"column":11,"nodeType":"444","endLine":54,"endColumn":42},{"ruleId":"442","severity":1,"message":"445","line":59,"column":11,"nodeType":"444","endLine":59,"endColumn":80},{"ruleId":"437","severity":1,"message":"446","line":1,"column":10,"nodeType":"439","messageId":"440","endLine":1,"endColumn":19},{"ruleId":"437","severity":1,"message":"447","line":22,"column":41,"nodeType":"439","messageId":"440","endLine":22,"endColumn":45},{"ruleId":"437","severity":1,"message":"448","line":1,"column":17,"nodeType":"439","messageId":"440","endLine":1,"endColumn":20},{"ruleId":"437","severity":1,"message":"449","line":1,"column":22,"nodeType":"439","messageId":"440","endLine":1,"endColumn":27},{"ruleId":"442","severity":1,"message":"445","line":10,"column":23,"nodeType":"444","endLine":10,"endColumn":26},{"ruleId":"450","severity":1,"message":"451","line":1,"column":10,"nodeType":"439","messageId":"440","endLine":1,"endColumn":21},{"ruleId":"450","severity":1,"message":"452","line":1,"column":23,"nodeType":"439","messageId":"440","endLine":1,"endColumn":38},{"ruleId":"450","severity":1,"message":"453","line":5,"column":6,"nodeType":"439","messageId":"440","endLine":5,"endColumn":19},{"ruleId":"450","severity":1,"message":"454","line":3,"column":10,"nodeType":"439","messageId":"440","endLine":3,"endColumn":18},{"ruleId":"450","severity":1,"message":"455","line":11,"column":10,"nodeType":"439","messageId":"440","endLine":11,"endColumn":15},{"ruleId":"450","severity":1,"message":"456","line":24,"column":19,"nodeType":"439","messageId":"440","endLine":24,"endColumn":29},{"ruleId":"450","severity":1,"message":"457","line":25,"column":10,"nodeType":"439","messageId":"440","endLine":25,"endColumn":17},{"ruleId":"450","severity":1,"message":"458","line":26,"column":5,"nodeType":"439","messageId":"440","endLine":26,"endColumn":8},{"ruleId":"437","severity":1,"message":"459","line":2,"column":10,"nodeType":"439","messageId":"440","endLine":2,"endColumn":18},{"ruleId":"450","severity":1,"message":"460","line":16,"column":10,"nodeType":"439","messageId":"440","endLine":16,"endColumn":21},{"ruleId":"461","severity":1,"message":"462","line":71,"column":8,"nodeType":"463","endLine":71,"endColumn":17,"suggestions":"464"},{"ruleId":"461","severity":1,"message":"465","line":71,"column":9,"nodeType":"466","endLine":71,"endColumn":16},{"ruleId":"437","severity":1,"message":"467","line":12,"column":5,"nodeType":"439","messageId":"440","endLine":12,"endColumn":14},{"ruleId":"437","severity":1,"message":"468","line":15,"column":5,"nodeType":"439","messageId":"440","endLine":15,"endColumn":17},{"ruleId":"437","severity":1,"message":"469","line":33,"column":11,"nodeType":"439","messageId":"440","endLine":33,"endColumn":20},{"ruleId":"437","severity":1,"message":"470","line":1,"column":24,"nodeType":"439","messageId":"440","endLine":1,"endColumn":31},{"ruleId":"437","severity":1,"message":"471","line":2,"column":17,"nodeType":"439","messageId":"440","endLine":2,"endColumn":26},{"ruleId":"437","severity":1,"message":"472","line":2,"column":28,"nodeType":"439","messageId":"440","endLine":2,"endColumn":38},{"ruleId":"437","severity":1,"message":"471","line":2,"column":47,"nodeType":"439","messageId":"440","endLine":2,"endColumn":56},{"ruleId":"450","severity":1,"message":"471","line":1,"column":20,"nodeType":"439","messageId":"440","endLine":1,"endColumn":29},{"ruleId":"450","severity":1,"message":"473","line":29,"column":14,"nodeType":"439","messageId":"440","endLine":29,"endColumn":30},{"ruleId":"461","severity":1,"message":"474","line":17,"column":10,"nodeType":"463","endLine":17,"endColumn":12,"suggestions":"475"},{"ruleId":"437","severity":1,"message":"476","line":1,"column":10,"nodeType":"439","messageId":"440","endLine":1,"endColumn":14},{"ruleId":"437","severity":1,"message":"476","line":1,"column":10,"nodeType":"439","messageId":"440","endLine":1,"endColumn":14},{"ruleId":"437","severity":1,"message":"477","line":2,"column":8,"nodeType":"439","messageId":"440","endLine":2,"endColumn":12},{"ruleId":"437","severity":1,"message":"478","line":2,"column":17,"nodeType":"439","messageId":"440","endLine":2,"endColumn":21},{"ruleId":"450","severity":1,"message":"479","line":1,"column":17,"nodeType":"439","messageId":"440","endLine":1,"endColumn":23},{"ruleId":"450","severity":1,"message":"459","line":1,"column":25,"nodeType":"439","messageId":"440","endLine":1,"endColumn":33},"no-native-reassign",["480"],"no-negated-in-lhs",["481"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'takeEvery' is defined but never used.","'memo' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","@typescript-eslint/no-unused-vars","'createStore' is defined but never used.","'combineReducers' is defined but never used.","'MappedReducer' is defined but never used.","'Dispatch' is defined but never used.","'Flags' is defined but never used.","'setCurPage' is assigned a value but never used.","'pageNum' is assigned a value but never used.","'now' is assigned a value but never used.","'useState' is defined but never used.","'wrapRequest' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'args'. Either include it or remove the dependency array.","ArrayExpression",["482"],"React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","'beInvalid' is defined but never used.","'notBeInvalid' is defined but never used.","'isInValid' is assigned a value but never used.","'message' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'handleCodeSubmit' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["483"],"'call' is defined but never used.","'data' is defined but never used.","'Card' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"484","fix":"485"},{"desc":"486","fix":"487"},"Update the dependencies array to be: [args]",{"range":"488","text":"489"},"Update the dependencies array to be: [getData]",{"range":"490","text":"491"},[1861,1870],"[args]",[565,567],"[getData]"]