[{"D:\\PROJECT\\leetCode\\src\\index.tsx":"1","D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts":"2","D:\\PROJECT\\leetCode\\src\\App.tsx":"3","D:\\PROJECT\\leetCode\\src\\router\\index.jsx":"4","D:\\PROJECT\\leetCode\\src\\router\\config.js":"5","D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js":"6","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js":"7","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js":"8","D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js":"9","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js":"10","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js":"11","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js":"12","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js":"13","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js":"14","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js":"15","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\index.ts":"16","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js":"17","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js":"18","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\reducer.ts":"19","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\epic.ts":"20","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx":"21","D:\\PROJECT\\leetCode\\src\\mock\\questionIndex.js":"22","D:\\PROJECT\\leetCode\\src\\utils\\shared.ts":"23","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\actions.ts":"24","D:\\PROJECT\\leetCode\\src\\apis\\comments.ts":"25","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx":"26","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\index.ts":"27","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts":"28","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\index.tsx":"29","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-right\\index.tsx":"30","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx":"31","D:\\PROJECT\\leetCode\\src\\apis\\solution.ts":"32","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\dif-tag\\DigTag.tsx":"33","D:\\PROJECT\\leetCode\\src\\apis\\index.ts":"34","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Header.tsx":"35","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Footer.tsx":"36","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx":"37","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\SolutionList.tsx":"38","D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts":"39","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\mdEditor\\index.tsx":"40","D:\\PROJECT\\leetCode\\src\\config\\colors.ts":"41","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts":"42","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx":"43","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx":"44","D:\\PROJECT\\leetCode\\src\\config\\code.ts":"45","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts":"46","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx":"47","D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx":"48","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\index.js":"49","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\index.js":"50","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\footer\\Footer.tsx":"51","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\index.jsx":"52","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\reudcer\\list.js":"53","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\sagaRoot.js":"54","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\reducers\\profile_reqHistory.js":"55","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\WindowWarp\\index.tsx":"56","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Side\\index.jsx":"57","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\index.jsx":"58","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Head\\index.jsx":"59","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\redux_test.js":"60","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\req_historySaga.js":"61","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\req_questionInfo.js":"62","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\indexNav\\indexNav.jsx":"63","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\list\\list.jsx":"64","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\action\\index.js":"65","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginWindow\\index.tsx":"66","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\mock\\index.js":"67","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\router\\config.js":"68","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\search\\index.jsx":"69","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\randomStart\\index.jsx":"70","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginFooter\\index.tsx":"71","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\InfoDisplay\\index.jsx":"72","D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\QuestionInfo\\index.jsx":"73","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\index.tsx":"74","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\actions\\proReqHistory_action.js":"75","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\ErrorInfo\\index.tsx":"76","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\index.ts":"77","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdWindow\\resetPwdWindow.tsx":"78","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\index.ts":"79","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\pwdLoginForm.ts":"80","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\captchaInput.ts":"81","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\phoneInput.ts":"82","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\phoneInput.ts":"83","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\captchaInput.ts":"84","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\pwdLoginForm.ts":"85","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PwdLoginForm\\index.tsx":"86","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\index.tsx":"87","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\CaptchaInput\\index.tsx":"88","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\PhoneInput\\index.tsx":"89","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdMain\\resetPwdMain.tsx":"90","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdMain\\ResetForm\\resetForm.tsx":"91","D:\\PROJECT\\leetCode\\src\\components\\loading\\index.tsx":"92","D:\\PROJECT\\leetCode\\src\\components\\likeBtn\\index.tsx":"93","D:\\PROJECT\\leetCode\\src\\apis\\share.ts":"94"},{"size":417,"mtime":1611926463004,"results":"95","hashOfConfig":"96"},{"size":440,"mtime":1611827611826,"results":"97","hashOfConfig":"96"},{"size":263,"mtime":1613704674959,"results":"98","hashOfConfig":"96"},{"size":492,"mtime":1611827611827,"results":"99","hashOfConfig":"96"},{"size":669,"mtime":1611827611826,"results":"100","hashOfConfig":"96"},{"size":914,"mtime":1614603412200,"results":"101","hashOfConfig":"96"},{"size":326,"mtime":1614603412211,"results":"102","hashOfConfig":"96"},{"size":429,"mtime":1614603412210,"results":"103","hashOfConfig":"96"},{"size":285,"mtime":1614603412196,"results":"104","hashOfConfig":"96"},{"size":266,"mtime":1614680201662,"results":"105","hashOfConfig":"96"},{"size":1819,"mtime":1611827611824,"results":"106","hashOfConfig":"96"},{"size":366,"mtime":1614091334240,"results":"107","hashOfConfig":"96"},{"size":600,"mtime":1614171717105,"results":"108","hashOfConfig":"96"},{"size":1535,"mtime":1614680201661,"results":"109","hashOfConfig":"96"},{"size":124,"mtime":1611827611822,"results":"110","hashOfConfig":"96"},{"size":1022,"mtime":1614171717107,"results":"111","hashOfConfig":"96"},{"size":3860,"mtime":1614171717104,"results":"112","hashOfConfig":"96"},{"size":1799,"mtime":1614680201661,"results":"113","hashOfConfig":"96"},{"size":1296,"mtime":1614680201662,"results":"114","hashOfConfig":"96"},{"size":1277,"mtime":1614170971364,"results":"115","hashOfConfig":"96"},{"size":1090,"mtime":1613704674963,"results":"116","hashOfConfig":"96"},{"size":2431,"mtime":1614680201658,"results":"117","hashOfConfig":"96"},{"size":3988,"mtime":1614695229037,"results":"118","hashOfConfig":"96"},{"size":1300,"mtime":1614680201662,"results":"119","hashOfConfig":"96"},{"size":1914,"mtime":1614697904709,"results":"120","hashOfConfig":"96"},{"size":291,"mtime":1614171717106,"results":"121","hashOfConfig":"96"},{"size":2727,"mtime":1614682921650,"results":"122","hashOfConfig":"96"},{"size":341,"mtime":1614171717106,"results":"123","hashOfConfig":"96"},{"size":657,"mtime":1614170971362,"results":"124","hashOfConfig":"96"},{"size":2079,"mtime":1614681953359,"results":"125","hashOfConfig":"96"},{"size":5216,"mtime":1614699485097,"results":"126","hashOfConfig":"96"},{"size":1186,"mtime":1614683745126,"results":"127","hashOfConfig":"96"},{"size":494,"mtime":1614071413078,"results":"128","hashOfConfig":"96"},{"size":4414,"mtime":1614695752175,"results":"129","hashOfConfig":"96"},{"size":168,"mtime":1614170971362,"results":"130","hashOfConfig":"96"},{"size":168,"mtime":1614170971362,"results":"131","hashOfConfig":"96"},{"size":5095,"mtime":1614696182985,"results":"132","hashOfConfig":"96"},{"size":2198,"mtime":1614685760833,"results":"133","hashOfConfig":"96"},{"size":2159,"mtime":1614680118335,"results":"134","hashOfConfig":"96"},{"size":2214,"mtime":1614692548054,"results":"135","hashOfConfig":"96"},{"size":125,"mtime":1612419281391,"results":"136","hashOfConfig":"96"},{"size":1338,"mtime":1613440428650,"results":"137","hashOfConfig":"96"},{"size":2774,"mtime":1614603338793,"results":"138","hashOfConfig":"96"},{"size":1683,"mtime":1614171717105,"results":"139","hashOfConfig":"96"},{"size":90,"mtime":1612419297472,"results":"140","hashOfConfig":"96"},{"size":859,"mtime":1612419281395,"results":"141","hashOfConfig":"96"},{"size":3335,"mtime":1614171717105,"results":"142","hashOfConfig":"96"},{"size":1669,"mtime":1613704674961,"results":"143","hashOfConfig":"96"},{"size":172,"mtime":1614603412215,"results":"144","hashOfConfig":"96"},{"size":354,"mtime":1614603412209,"results":"145","hashOfConfig":"96"},{"size":3423,"mtime":1614680201662,"results":"146","hashOfConfig":"96"},{"size":790,"mtime":1614603412214,"results":"147","hashOfConfig":"96"},{"size":416,"mtime":1614603412215,"results":"148","hashOfConfig":"96"},{"size":284,"mtime":1614603412210,"results":"149","hashOfConfig":"96"},{"size":369,"mtime":1614603412209,"results":"150","hashOfConfig":"96"},{"size":4601,"mtime":1614603412200,"results":"151","hashOfConfig":"96"},{"size":2130,"mtime":1614603412208,"results":"152","hashOfConfig":"96"},{"size":1701,"mtime":1614603412206,"results":"153","hashOfConfig":"96"},{"size":821,"mtime":1614603412201,"results":"154","hashOfConfig":"96"},{"size":92,"mtime":1614603412210,"results":"155","hashOfConfig":"96"},{"size":374,"mtime":1614603412210,"results":"156","hashOfConfig":"96"},{"size":369,"mtime":1614603412210,"results":"157","hashOfConfig":"96"},{"size":1924,"mtime":1614603412212,"results":"158","hashOfConfig":"96"},{"size":1192,"mtime":1614603412213,"results":"159","hashOfConfig":"96"},{"size":579,"mtime":1614603412215,"results":"160","hashOfConfig":"96"},{"size":787,"mtime":1614603412199,"results":"161","hashOfConfig":"96"},{"size":645,"mtime":1614603412214,"results":"162","hashOfConfig":"96"},{"size":554,"mtime":1614603412214,"results":"163","hashOfConfig":"96"},{"size":276,"mtime":1614603412214,"results":"164","hashOfConfig":"96"},{"size":236,"mtime":1614603412213,"results":"165","hashOfConfig":"96"},{"size":2070,"mtime":1614603412196,"results":"166","hashOfConfig":"96"},{"size":4499,"mtime":1614603412203,"results":"167","hashOfConfig":"96"},{"size":1410,"mtime":1614603412204,"results":"168","hashOfConfig":"96"},{"size":1815,"mtime":1614603412198,"results":"169","hashOfConfig":"96"},{"size":149,"mtime":1614603412209,"results":"170","hashOfConfig":"96"},{"size":550,"mtime":1614603412196,"results":"171","hashOfConfig":"96"},{"size":372,"mtime":1614680201660,"results":"172","hashOfConfig":"96"},{"size":351,"mtime":1614680201664,"results":"173","hashOfConfig":"96"},{"size":557,"mtime":1614680201660,"results":"174","hashOfConfig":"96"},{"size":1907,"mtime":1614680201661,"results":"175","hashOfConfig":"96"},{"size":1465,"mtime":1614680201660,"results":"176","hashOfConfig":"96"},{"size":1703,"mtime":1614680201660,"results":"177","hashOfConfig":"96"},{"size":1467,"mtime":1614680201659,"results":"178","hashOfConfig":"96"},{"size":1350,"mtime":1614680201659,"results":"179","hashOfConfig":"96"},{"size":1711,"mtime":1614680201659,"results":"180","hashOfConfig":"96"},{"size":6490,"mtime":1614680201659,"results":"181","hashOfConfig":"96"},{"size":6276,"mtime":1614680201658,"results":"182","hashOfConfig":"96"},{"size":4354,"mtime":1614680201658,"results":"183","hashOfConfig":"96"},{"size":7168,"mtime":1614680201658,"results":"184","hashOfConfig":"96"},{"size":1429,"mtime":1614680201664,"results":"185","hashOfConfig":"96"},{"size":5027,"mtime":1614680201664,"results":"186","hashOfConfig":"96"},{"size":632,"mtime":1614681838855,"results":"187","hashOfConfig":"96"},{"size":1109,"mtime":1614685625007,"results":"188","hashOfConfig":"96"},{"size":255,"mtime":1614684544863,"results":"189","hashOfConfig":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"12bdsu8",{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"200"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"200"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"200"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"200"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"192"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"192"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"192"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"192"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"192"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"200"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"200"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"200"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"200"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"200"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"192"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"192"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"192"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"192"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"192"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"192"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},"D:\\PROJECT\\leetCode\\src\\index.tsx",[],["401","402"],"D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts",[],"D:\\PROJECT\\leetCode\\src\\App.tsx",[],"D:\\PROJECT\\leetCode\\src\\router\\index.jsx",["403"],"import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport routerMap from \"./config\";\r\n\r\n\r\nconst RouterView = () => {\r\n  return (\r\n    <Router>\r\n      {/* <Redirect to=\"/home\"></Redirect> */}\r\n      <Switch>\r\n        {routerMap.map((item,index) => (\r\n          <Route key={index} path={item.path} component={item.component}></Route>\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RouterView;\r\n",["404","405"],"D:\\PROJECT\\leetCode\\src\\router\\config.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js",["406","407","408"],"import React from \"react\";\r\nimport Logo from \"../../../../assets/imgs/logo.svg\";\r\nimport \"./header.scss\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n  RightSquareOutlined,\r\n  BellOutlined,\r\n  UserOutlined,\r\n  DownOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nfunction Header(props) {\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.alipay.com/\"\r\n        >\r\n          题目以中文显示\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.taobao.com/\"\r\n        >\r\n          题目以英文显示\r\n        </a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div className=\"header\">\r\n      <ul className=\"header-nav\">\r\n        <li>\r\n          <img src={Logo} alt=\"力扣\"></img>\r\n        </li>\r\n        <li>学习</li>\r\n        <li>题库</li>\r\n        <li>讨论</li>\r\n        <li>竞赛</li>\r\n        <li>求职</li>\r\n        <li className=\"shop\">商店</li>\r\n        <li>\r\n          <a className=\"download\" href=\"#\">\r\n            下载 App\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"member\" href=\"#\">\r\n            Plus 会员\r\n          </a>\r\n        </li>\r\n        <Dropdown overlay={menu}>\r\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\r\n            中 <DownOutlined />\r\n          </a>\r\n        </Dropdown>\r\n        <li>\r\n          <RightSquareOutlined />\r\n        </li>\r\n        <li>\r\n          <BellOutlined />\r\n        </li>\r\n        <li>\r\n          <Link to='/profile'><UserOutlined /></Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js",["409"],"import { takeEvery } from \"redux-saga/effects\";\r\n\r\n\r\nfunction* watchFetchData() {\r\n  \r\n}\r\n\r\nexport default watchFetchData;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js",["410"],"import \"./desc.scss\";\r\nimport \"../../../../../../mock/questionIndex.js\";\r\nimport { getDescData, likeQuestion,  } from \"../../../../../../apis/comments\";\r\nimport DiffTag from \"../components/dif-tag/DigTag\";\r\nimport { devContetn } from \"../../../../../../utils/shared\";\r\nimport {\r\n  likeAction,\r\n  unLikeAction,\r\n  collectAction,\r\n  unCollectAction,\r\n} from \"../../../../store/actions\";\r\nimport {\r\n  LikeOutlined,\r\n  HeartOutlined,\r\n  RotateRightOutlined,\r\n  SwapOutlined,\r\n  BellOutlined,\r\n  MessageOutlined,\r\n  LikeFilled,\r\n  HeartFilled,\r\n} from \"@ant-design/icons\";\r\nimport { Fragment, useEffect, useState, memo } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst Desc = (props) => {\r\n  let [descData, setDescData] = useState({ code: 0 });\r\n  let {\r\n    like,\r\n    dispatchLike,\r\n    dispatchUnlike,\r\n    collect,\r\n    dispatchCollect,\r\n    dispatchUnCollect,\r\n  } = props;\r\n  useEffect(() => {\r\n    getDescData().then((res) => {\r\n      setDescData(res.data);\r\n    });\r\n  }, [descData.code]);\r\n  return (\r\n    <div className=\"desc\">\r\n      {descData.code ? (\r\n        <>\r\n          <div className=\"title\">1.{descData.data.title}</div>\r\n          <ul className=\"tag\">\r\n            <li>\r\n              难度 <DiffTag difficulty={descData.data.difficulty} />\r\n            </li>\r\n            <li>\r\n              {like ? (\r\n                <LikeFilled onClick={dispatchUnlike} />\r\n              ) : (\r\n                <LikeOutlined onClick={dispatchLike} />\r\n              )}\r\n              {descData.data.thumbup}\r\n            </li>\r\n            <li>\r\n              {collect ? (\r\n                <HeartFilled onClick={dispatchUnCollect} />\r\n              ) : (\r\n                <HeartOutlined onClick={dispatchCollect} />\r\n              )}\r\n              收藏\r\n            </li>\r\n            <li>\r\n              <RotateRightOutlined /> 分享\r\n            </li>\r\n            <li>\r\n              <SwapOutlined /> 切换为英文\r\n            </li>\r\n            <li>\r\n              <BellOutlined /> 接收动态\r\n            </li>\r\n            <li>\r\n              <MessageOutlined /> 反馈\r\n            </li>\r\n          </ul>\r\n          <div className=\"content\">\r\n            {devContetn(descData.data.content).map((p, i) => (\r\n              <Fragment key={i}>\r\n                <p>{p} </p>\r\n                <br />\r\n              </Fragment>\r\n            ))}\r\n            <ul className='submit-number'>\r\n              <li>通过次数 {descData.data.commit_num}</li>\r\n              <li>提交次数 {descData.data.answe_num}</li>\r\n            </ul>\r\n          </div>\r\n          <ul className='footer'>\r\n            <li>在真实的面试中遇到过这道题？ <button>是</button> <button>否</button></li>\r\n            <li>力扣(leetCode)版权所有</li>\r\n            <li>相关企业</li>\r\n            <li>相关标签</li>\r\n            <li>相似题目</li>\r\n            <li>显示提示1</li>\r\n            <li>显示提示2</li>\r\n            <li>显示提示3</li>\r\n          </ul>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    like: state.desc.like,\r\n    collect: state.desc.collect,\r\n  };\r\n};\r\n\r\nconst mapDispatch = (dispatch) => {\r\n  return {\r\n    dispatchLike() {\r\n      const disLikeAction = likeAction();\r\n      dispatch(disLikeAction);\r\n      likeQuestion(\"question\", true, \"jsaodfnasd\");\r\n    },\r\n    dispatchUnlike() {\r\n      const disUnlikeAction = unLikeAction();\r\n      dispatch(disUnlikeAction);\r\n      likeQuestion(\"question\", false, \"jsaodfnasd\");\r\n    },\r\n    dispatchCollect() {\r\n      const disLikeAction = collectAction();\r\n      dispatch(disLikeAction);\r\n    },\r\n    dispatchUnCollect() {\r\n      const disUnlikeAction = unCollectAction();\r\n      dispatch(disUnlikeAction);\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Desc);\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js",["411","412","413","414"],"import { Table, Tag, Space } from \"antd\";\r\nimport { memo, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCommit } from '../../../../../../apis/comments'\r\nimport { getKeys } from '../../../../../../utils/shared'\r\nconst columns = [\r\n  {\r\n    title: \"提交时间\",\r\n    dataIndex: \"commitTime\",\r\n    key: \"commitTime\",\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: \"提交结果\",\r\n    dataIndex: \"commitResult\",\r\n    key: \"commitResult\",\r\n  },\r\n  {\r\n    title: \"运行时间\",\r\n    dataIndex: \"runtime\",\r\n    key: \"runtime\",\r\n  },\r\n  {\r\n    title: \"语言\",\r\n    dataIndex: \"word\",\r\n    key: \"java\",\r\n  },\r\n];\r\n\r\nconst SubmitRecord = (props) => {\r\n  const [commitList, setCommitList] = useState()\r\n  useEffect(() =>{\r\n    getCommit('josdnf')\r\n    .then(res =>{\r\n      setCommitList(getKeys(res.data.data.commitList))\r\n      console.log(getKeys(res.data.data.commitList))\r\n    })\r\n  },[])\r\n  useEffect(() =>{\r\n    console.log(props)\r\n  })\r\n  return (\r\n    <div className=\"submit-record\">\r\n      {\r\n        props.exeCodeRes.result?<ul className='result-info'>\r\n        <li>执行结果 <span >{props.exeCodeRes.result == 'pass' ? '通过' : '解答错误'}</span></li>\r\n        <li>执行时间 <span className=\"info\">{props.exeCodeRes.runtime}</span></li>\r\n        <li>击败对手 <span className=\"info\">{props.exeCodeRes.runtimeBeat}</span></li>\r\n        <li>内存消耗 <span className=\"info\">{props.exeCodeRes.memory}</span></li>\r\n    </ul>:null\r\n      }\r\n      {\r\n        commitList? <Table pagination={false} columns={columns} dataSource={commitList} /> :''\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapState = (state) =>{\r\n  return {\r\n    exeCodeRes:state.desc.exeCodeRes\r\n  }\r\n}\r\n\r\nexport default connect(mapState)(memo(SubmitRecord));\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\reducer.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\epic.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\mock\\questionIndex.js",[],"D:\\PROJECT\\leetCode\\src\\utils\\shared.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\store\\actions.ts",[],"D:\\PROJECT\\leetCode\\src\\apis\\comments.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts",["415","416","417"],"import { createStore, combineReducers } from 'redux'\r\nimport reducer, { initState } from './reducer'\r\nimport { produce } from 'immer'\r\n\r\ntype MappedReducer<T extends { [k: string]: (...args: any) => any }> = {\r\n  [K in keyof T]: ReturnType<T[K]>\r\n}\r\n\r\nconst editorConfigReducer = produce(reducer, initState)\r\n\r\nexport { editorConfigReducer }","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-right\\index.tsx",["418"],"import { FC } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.scss\";\r\nimport { dispatchShowDetail } from \"../store\";\r\nimport { wrapRequest } from \"../../../../../../utils/hooks\";\r\nimport {\r\n  DetailInfo,\r\n  fetchDetailSolution,\r\n} from \"../../../../../../apis/solution\";\r\nimport { RootState } from \"../../../../store\";\r\nimport { Flags } from \"../../../../../../utils/shared\";\r\nimport { LoadingOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport Comment from \"../../left/components/comment\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport BraftEditor from \"braft-editor\";\r\nimport Loading from \"../../../../../../components/loading\";\r\n\r\ninterface Props {\r\n  dispatch: Dispatch;\r\n  answerId: number;\r\n}\r\n\r\nconst useGetDetail = wrapRequest(fetchDetailSolution);\r\n\r\nconst SolutionRight: FC<Props> = ({ dispatch, answerId }) => {\r\n  const close = () => {\r\n    dispatch(dispatchShowDetail(false));\r\n  };\r\n  const [data, flag] = useGetDetail(answerId);\r\n\r\n  return (\r\n    <div className=\"solution-right\">\r\n      <header className=\"flex a-center\">\r\n        <button className=\"close-btn\" onClick={close}>\r\n          关闭\r\n        </button>\r\n      </header>\r\n      <div className=\"sr-content\">\r\n        {flag === Flags.Pending ? (\r\n          <div className=\"flex j-center a-center\">\r\n            <Loading size=\"large\" />\r\n          </div>\r\n        ) : flag === Flags.Success ? (\r\n          <Main {...data} />\r\n        ) : (\r\n          \"网络异常\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Main: FC<DetailInfo> = (props) => (\r\n  <div className=\"main\">\r\n    <div className=\"solution-header flex a-center\">\r\n      <Avatar icon={<UserOutlined />} src={props.image} alt=\"头像\" />\r\n      <span>{props.userName}</span>\r\n    </div>\r\n    <BraftEditor\r\n      value={BraftEditor.createEditorState(props.content)}\r\n      controls={[]}\r\n      readOnly={true}\r\n    />\r\n    <Comment />\r\n  </div>\r\n);\r\n\r\nexport default connect((state: RootState) => ({\r\n  answerId: state.solution.answerId,\r\n}))(SolutionRight);\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx",["419","420","421","422"],"D:\\PROJECT\\leetCode\\src\\apis\\solution.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\dif-tag\\DigTag.tsx",[],"D:\\PROJECT\\leetCode\\src\\apis\\index.ts",["423"],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Header.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Footer.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\SolutionList.tsx",["424"],"import { FC } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { SolutionList as List } from \"../../../../../../apis/solution\";\r\nimport { RootState } from \"../../../../store\";\r\nimport { EyeOutlined } from \"@ant-design/icons\";\r\nimport { dispatchShowDetail, switchId } from \"../store\";\r\nimport Loading from \"../../../../../../components/loading\";\r\nimport LikeBtn from \"../../../../../../components/likeBtn\";\r\n\r\ninterface Props {\r\n  solutionList: readonly List[];\r\n  dispatch: Dispatch;\r\n  initial: boolean;\r\n}\r\n\r\nconst SolutionList: FC<Props> = ({ solutionList, dispatch, initial }) => {\r\n  const showDetail = (id: number) => {\r\n    dispatch(switchId(id));\r\n    dispatch(dispatchShowDetail(true));\r\n  };\r\n  return (\r\n    <ul className=\"solution-list\">\r\n      {initial ? (\r\n        solutionList.map((item) => (\r\n          <Item {...item} key={item.answerId} onClick={showDetail} />\r\n        ))\r\n      ) : (\r\n        <div className=\"flex j-center a-center\">\r\n          <Loading size=\"large\" />\r\n        </div>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst Item: FC<{\r\n  avatar: string | null;\r\n  userName: string;\r\n  title: string;\r\n  summary: string;\r\n  thumbup: number;\r\n  view: string;\r\n  answerId: string;\r\n  islike: number;\r\n  onClick: (id: number) => void;\r\n}> = (item) => {\r\n  const clickLikeBtn = () => {};\r\n\r\n  return (\r\n    <li className=\"item\" onClick={item.onClick.bind(null, +item.answerId)}>\r\n      <div className=\"item-header flex a-center\">\r\n        <img className=\"avatar\" src={item.avatar!} alt={item.userName} />\r\n        <span>{item.title}</span>\r\n      </div>\r\n      <div className=\"item-content\">{item.summary}</div>\r\n      <div className=\"item-footer flex a-center\">\r\n        <div className=\"flex a-center ic\">\r\n          <LikeBtn islike={item.islike} target=\"answer\" targetId={item.answerId} />\r\n          {item.thumbup}\r\n        </div>\r\n        <div className=\"flex a-center ic\">\r\n          <EyeOutlined />\r\n          {item.view}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect((state: RootState) => ({\r\n  solutionList: state.solution.solutionList,\r\n  initial: state.solution.initial,\r\n}))(SolutionList);\r\n","D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts",["425","426"],"import produce, { Immutable } from \"immer\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport { Flags, LooseObj } from \"../shared\"\r\nimport { Modal } from 'antd'\r\nimport { Main_Dark, Main_Light } from \"../../config/colors\"\r\nimport { ErrorCode, Response } from '../../apis'\r\nimport { useParams } from \"react-router\"\r\ninterface Update<T> {\r\n  (updateFn: (draft: Immutable<T>) => void): void\r\n}\r\ninterface IConfirm {\r\n  msg?: string\r\n  title?: string\r\n  onOk?(): void\r\n  onCancel?(): void\r\n}\r\n\r\nexport const useImmer = <T extends LooseObj>(initState: T): [T, Update<T>] => {\r\n  const [state, setState] = useState<T>(initState)\r\n\r\n  const update: Update<T> = (updateFn) => {\r\n    const newState = produce<T>(state, updateFn)\r\n    setState(newState)\r\n  }\r\n  return [state, update]\r\n}\r\n\r\nexport const useConfirm = ({\r\n  msg = \"你确定吗\",\r\n  title = \"确定？\",\r\n  onOk,\r\n  onCancel\r\n}: IConfirm = {}) => {\r\n  return () => {\r\n    Modal.confirm({\r\n      title,\r\n      content: msg,\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      onOk,\r\n      onCancel,\r\n      okButtonProps: {\r\n        style: {\r\n          background: Main_Light,\r\n          color: \"#fff\"\r\n        }\r\n      },\r\n      cancelButtonProps: {\r\n        style: {\r\n          color: Main_Dark\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const wrapRequest = <T extends any[], R>(req: (...args: T) => Promise<Response<R>>) => {\r\n  const useReqImpl = (...args: T): [Response<R>[\"data\"], Flags, () => void] => {\r\n    const [data, setData] = useState<Response[\"data\"]>(null)\r\n    const [flag, setFlag] = useState(Flags.Normal)\r\n\r\n    const send = useCallback(async () => {\r\n      setFlag(Flags.Pending)\r\n      const res = await req(...args)\r\n      if (res.code === ErrorCode.Success) {\r\n        setFlag(Flags.Success)\r\n      } else {\r\n        setFlag(Flags.Fail)\r\n      }\r\n      setData(res.data)\r\n    }, [...args])\r\n\r\n    useEffect(() => {\r\n      send()\r\n    }, [send])\r\n\r\n    return [data, flag, send]\r\n  }\r\n  return useReqImpl\r\n}\r\n\r\nexport const useGetQuestionId = () => {\r\n  const { questionId } = useParams<{\r\n    questionId: string | undefined\r\n  }>()\r\n  return questionId\r\n}","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\mdEditor\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\config\\colors.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx",[],"D:\\PROJECT\\leetCode\\src\\config\\code.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx",[],"D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\footer\\Footer.tsx",["427"],"import React,{ FC, useEffect, useRef, useState } from 'react'\r\nimport './style.scss'\r\nimport { exeCode, submitCode } from '../../../../apis/comments'\r\nimport { message } from 'antd'\r\nimport { BarsOutlined, SwapOutlined, LeftOutlined, RightOutlined, CaretRightOutlined, } from '@ant-design/icons'\r\nimport { connect } from 'react-redux'\r\nimport { submitCodeaAction, ExeCodeRes, exeCodeResAction } from '../../store/actions'\r\ninterface CodeRes {\r\n    \"state\": string,\r\n    \"input\": string,\r\n    \"output\": string,\r\n    \"exceptResult\": string\r\n}\r\n\r\ninterface Props {\r\n    code:string,\r\n    disSubmtCode:(key:string) => void,\r\n    disExeCodeRes:(res:ExeCodeRes) => void\r\n}\r\n\r\nconst Footer: FC<Props> = (props) => {\r\n    const {code, disSubmtCode, disExeCodeRes} = props\r\n    const codeResult = useRef<null | HTMLDivElement>(null)\r\n    const [codeRes, setCodeRes] = useState<CodeRes | ''>('')\r\n    async function handleExeCode() {\r\n        const res = await exeCode('questionId',code, 'testCode')\r\n        if (res.data.code === 200) {\r\n            setCodeRes(res.data.data)\r\n            codeResult.current!.style.display = 'block'\r\n        } else {\r\n            message.error('网络错误！')\r\n        }\r\n    }\r\n    function handleCloseExeCode() {\r\n        codeResult.current!.style.display = 'none'\r\n    }\r\n  \r\n    async function handleCodeSubmit () {\r\n        const res = await submitCode ('questionId',code)\r\n        \r\n        if(res.data.code === 200){\r\n            disSubmtCode('4')\r\n            disExeCodeRes(res.data.data)\r\n            message.success('提交成功')\r\n        }else{\r\n            message.error('提交失败')\r\n        }    \r\n    }\r\n    return (\r\n        <>\r\n            <ul className='exe-code-box'>\r\n                <li><BarsOutlined />题目列表</li>\r\n                <li><SwapOutlined />随机一题</li>\r\n                <li className='before'><LeftOutlined />上一题</li>\r\n                <li className='totalnumber'>1/1982</li>\r\n                <li>下一题<RightOutlined /></li>\r\n                <li>控制台</li>\r\n                <li>贡献</li>\r\n                <li onClick={handleExeCode} className='execode'><CaretRightOutlined />执行代码</li>\r\n                <li onClick={handleCodeSubmit} className='submit'>提交</li>\r\n            </ul>\r\n            <div ref={codeResult} className='code-result'>\r\n                <span className='header'>\r\n                    执行结果\r\n                <span onClick={handleCloseExeCode} className='close'>X</span>\r\n                </span>\r\n                {\r\n                    codeRes?<ul className='result-info'>\r\n                    <li>状态 <span >{codeRes.state}</span></li>\r\n                    <li>输入 <span className=\"info\">{codeRes.input}</span></li>\r\n                    <li>输出 <span className=\"info\">{codeRes.output}</span></li>\r\n                    <li>结果 <span className=\"info\">{codeRes.exceptResult}</span></li>\r\n                </ul>:''\r\n                }\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\nconst mapState = (state:any) => {\r\n    return {\r\n        code:state.editorConfig.code\r\n    }\r\n}\r\nconst mapDispatch = (dispatch:any) => {\r\n    return {\r\n        disSubmtCode(key:string){\r\n            dispatch(submitCodeaAction(key))\r\n        },\r\n        disExeCodeRes(res:ExeCodeRes) {\r\n            dispatch(exeCodeResAction(res))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapState, mapDispatch)(Footer)","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\index.jsx",["428"],"import React, { useEffect } from 'react'\r\nimport Sider from './components/indexNav/indexNav'\r\nimport ListIndex from './components/list/list'\r\nimport '../questionlist/QuestionList.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { useListData } from './store/action'\r\nimport './index.css'\r\n\r\n\r\nconst Index = (props) =>{\r\n    let {data,loading} = useSelector(state=>state.list)\r\n    let getData = useListData()\r\n    // let {scearch} = useLocation()\r\n    // let {difficulty,status} = qs.parse(search.substr(1))\r\n    useEffect(()=>{\r\n        getData()\r\n       },[])\r\n    return <div className='login' id='indexWrap'>\r\n        <Sider />\r\n        <ListIndex\r\n            data={data}\r\n            loading={loading}    \r\n        />\r\n        <div></div>\r\n    </div>\r\n}\r\n\r\nexport default Index","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\reudcer\\list.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\sagaRoot.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\reducers\\profile_reqHistory.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\WindowWarp\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Side\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Head\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\redux_test.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\req_historySaga.js",["429"],"import { call, put, takeLatest } from 'redux-saga/effects'\r\n// import { reqPersonal } from '../../API/index'\r\nimport { GETLISTOFTOPICS } from '../redux_test'\r\n\r\n\r\nfunction* reqHistoryData(action) {\r\n\r\n    yield put({ type: GETLISTOFTOPICS })\r\n}\r\n\r\n\r\nfunction* watchReqHistoryData() {\r\n    yield takeLatest(\"getList\", reqHistoryData);\r\n}\r\n\r\nexport default watchReqHistoryData","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\sagas\\req_questionInfo.js",["430"],"import { call, put, takeEvery, } from 'redux-saga/effects'\r\n// import { reqQuestion } from '../../API/index'\r\nimport { GETQUESTION } from '../redux_test'\r\n\r\n\r\nfunction* reqQuestionInfo(action) {\r\n\r\n    yield put({ type: GETQUESTION })\r\n}\r\n\r\n\r\nfunction* watchreqQuestionInfo() {\r\n    yield takeEvery(\"getQues\", reqQuestionInfo);\r\n}\r\n\r\nexport default watchreqQuestionInfo","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\indexNav\\indexNav.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\list\\list.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\store\\action\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginWindow\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\mock\\index.js",["431"],"import Mock from 'mockjs'\r\nimport data from '../store'\r\n\r\nconst Random = Mock.Random\r\nconst dataList = []\r\nfor(let i = 10;i<100;i++){\r\n    const template ={\r\n        \"code\":1,\r\n        \"title\":Random.string(12,30),\r\n        \"questionId\":Random.string(11),\r\n        \"answer_num\":Random.integer(200,1000),\r\n        \"difficulty\":\"简单\",\r\n        \"passrate\":Random.integer(0,100)+'%',\r\n        \"status\":\"未完成\"\r\n    }\r\n    dataList.push(template)\r\n}\r\n\r\nMock.mock('/question/list','get',function() {\r\n    return Mock.mock({\r\n            \"code\": 1,\r\n            \"data\": dataList,\r\n            \"message\": \"请求成功！\"\r\n          })\r\n})\r\n\r\n\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\router\\config.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\search\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\components\\randomStart\\index.jsx",["432"],"import React from 'react'\r\nimport { Button,Card } from \"antd\";\r\n\r\nconst RandomStart = (props) =>{\r\n    return  (<div id=\"button_wrap\">\r\n        <Button>随机开始</Button>\r\n    </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default RandomStart;","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginFooter\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\InfoDisplay\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\components\\Section\\QuestionInfo\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\index.tsx",["433","434"],"import React, { useRef, useState } from 'react';\r\nimport { Card, Button } from 'antd';\r\nimport {useHistory} from 'react-router-dom'\r\nimport PhoneLoginForm from './PhoneLoginForm'\r\nimport PwdLoginForm from './PwdLoginForm'\r\nimport { CaretRightOutlined} from '@ant-design/icons'\r\n\r\nimport './index.scss'\r\n\r\n\r\ninterface IProps {\r\n    isPhoneLogin: boolean,\r\n    setIsPhoneLogin: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\n\r\nconst LoginMain: React.FC<IProps> = ({ isPhoneLogin, setIsPhoneLogin}) => {\r\n\r\n    let history = useHistory();\r\n    const handleClick = () => {\r\n        \r\n        if (!isPhoneLogin) {\r\n            history.push('/resetpassword');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card \r\n            className='login-window-main'\r\n            title={isPhoneLogin ? '欢迎使用力扣' : '账号密码登录'}\r\n            bordered={false}\r\n        >\r\n\r\n            <PhoneLoginForm style={{display: isPhoneLogin ? 'block' : 'none'}} />\r\n            <PwdLoginForm style={{display: isPhoneLogin ? 'none' : 'block'}} />\r\n            \r\n\r\n\r\n            <div className='link-button-warp'>\r\n                <Button className='link-button' type='link' onClick={() => setIsPhoneLogin(!isPhoneLogin)}>\r\n                    {isPhoneLogin ? '账号密码登录' : '验证码登录'}\r\n                </Button>\r\n\r\n\r\n                <Button className='link-button' type='link' onClick={handleClick}>\r\n                    {isPhoneLogin ? '邮箱注册' : '忘记密码'}\r\n                </Button>\r\n            </div>\r\n\r\n            <div className='us-username' style={{display: isPhoneLogin ? 'flex' : 'none'}}>\r\n                <span>已有美国站账号</span><CaretRightOutlined style={{fontSize: '12px', marginLeft: '2px'}}/>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LoginMain;","D:\\PROJECT\\leetCode\\src\\pages\\profile\\store\\actions\\proReqHistory_action.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\ErrorInfo\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdWindow\\resetPwdWindow.tsx",["435","436"],"import React, { createContext, useState } from \"react\"\r\nimport ResetPwdMain from '../ResetPwdMain/resetPwdMain'\r\nimport './index.scss'\r\n\r\n\r\n\r\nconst ResetPwdWindow: React.FC = () => {\r\n    return (\r\n        <div\r\n            className='resetpwd-window'\r\n        >\r\n            <ResetPwdMain />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPwdWindow","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\pwdLoginForm.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\captchaInput.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\phoneInput.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\phoneInput.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\captchaInput.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\actions\\pwdLoginForm.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PwdLoginForm\\index.tsx",["437","438","439"],"/* \r\n\r\n\r\n\r\n*/\r\n\r\n\r\nimport { Form, Button, Input } from 'antd';\r\nimport React, { ChangeEvent, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport { EmptyUsername, EmptyPassword } from '../ErrorInfo/index'\r\nimport {\r\n    beEmptyPwd,\r\n    beEmptyUername,\r\n    beInvalid,\r\n    notBeEmptyPwd,\r\n    notBeEmptyUsername,\r\n    notBeInvalid,\r\n    breakPwdDefault,\r\n    breakUsernameDefault,\r\n    keepPwdDefault,\r\n    keepUsernameDefault,\r\n    onPwdChange,\r\n    onUsernameChange\r\n} from '../../../store/actions/pwdLoginForm';\r\n\r\nimport {IState} from '../../../store/reducers/pwdLoginForm';\r\nimport { IRootState} from '../../../store/reducers/index'\r\nimport './index.scss'\r\n\r\ninterface BaseProps extends IState {\r\n    children?: React.ReactNode;\r\n    style?: {};\r\n    [key: string]: any;\r\n}\r\n\r\nconst PhoneLoginForm: React.FC<BaseProps> = (props) => {\r\n    const [form] = Form.useForm();\r\n\r\n    // state\r\n    const {\r\n        username,\r\n        password,\r\n        isInvalid,\r\n        isPwdEmpty,\r\n        isPwdKeepDefault,\r\n        isUsernameEmpty,\r\n        isUsernameKeepDefault\r\n    } = props;\r\n\r\n    // dispatch\r\n    const {\r\n        beEmptyPwd,\r\n        beEmptyUername,\r\n        beInvalid,\r\n        notBeEmptyPwd,\r\n        notBeEmptyUsername,\r\n        notBeInvalid,\r\n        breakPwdDefault,\r\n        breakUsernameDefault,\r\n        keepPwdDefault,\r\n        keepUsernameDefault,\r\n        updateUsername,\r\n        updatePassword\r\n    } = props;\r\n\r\n    // 将表单填入的信息提交\r\n    const onFinish = () => {\r\n        // const { username, password } = values;\r\n        if (username === '') {\r\n            breakUsernameDefault();\r\n            beEmptyUername();\r\n        }\r\n        if (password === '') {\r\n            breakPwdDefault();\r\n            beEmptyPwd();\r\n        }\r\n\r\n        console.log(username, password);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n        }\r\n    }, []);\r\n\r\n    const listenUsername = (e: ChangeEvent<HTMLInputElement>) => {\r\n        keepUsernameDefault();\r\n\r\n        let username = e.target.value;\r\n\r\n        // 更新 username\r\n        updateUsername(username);\r\n\r\n        // isEmpty\r\n        const isEmpty = username === '';\r\n        if (isEmpty) beEmptyUername();\r\n        else notBeEmptyUsername();\r\n    }\r\n    const listenPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        keepPwdDefault();\r\n\r\n        let password = e.target.value;\r\n\r\n        // 更新 password\r\n        updatePassword(password);\r\n\r\n        // isEmpty\r\n        const isEmpty = password === '';\r\n        if (isEmpty) beEmptyPwd();\r\n        else notBeEmptyPwd();\r\n    }\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form\r\n            className='pwd-login-form'\r\n            name='pwd_login_form'\r\n            // onFinish={onFinish}\r\n            form={form}\r\n            initialValues={{\r\n                username: '',\r\n                password: ''\r\n            }}\r\n            style={props.style}\r\n        >\r\n            <Form.Item\r\n                className='pwd-login-form-item username-input-item'\r\n                name='username'\r\n                style={\r\n                    isUsernameKeepDefault ? { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ } :\r\n                        isUsernameEmpty ? { marginBottom: '40px' } :\r\n                            { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ }\r\n                }\r\n                help={\r\n                    isUsernameKeepDefault ? <></> :\r\n                        isUsernameEmpty ? <EmptyUsername /> :\r\n                            <></>\r\n                }\r\n                validateStatus={\r\n                    isUsernameKeepDefault ? 'success' :\r\n                        isUsernameEmpty ? 'error' : 'success'\r\n            \r\n                }\r\n            >\r\n                <Input className='username-input' placeholder='手机号 / 邮箱'onChange={listenUsername} />\r\n            </Form.Item>\r\n\r\n\r\n\r\n            <Form.Item\r\n                className='pwd-login-form-item password-input-item'\r\n                name=\"password\"\r\n                style={\r\n                    isPwdKeepDefault ? { marginBottom: '24px' } :\r\n                        isPwdEmpty ? { marginBottom: '40px' } : { marginBottom: '24px' }\r\n                }\r\n                help={\r\n                    isPwdKeepDefault ? <></> :\r\n                        isPwdEmpty ? <EmptyPassword /> :\r\n                            <></>\r\n                }\r\n                validateStatus={\r\n                    isPwdKeepDefault ? 'success' :\r\n                        isPwdEmpty ? 'error' : 'success'\r\n                }\r\n            >\r\n                <Input.Password className='password-input' placeholder='输入密码' onChange={listenPassword} />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                className='pwd-login-form-item primary-button-item'\r\n            >\r\n                <Button \r\n                    // loading={true}\r\n                    className='primary-button' \r\n                    type='primary' \r\n                    onClick={onFinish} \r\n                    style={{ width: '100%' }}>登录</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: IRootState) => ({\r\n    isUsernameKeepDefault: state.pwdLoginForm.isUsernameKeepDefault,\r\n    isPwdKeepDefault: state.pwdLoginForm.isPwdKeepDefault,\r\n    isInValid: state.pwdLoginForm.isInvalid,\r\n    isUsernameEmpty: state.pwdLoginForm.isUsernameEmpty,\r\n    isPwdEmpty: state.pwdLoginForm.isPwdEmpty,\r\n    username: state.pwdLoginForm.username,\r\n    password: state.pwdLoginForm.password\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    updateUsername: (value: string) => dispatch(onUsernameChange(value)),\r\n    updatePassword: (value: string) => dispatch(onPwdChange(value)),\r\n\r\n    beEmptyPwd: () => dispatch(beEmptyPwd()),\r\n    notBeEmptyPwd: () => dispatch(notBeEmptyPwd()),\r\n\r\n    beEmptyUername: () => dispatch(beEmptyUername()),\r\n    notBeEmptyUsername: () => dispatch(notBeEmptyUsername()),\r\n\r\n    beInvalid: () => dispatch(beInvalid()),\r\n    notBeInvalid: () => dispatch(notBeInvalid()),\r\n\r\n    keepPwdDefault: () => dispatch(keepPwdDefault()),\r\n    breakPwdDefault: () => dispatch(breakPwdDefault()),\r\n\r\n    keepUsernameDefault: () => dispatch(keepUsernameDefault()),\r\n    breakUsernameDefault: () => dispatch(breakUsernameDefault())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneLoginForm);\r\n\r\n","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\index.tsx",["440","441","442"],"import { Form, Button, message } from 'antd';\r\nimport React, { useEffect, useContext } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux'\r\nimport PhoneInput, { IPhoneNumber } from './PhoneInput'\r\nimport CaptchaInput, { ICaptcha } from './CaptchaInput'\r\nimport { InvalidPhoneNumber, EmptyPhoneNumber, EmptyCaptcha } from '../ErrorInfo/index'\r\nimport { beEmptyCaptcha, breakCaptchaDefault } from '../../../store/actions/captchaInput'\r\nimport { beEmptyNumber, breakPhoneDefault } from '../../../store/actions/phoneInput'\r\nimport { IRootState } from '../../../store/reducers';\r\nimport './index.scss'\r\n\r\n\r\ninterface IMapState {\r\n    isPhoneKeepDefault: boolean;\r\n    isCaptchaKeepDefault: boolean;\r\n    isInValidPhone: boolean;\r\n    isPhoneEmpty: boolean;\r\n    isCaptchaEmpty: boolean;\r\n}\r\n\r\ninterface IMapDipatch {\r\n    beEmptyCaptcha: () => void;\r\n    breakCaptchaDefault: () => void;\r\n    beEmptyNumber: () => void;\r\n    breakPhoneDefault: () => void;\r\n}\r\n\r\ninterface IBaseProps extends IMapState, IMapDipatch {\r\n    children?: React.ReactNode;\r\n    style?: {};\r\n}\r\n\r\nconst PhoneLoginForm: React.FC<IBaseProps> = (props) => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    // state\r\n    const {\r\n        isPhoneKeepDefault,\r\n        isCaptchaKeepDefault,\r\n        isInValidPhone,\r\n        isPhoneEmpty,\r\n        isCaptchaEmpty\r\n    } = props;\r\n\r\n\r\n    // dispatch\r\n    const {\r\n        beEmptyCaptcha,\r\n        breakCaptchaDefault,\r\n        beEmptyNumber,\r\n        breakPhoneDefault\r\n    } = props;\r\n\r\n\r\n    // const isPhoneInputOnBlur = useSelector(state => state.phoneInput.isOnBlur, shallowEqual);\r\n    /* \r\n\r\n        需求：\r\n            1. 用户在输入完手机号，并且失去该输入框焦点的时候，检测输入的手机号是否正确\r\n                * 正确的手机号需要将输入框的背景变淡蓝色，并且使获取验证码的按钮解除 disabled\r\n                * 输入错误的时候提示：error\r\n                    * 用户再次进行输入的时候取消 error 保持默认状态\r\n                \r\n            2. 用户在点击按钮的检测手机号输入框和验证码输入框是否为空\r\n                * 如果为空提示：error\r\n    \r\n    */\r\n\r\n\r\n    // 将表单填入的信息提交\r\n    const onFinish = (values: {captchaInput: ICaptcha, phoneInput: IPhoneNumber}) => {\r\n        const { captchaInput: { captcha }, phoneInput: { phone } } = values;\r\n        if ( captcha === '') {\r\n            breakCaptchaDefault();\r\n            beEmptyCaptcha();\r\n        }\r\n        if (phone === '') {\r\n            breakPhoneDefault();\r\n            beEmptyNumber();\r\n        }\r\n\r\n        // message.error('验证码错误，请重新验证');\r\n        console.log(values);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Form\r\n            className='phone-login-form'\r\n            name='phone_login_form'\r\n            onFinish={onFinish}\r\n            form={form}\r\n            initialValues={{\r\n                phone: {\r\n                    selectValue: '+86',\r\n                    phoneNumber: ''\r\n                },\r\n                captcha: {\r\n                    captchaValue: ''\r\n                }\r\n            }}\r\n            style={props.style}\r\n        >\r\n            <Form.Item\r\n                style={\r\n                    isPhoneKeepDefault ? { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ } :\r\n                        isPhoneEmpty ? { marginBottom: '40px' } :\r\n                            isInValidPhone ? { marginBottom: '40px' } :\r\n                                { marginBottom: '24px'/* , backgroundColor: '#E8F0FE' */ }\r\n                }\r\n                className='phone-login-form-item phone-input-item'\r\n                name='phone'\r\n                help={\r\n                    isPhoneKeepDefault ? <></> :\r\n                        isPhoneEmpty ? <EmptyPhoneNumber /> :\r\n                            isInValidPhone ? <InvalidPhoneNumber /> :\r\n                                <></>\r\n                }\r\n                validateStatus={\r\n                    isPhoneKeepDefault ? 'success' :\r\n                        isPhoneEmpty ? 'error' :\r\n                        isInValidPhone ? 'error' : 'success'\r\n                }\r\n            >\r\n                <PhoneInput />\r\n            </Form.Item>\r\n\r\n\r\n\r\n            <Form.Item\r\n                style={\r\n                    isCaptchaKeepDefault ? { marginBottom: '24px' } :\r\n                        isCaptchaEmpty ? { marginBottom: '40px' } : { marginBottom: '24px' }\r\n                }\r\n                className='phone-login-form-item captcha-input-item'\r\n                name=\"captcha\"\r\n                help={\r\n                    isCaptchaKeepDefault ? <></> :\r\n                        isCaptchaEmpty ? <EmptyCaptcha /> :\r\n                            <></>\r\n                }\r\n                validateStatus={\r\n                    isCaptchaKeepDefault ? 'success' :\r\n                        isCaptchaEmpty ? 'error' : 'success'\r\n                }\r\n            >\r\n                <CaptchaInput />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                className='phone-login-form-item primary-button-item'\r\n            >\r\n                <Button \r\n                    className='primary-button' \r\n                    type='primary' \r\n                    htmlType='submit' \r\n                    style={{ width: '100%' }}\r\n                >\r\n                    登录 / 注册\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: IRootState): IMapState => ({\r\n    isPhoneKeepDefault: state.phoneInput.isKeepDefault,\r\n    isCaptchaKeepDefault: state.captchaInput.isKeepDefault,\r\n    isInValidPhone: state.phoneInput.isInvalid,\r\n    isPhoneEmpty: state.phoneInput.isEmpty,\r\n    isCaptchaEmpty: state.captchaInput.isEmpty\r\n});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMapDipatch => ({\r\n    beEmptyCaptcha: () => void dispatch(beEmptyCaptcha()),\r\n    breakCaptchaDefault: () => void dispatch(breakCaptchaDefault()),\r\n    beEmptyNumber: () => void dispatch(beEmptyNumber()), \r\n    breakPhoneDefault: () => void dispatch(breakPhoneDefault())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneLoginForm);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\CaptchaInput\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\PhoneInput\\index.tsx",["443"],"import { Input, Select,  } from 'antd'\r\nimport { useCallback, useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux'\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n    beInvalidNumber,\r\n    notBeInvalidNumber,\r\n    beEmptyNumber,\r\n    notBeEmptyNumber,\r\n    notBeOnBlur,\r\n    onPhoneChange,\r\n    onSelectChange,\r\n    keepPhoneDefault,\r\n    breakPhoneDefault\r\n}  from '../../../../store/actions/phoneInput'\r\n\r\nimport { IRootState } from '../../../../store/reducers';\r\n\r\nimport './index.scss'\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\ninterface IMapState {\r\n    phone: string | undefined;\r\n    select: string | undefined;\r\n}\r\n\r\ninterface IMapDispatch {\r\n    beInvalidNumber: () => void;\r\n    notBeInvalidNumber: () => void;\r\n    beEmptyNumber: () => void;\r\n    notBeEmptyNumber: () => void;\r\n    notBeOnBlur: () => void;\r\n    updatePhone: (value: string) => void;\r\n    updateSelect: (value: string) => void;\r\n    breakPhoneDefault: () => void;\r\n    keepPhoneDefault: () => void;\r\n}\r\n\r\nexport interface IPhoneNumber {\r\n    select: string | undefined;\r\n    phone: string | undefined;\r\n}\r\n\r\ninterface BaseProps extends IMapState, IMapDispatch {\r\n    children?: React.ReactNode;\r\n    value?: IPhoneNumber;\r\n    onChange?: (value: IPhoneNumber) => void;\r\n}\r\n\r\n\r\nconst PhoneInput: React.FC<BaseProps> = (props) => {\r\n\r\n    const {onChange, value} = props;\r\n    \r\n    const [isSelectMouseEnter, setIsSelectMouseEnter] = useState(false);\r\n    const [isOpened, setIsOpened] = useState(false);\r\n\r\n    // state\r\n    const {\r\n        phone,\r\n        select\r\n    } = props;\r\n\r\n    // dispatch\r\n    const {\r\n        beInvalidNumber,\r\n        notBeInvalidNumber,\r\n        beEmptyNumber,\r\n        notBeEmptyNumber,\r\n        notBeOnBlur,\r\n        updatePhone,\r\n        updateSelect,\r\n        breakPhoneDefault,\r\n        keepPhoneDefault\r\n    } = props;\r\n\r\n    // 让当前控件 onChange 的时候与 Form.Item 产生交互\r\n    const triggerChange = (changedValue: IPhoneNumber) => {\r\n        onChange?.({ phone, select, ...value, ...changedValue });\r\n    };\r\n\r\n    const defOnChange = (e: any) => {\r\n        keepPhoneDefault();\r\n        // 如果是 Select 改变\r\n        if (typeof e === 'string') {\r\n            const selectValue = e;\r\n            updateSelect(selectValue);\r\n            triggerChange({\r\n                phone,\r\n                select: selectValue\r\n            });\r\n        } else {\r\n            // 如果是 Input 改变\r\n            const phoneNumber = e.target.value;\r\n\r\n            // 更新 value\r\n            updatePhone(phoneNumber);\r\n\r\n            // isInvalid\r\n            const isInvalid = !(/^1[3-9][0-9]{9}$/g.test(phoneNumber)/* ||phoneNumber === '' */);\r\n            if (isInvalid) beInvalidNumber();\r\n            else notBeInvalidNumber();\r\n\r\n            // isEmpty\r\n            const isEmpty = phoneNumber === '';\r\n            if (isEmpty) beEmptyNumber();\r\n            else notBeEmptyNumber();\r\n            triggerChange({\r\n                phone: phoneNumber,\r\n                select\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n \r\n    return (\r\n        <>\r\n            <Input\r\n                className='phone-input'\r\n                placeholder=\"输入手机号\"\r\n                type='tel'\r\n                onChange={defOnChange}\r\n\r\n                onFocus={() => notBeOnBlur()}\r\n                onBlur={() => breakPhoneDefault()}\r\n                \r\n\r\n                prefix={\r\n                    <Select \r\n                        bordered={false}\r\n                        className='phone-input-select'\r\n                        defaultValue='+86'\r\n                        suffixIcon={<DownOutlined \r\n                                        rotate={isOpened ? 180 : 0} \r\n                                        onClick={() => setIsOpened(!isOpened)} \r\n                                        style={{ borderRight: '1px solid #D9D9D9', \r\n                                                paddingRight: '3px', fontSize: '10px', \r\n                                                color: isSelectMouseEnter ? '#2DB55D' : '#D9D9D9'}} \r\n                                    />}\r\n                        onMouseEnter={() => setIsSelectMouseEnter(true)}\r\n                        onMouseLeave={() => setIsSelectMouseEnter(false)}\r\n\r\n                        // 处理下拉框是否展开\r\n                        onClick={() => setIsOpened(!isOpened)}\r\n                        onChange={defOnChange}\r\n                        onFocus={() => {console.log(1);}}\r\n\r\n                        open={isOpened}\r\n                        // options={options}   用 options 属性替换 Option 组件性能更好\r\n\r\n                        optionLabelProp='value'\r\n                    \r\n                        dropdownMatchSelectWidth={false}\r\n                        \r\n                        dropdownStyle={{width: '150px'}}\r\n                    >\r\n                        <Option key='1' value='+86'>中国(+86)</Option>\r\n                        <Option key='2' value='+852'>中国香港(+852)</Option>\r\n                        <Option key='3' value='+853'>中国香港(+853)</Option>\r\n                        <Option key='4' value='+886'>中国台湾(+886)</Option>\r\n                        <Option key='6' value='+1'>美国(+1)</Option>\r\n                        <Option key='7' value='+33'>法国(+33)</Option>\r\n                        <Option key='8' value='+44'>英国(+44)</Option>\r\n                        <Option key='9' value='+49'>德国(+49)</Option>\r\n                        <Option key='10' value='+60'>马来西亚(+60)</Option>\r\n                        <Option key='11' value='+61'>澳大利亚(+61)</Option>\r\n                        <Option key='12' value='+62'>印度尼西亚(+62)</Option>\r\n                        <Option key='13' value='+64'>新西兰(+64)</Option>\r\n                        <Option key='14' value='+65'>新加坡(+65)</Option>\r\n                        <Option key='15' value='+66'>泰国(+66)</Option>\r\n                        <Option key='16' value='+81'>日本(+81)</Option>\r\n                        <Option key='17' value='+82'>韩国(+82)</Option>\r\n                        <Option key='18' value='+91'>印度(+91)</Option>\r\n                    </Select>\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: IRootState): IMapState => ({\r\n    phone: state.phoneInput.phone,\r\n    select: state.phoneInput.select\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMapDispatch => ({\r\n    beInvalidNumber: () => void dispatch(beInvalidNumber()),\r\n    notBeInvalidNumber: () => void dispatch(notBeInvalidNumber()),\r\n    beEmptyNumber: () => void dispatch(beEmptyNumber()),\r\n    notBeEmptyNumber: () => void dispatch(notBeEmptyNumber()),\r\n    notBeOnBlur: () => void dispatch(notBeOnBlur()),\r\n    updatePhone: (value: string) => void dispatch(onPhoneChange(value)),\r\n    updateSelect: (value: string) => void dispatch(onSelectChange(value)),\r\n    keepPhoneDefault: () => void keepPhoneDefault(),\r\n    breakPhoneDefault: () => void breakPhoneDefault()    \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneInput);","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdMain\\resetPwdMain.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdMain\\ResetForm\\resetForm.tsx",["444"],"import React from 'react';\r\nimport ProForm, { ProFormText, ProFormCaptcha } from '@ant-design/pro-form';\r\nimport { Button, notification, message } from 'antd';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\n\r\nexport enum ResetFormType {\r\n    ByPhoneReset = 'byPhoneReset',\r\n    ByEmailReset = 'byEmailReset'\r\n}\r\n\r\n\r\n\r\ninterface OtherProps {\r\n    style?: {[key: string]: string};\r\n    [key: string]: any;\r\n}\r\n\r\ninterface BaseResetFormProps extends OtherProps{\r\n    type: ResetFormType;\r\n}\r\n\r\nconst ResetForm: React.FC<BaseResetFormProps > = (props) => {\r\n\r\n    const {\r\n        type,\r\n        style\r\n    } = props;\r\n\r\n\r\n    const waitTime = (time: number = 100) => {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, time);\r\n        });\r\n    };\r\n\r\n\r\n    const openNotification = () => {\r\n        notification.open({\r\n            message: 'Notification Title',\r\n            description:\r\n                '我们已经给您发送了一封电子邮件，请稍等片刻。如果过了10分钟后还未收到，请及时联系我们。',\r\n            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\r\n            duration: 5,\r\n            placement: 'topLeft'\r\n        });\r\n    };\r\n\r\n    \r\n    if (type === ResetFormType.ByPhoneReset) {\r\n        return (\r\n            <ProForm\r\n                style={style}\r\n                onFinish={async () => {\r\n                    await waitTime(2000);\r\n\r\n\r\n                    // message.success('');\r\n                }}\r\n                submitter={{\r\n                    searchConfig: {\r\n                        submitText: '重设我的密码',\r\n                    },\r\n                    render: (_, dom) => dom.pop(),\r\n                    submitButtonProps: {\r\n                        size: 'large',\r\n                        style: {\r\n                            width: '100%',\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                <ProFormText\r\n                    fieldProps={{\r\n                        size: 'large',\r\n                        // prefix: <MobileOutlined />,\r\n                    }}\r\n                    name=\"phone\"\r\n                    placeholder=\"手机号\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入手机号!',\r\n                        },\r\n                        {\r\n                            pattern: /^1\\d{10}$/,\r\n                            message: '不合法的手机号格式!',\r\n                        },\r\n                    ]}\r\n                />\r\n                <ProFormCaptcha\r\n                    fieldProps={{\r\n                        size: 'large',\r\n                        // prefix: <MailOutlined />,\r\n                    }}\r\n                    captchaProps={{\r\n                        size: 'large',\r\n                    }}\r\n                    phoneName=\"phone\"\r\n                    name=\"captcha\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入验证码',\r\n                        },\r\n                    ]}\r\n                    placeholder=\"验证码\"\r\n                    onGetCaptcha={async (phone) => {\r\n                        await waitTime(1000);\r\n                        message.success(`手机号 ${phone} 验证码发送成功!`);\r\n                    }}\r\n                />\r\n            </ProForm>\r\n        );\r\n    } else {\r\n        return (\r\n            <ProForm\r\n                style={style}\r\n                onFinish={async () => {\r\n                    await waitTime(2000);\r\n                    openNotification();\r\n                }}\r\n                submitter={{\r\n                    searchConfig: {\r\n                        submitText: '重设我的密码',\r\n                    },\r\n                    render: (_, dom) => dom.pop(),\r\n                    submitButtonProps: {\r\n                        size: 'large',\r\n                        style: {\r\n                            width: '100%',\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                <ProFormText\r\n                    fieldProps={{\r\n                        size: 'large',\r\n                        // prefix: <MobileOutlined />,\r\n                    }}\r\n                    name=\"phone\"\r\n                    placeholder=\"请输入邮箱\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入邮箱!',\r\n                        },\r\n                        {\r\n                            pattern: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/,\r\n                            message: '不合法的邮箱格式!',\r\n                        },\r\n                    ]}\r\n                />\r\n\r\n            </ProForm>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ResetForm;","D:\\PROJECT\\leetCode\\src\\components\\loading\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\components\\likeBtn\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\apis\\share.ts",[],{"ruleId":"445","replacedBy":"446"},{"ruleId":"447","replacedBy":"448"},{"ruleId":"449","severity":1,"message":"450","line":6,"column":3,"nodeType":"451","messageId":"452","endLine":6,"endColumn":11},{"ruleId":"445","replacedBy":"446"},{"ruleId":"447","replacedBy":"448"},{"ruleId":"453","severity":1,"message":"454","line":49,"column":11,"nodeType":"455","endLine":49,"endColumn":44},{"ruleId":"453","severity":1,"message":"454","line":54,"column":11,"nodeType":"455","endLine":54,"endColumn":42},{"ruleId":"453","severity":1,"message":"456","line":59,"column":11,"nodeType":"455","endLine":59,"endColumn":80},{"ruleId":"449","severity":1,"message":"457","line":1,"column":10,"nodeType":"451","messageId":"452","endLine":1,"endColumn":19},{"ruleId":"449","severity":1,"message":"458","line":22,"column":41,"nodeType":"451","messageId":"452","endLine":22,"endColumn":45},{"ruleId":"449","severity":1,"message":"459","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":20},{"ruleId":"449","severity":1,"message":"460","line":1,"column":22,"nodeType":"451","messageId":"452","endLine":1,"endColumn":27},{"ruleId":"453","severity":1,"message":"456","line":11,"column":23,"nodeType":"455","endLine":11,"endColumn":26},{"ruleId":"461","severity":1,"message":"462","line":46,"column":50,"nodeType":"463","messageId":"464","endLine":46,"endColumn":52},{"ruleId":"465","severity":1,"message":"466","line":1,"column":10,"nodeType":"451","messageId":"452","endLine":1,"endColumn":21},{"ruleId":"465","severity":1,"message":"467","line":1,"column":23,"nodeType":"451","messageId":"452","endLine":1,"endColumn":38},{"ruleId":"465","severity":1,"message":"468","line":5,"column":6,"nodeType":"451","messageId":"452","endLine":5,"endColumn":19},{"ruleId":"465","severity":1,"message":"469","line":13,"column":10,"nodeType":"451","messageId":"452","endLine":13,"endColumn":25},{"ruleId":"465","severity":1,"message":"470","line":1,"column":19,"nodeType":"451","messageId":"452","endLine":1,"endColumn":26},{"ruleId":"465","severity":1,"message":"471","line":2,"column":10,"nodeType":"451","messageId":"452","endLine":2,"endColumn":20},{"ruleId":"465","severity":1,"message":"472","line":35,"column":19,"nodeType":"451","messageId":"452","endLine":35,"endColumn":29},{"ruleId":"465","severity":1,"message":"473","line":36,"column":10,"nodeType":"451","messageId":"452","endLine":36,"endColumn":17},{"ruleId":"465","severity":1,"message":"474","line":26,"column":5,"nodeType":"451","messageId":"452","endLine":26,"endColumn":8},{"ruleId":"465","severity":1,"message":"475","line":48,"column":9,"nodeType":"451","messageId":"452","endLine":48,"endColumn":21},{"ruleId":"476","severity":1,"message":"477","line":71,"column":8,"nodeType":"478","endLine":71,"endColumn":17,"suggestions":"479"},{"ruleId":"476","severity":1,"message":"480","line":71,"column":9,"nodeType":"481","endLine":71,"endColumn":16},{"ruleId":"465","severity":1,"message":"482","line":1,"column":20,"nodeType":"451","messageId":"452","endLine":1,"endColumn":29},{"ruleId":"476","severity":1,"message":"483","line":17,"column":10,"nodeType":"478","endLine":17,"endColumn":12,"suggestions":"484"},{"ruleId":"449","severity":1,"message":"485","line":1,"column":10,"nodeType":"451","messageId":"452","endLine":1,"endColumn":14},{"ruleId":"449","severity":1,"message":"485","line":1,"column":10,"nodeType":"451","messageId":"452","endLine":1,"endColumn":14},{"ruleId":"449","severity":1,"message":"486","line":2,"column":8,"nodeType":"451","messageId":"452","endLine":2,"endColumn":12},{"ruleId":"449","severity":1,"message":"487","line":2,"column":17,"nodeType":"451","messageId":"452","endLine":2,"endColumn":21},{"ruleId":"465","severity":1,"message":"488","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":23},{"ruleId":"465","severity":1,"message":"489","line":1,"column":25,"nodeType":"451","messageId":"452","endLine":1,"endColumn":33},{"ruleId":"465","severity":1,"message":"490","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":30},{"ruleId":"465","severity":1,"message":"489","line":1,"column":32,"nodeType":"451","messageId":"452","endLine":1,"endColumn":40},{"ruleId":"465","severity":1,"message":"491","line":46,"column":9,"nodeType":"451","messageId":"452","endLine":46,"endColumn":18},{"ruleId":"465","severity":1,"message":"492","line":57,"column":9,"nodeType":"451","messageId":"452","endLine":57,"endColumn":18},{"ruleId":"465","severity":1,"message":"493","line":60,"column":9,"nodeType":"451","messageId":"452","endLine":60,"endColumn":21},{"ruleId":"465","severity":1,"message":"470","line":1,"column":24,"nodeType":"451","messageId":"452","endLine":1,"endColumn":31},{"ruleId":"465","severity":1,"message":"482","line":2,"column":17,"nodeType":"451","messageId":"452","endLine":2,"endColumn":26},{"ruleId":"465","severity":1,"message":"494","line":2,"column":28,"nodeType":"451","messageId":"452","endLine":2,"endColumn":38},{"ruleId":"465","severity":1,"message":"495","line":2,"column":10,"nodeType":"451","messageId":"452","endLine":2,"endColumn":21},{"ruleId":"465","severity":1,"message":"496","line":3,"column":10,"nodeType":"451","messageId":"452","endLine":3,"endColumn":16},"no-native-reassign",["497"],"no-negated-in-lhs",["498"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'takeEvery' is defined but never used.","'memo' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'createStore' is defined but never used.","'combineReducers' is defined but never used.","'MappedReducer' is defined but never used.","'LoadingOutlined' is defined but never used.","'message' is defined but never used.","'Components' is defined but never used.","'setCurPage' is assigned a value but never used.","'pageNum' is assigned a value but never used.","'now' is assigned a value but never used.","'clickLikeBtn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'args'. Either include it or remove the dependency array.","ArrayExpression",["499"],"React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["500"],"'call' is defined but never used.","'data' is defined but never used.","'Card' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'createContext' is defined but never used.","'isInvalid' is assigned a value but never used.","'beInvalid' is assigned a value but never used.","'notBeInvalid' is assigned a value but never used.","'useContext' is defined but never used.","'useCallback' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},"Update the dependencies array to be: [args]",{"range":"505","text":"506"},"Update the dependencies array to be: [getData]",{"range":"507","text":"508"},[1861,1870],"[args]",[565,567],"[getData]"]