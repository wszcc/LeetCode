[{"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/index.tsx":"1","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/reportWebVitals.ts":"2","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/App.tsx":"3","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/router/index.jsx":"4","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/router/config.js":"5","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/Login.js":"6","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/QuestionList.js":"7","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/resetpassword/ResetPassword.js":"8","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/Profile.js":"9","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/QuestionIndex.js":"10","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/store/index.js":"11","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/index.js":"12","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/Body.js":"13","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/header/Header.js":"14","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/index.ts":"15","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/footer/Footer.tsx":"16","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/WindowWarp/windowWarp.tsx":"17","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/resetpassword/components/ResetPwdWindow/resetPwdWindow.tsx":"18","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/index.jsx":"19","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/store/reudcer/list.js":"20","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/reducers/profile_reqHistory.js":"21","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/sagas/sagaRoot.js":"22","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/right/Right.js":"23","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/Left.js":"24","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/store/index.ts":"25","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/reducers/index.ts":"26","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/sagas/rootSaga.ts":"27","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/store/actions.ts":"28","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/apis/comments.ts":"29","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Head/index.jsx":"30","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Side/index.jsx":"31","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/index.jsx":"32","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginWindow/loginWindow.tsx":"33","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/resetpassword/components/ResetPwdMain/resetPwdMain.tsx":"34","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/sagas/req_questionInfo.js":"35","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/sagas/req_historySaga.js":"36","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/indexNav/indexNav.jsx":"37","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/list/list.jsx":"38","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/randomStart/index.jsx":"39","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/answeredInfo/index.jsx":"40","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/submitrecord/SubmitRecord.js":"41","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/desc/Desc.js":"42","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/sagas/registerSaga.ts":"43","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/sagas/loginSaga.ts":"44","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/mid/index.tsx":"45","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/store/epic.ts":"46","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/store/action/index.js":"47","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/reducers/pwdLoginForm.ts":"48","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/utils/shared.ts":"49","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/redux_test.js":"50","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/reducers/loginMain.ts":"51","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/mock/questionIndex.js":"52","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/resetpassword/components/ResetPwdMain/ResetForm/resetForm.tsx":"53","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/loginMain.tsx":"54","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginFooter/loginFooter.tsx":"55","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-left/index.tsx":"56","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/actions/pwdLoginForm.ts":"57","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/actions/emailRegisterForm.ts":"58","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/mock/index.js":"59","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/components/dif-tag/DigTag.tsx":"60","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/components/comment/index.tsx":"61","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/actions/loginMain.ts":"62","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/apis/index.ts":"63","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/USALoginForm/usaLoginForm.tsx":"64","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/PwdLoginForm/pwdLoginForm.tsx":"65","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/EmailRegisterForm/emailRegisterForm.tsx":"66","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/phoneLoginForm.tsx":"67","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/store/index.ts":"68","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/recordMonth/index.jsx":"69","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/InfoDisplay/index.jsx":"70","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/QuestionInfo/index.jsx":"71","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-left/Header.tsx":"72","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-left/Footer.tsx":"73","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-left/SolutionList.tsx":"74","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/components/comment/components/Common.tsx":"75","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/types/index.ts":"76","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/actions/proReqHistory_action.js":"77","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/utils/hooks/index.ts":"78","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/PhoneInput/phoneInput.tsx":"79","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/CaptchaInput/captchaInput.tsx":"80","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/components/mdEditor/index.tsx":"81","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/components/loading/index.tsx":"82","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/config/colors.ts":"83","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/components/likeBtn/index.tsx":"84","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/QuestionInfo/Correct/index.jsx":"85","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/apis/share.ts":"86","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/apis/solution.ts":"87","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/router/config.js":"88","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/reducers/emailRegisterForm.ts":"89","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/store/reducer.ts":"90","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/search/index.jsx":"91","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/indexEasy.jsx":"92","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/store/index.ts":"93","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/index.tsx":"94","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-right/index.tsx":"95","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Side/dataExplain/index.jsx":"96","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/components/ConfigBar.tsx":"97","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/components/Editor.tsx":"98","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/store/actions.ts":"99","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/config/code.ts":"100","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/components/ConfigMain.tsx":"101","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/store/reducer.ts":"102","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/components/showModal/index.tsx":"103"},{"size":405,"mtime":1615477845981,"results":"104","hashOfConfig":"105"},{"size":425,"mtime":1615477846003,"results":"106","hashOfConfig":"105"},{"size":252,"mtime":1615477845978,"results":"107","hashOfConfig":"105"},{"size":434,"mtime":1615477846003,"results":"108","hashOfConfig":"105"},{"size":642,"mtime":1615477846003,"results":"109","hashOfConfig":"105"},{"size":283,"mtime":1615477845982,"results":"110","hashOfConfig":"105"},{"size":308,"mtime":1615477845996,"results":"111","hashOfConfig":"105"},{"size":240,"mtime":1615477846002,"results":"112","hashOfConfig":"105"},{"size":879,"mtime":1615477845986,"results":"113","hashOfConfig":"105"},{"size":414,"mtime":1615477845991,"results":"114","hashOfConfig":"105"},{"size":166,"mtime":1615477846002,"results":"115","hashOfConfig":"105"},{"size":344,"mtime":1615477845990,"results":"116","hashOfConfig":"105"},{"size":353,"mtime":1615477845991,"results":"117","hashOfConfig":"105"},{"size":1742,"mtime":1615477845995,"results":"118","hashOfConfig":"105"},{"size":425,"mtime":1615478136737,"results":"119","hashOfConfig":"105"},{"size":3312,"mtime":1615477845995,"results":"120","hashOfConfig":"105"},{"size":4517,"mtime":1615477845985,"results":"121","hashOfConfig":"105"},{"size":335,"mtime":1615477846003,"results":"122","hashOfConfig":"105"},{"size":1394,"mtime":1615477845998,"results":"123","hashOfConfig":"105"},{"size":287,"mtime":1615477846002,"results":"124","hashOfConfig":"105"},{"size":355,"mtime":1615477845990,"results":"125","hashOfConfig":"105"},{"size":275,"mtime":1615477845991,"results":"126","hashOfConfig":"105"},{"size":576,"mtime":1615477845993,"results":"127","hashOfConfig":"105"},{"size":1481,"mtime":1615477845991,"results":"128","hashOfConfig":"105"},{"size":996,"mtime":1615477845996,"results":"129","hashOfConfig":"105"},{"size":555,"mtime":1615477845985,"results":"130","hashOfConfig":"105"},{"size":240,"mtime":1615477845986,"results":"131","hashOfConfig":"105"},{"size":1250,"mtime":1615477845996,"results":"132","hashOfConfig":"105"},{"size":1937,"mtime":1615477845979,"results":"133","hashOfConfig":"105"},{"size":792,"mtime":1615477845987,"results":"134","hashOfConfig":"105"},{"size":2140,"mtime":1615477845990,"results":"135","hashOfConfig":"105"},{"size":2095,"mtime":1615477845988,"results":"136","hashOfConfig":"105"},{"size":2141,"mtime":1615477845984,"results":"137","hashOfConfig":"105"},{"size":1421,"mtime":1615477846002,"results":"138","hashOfConfig":"105"},{"size":354,"mtime":1615477845990,"results":"139","hashOfConfig":"105"},{"size":359,"mtime":1615477845990,"results":"140","hashOfConfig":"105"},{"size":3279,"mtime":1615477845997,"results":"141","hashOfConfig":"105"},{"size":2269,"mtime":1615477845997,"results":"142","hashOfConfig":"105"},{"size":505,"mtime":1615477845997,"results":"143","hashOfConfig":"105"},{"size":718,"mtime":1615477845997,"results":"144","hashOfConfig":"105"},{"size":1623,"mtime":1615477845993,"results":"145","hashOfConfig":"105"},{"size":3858,"mtime":1615477845992,"results":"146","hashOfConfig":"105"},{"size":1176,"mtime":1615477845986,"results":"147","hashOfConfig":"105"},{"size":1104,"mtime":1615477845986,"results":"148","hashOfConfig":"105"},{"size":1049,"mtime":1615477845993,"results":"149","hashOfConfig":"105"},{"size":1245,"mtime":1615477845994,"results":"150","hashOfConfig":"105"},{"size":1292,"mtime":1615477846002,"results":"151","hashOfConfig":"105"},{"size":1325,"mtime":1615477845986,"results":"152","hashOfConfig":"105"},{"size":3829,"mtime":1615477846004,"results":"153","hashOfConfig":"105"},{"size":90,"mtime":1615477845990,"results":"154","hashOfConfig":"105"},{"size":1057,"mtime":1615477845986,"results":"155","hashOfConfig":"105"},{"size":2331,"mtime":1615477845982,"results":"156","hashOfConfig":"105"},{"size":8891,"mtime":1615477846002,"results":"157","hashOfConfig":"105"},{"size":6448,"mtime":1615477845984,"results":"158","hashOfConfig":"105"},{"size":2218,"mtime":1615477845982,"results":"159","hashOfConfig":"105"},{"size":630,"mtime":1615477845993,"results":"160","hashOfConfig":"105"},{"size":1294,"mtime":1615477845985,"results":"161","hashOfConfig":"105"},{"size":1160,"mtime":1615477845985,"results":"162","hashOfConfig":"105"},{"size":447,"mtime":1615477845998,"results":"163","hashOfConfig":"105"},{"size":469,"mtime":1615477845992,"results":"164","hashOfConfig":"105"},{"size":5029,"mtime":1615477845991,"results":"165","hashOfConfig":"105"},{"size":717,"mtime":1615477845985,"results":"166","hashOfConfig":"105"},{"size":4572,"mtime":1615477845979,"results":"167","hashOfConfig":"105"},{"size":1827,"mtime":1615477845984,"results":"168","hashOfConfig":"105"},{"size":3722,"mtime":1615477845983,"results":"169","hashOfConfig":"105"},{"size":8122,"mtime":1615477845982,"results":"170","hashOfConfig":"105"},{"size":5011,"mtime":1615477845983,"results":"171","hashOfConfig":"105"},{"size":2617,"mtime":1615477845994,"results":"172","hashOfConfig":"105"},{"size":1125,"mtime":1615477845989,"results":"173","hashOfConfig":"105"},{"size":4644,"mtime":1615477845987,"results":"174","hashOfConfig":"105"},{"size":1425,"mtime":1615477845988,"results":"175","hashOfConfig":"105"},{"size":160,"mtime":1615477845993,"results":"176","hashOfConfig":"105"},{"size":160,"mtime":1615477845993,"results":"177","hashOfConfig":"105"},{"size":2124,"mtime":1615477845993,"results":"178","hashOfConfig":"105"},{"size":4911,"mtime":1615477845991,"results":"179","hashOfConfig":"105"},{"size":917,"mtime":1615477845984,"results":"180","hashOfConfig":"105"},{"size":147,"mtime":1615477845990,"results":"181","hashOfConfig":"105"},{"size":4735,"mtime":1615477846003,"results":"182","hashOfConfig":"105"},{"size":4880,"mtime":1615477845983,"results":"183","hashOfConfig":"105"},{"size":1776,"mtime":1615477845983,"results":"184","hashOfConfig":"105"},{"size":2124,"mtime":1615477845992,"results":"185","hashOfConfig":"105"},{"size":604,"mtime":1615477845981,"results":"186","hashOfConfig":"105"},{"size":123,"mtime":1615477845981,"results":"187","hashOfConfig":"105"},{"size":1073,"mtime":1615477845981,"results":"188","hashOfConfig":"105"},{"size":1932,"mtime":1615477845988,"results":"189","hashOfConfig":"105"},{"size":247,"mtime":1615477845979,"results":"190","hashOfConfig":"105"},{"size":1141,"mtime":1615477845979,"results":"191","hashOfConfig":"105"},{"size":1046,"mtime":1615477846001,"results":"192","hashOfConfig":"105"},{"size":1523,"mtime":1615477845985,"results":"193","hashOfConfig":"105"},{"size":1248,"mtime":1615477845996,"results":"194","hashOfConfig":"105"},{"size":333,"mtime":1615477845998,"results":"195","hashOfConfig":"105"},{"size":1445,"mtime":1615477845998,"results":"196","hashOfConfig":"105"},{"size":331,"mtime":1615477845995,"results":"197","hashOfConfig":"105"},{"size":276,"mtime":1615477845994,"results":"198","hashOfConfig":"105"},{"size":2008,"mtime":1615477845994,"results":"199","hashOfConfig":"105"},{"size":2612,"mtime":1615477845989,"results":"200","hashOfConfig":"105"},{"size":1629,"mtime":1615477845994,"results":"201","hashOfConfig":"105"},{"size":2683,"mtime":1615477845994,"results":"202","hashOfConfig":"105"},{"size":828,"mtime":1615477845995,"results":"203","hashOfConfig":"105"},{"size":85,"mtime":1615477845981,"results":"204","hashOfConfig":"105"},{"size":3222,"mtime":1615477845994,"results":"205","hashOfConfig":"105"},{"size":1297,"mtime":1615477845995,"results":"206","hashOfConfig":"105"},{"size":1600,"mtime":1615477845981,"results":"207","hashOfConfig":"105"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ipc6c",{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/index.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/reportWebVitals.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/App.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/router/index.jsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/router/config.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/Login.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/QuestionList.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/resetpassword/ResetPassword.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/Profile.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/QuestionIndex.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/store/index.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/index.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/Body.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/header/Header.js",["440","441","442"],"import React from \"react\";\nimport Logo from \"../../../../assets/imgs/logo.svg\";\nimport \"./header.scss\";\nimport { Menu, Dropdown } from \"antd\";\nimport {Link} from 'react-router-dom'\nimport {\n  RightSquareOutlined,\n  BellOutlined,\n  UserOutlined,\n  DownOutlined\n} from \"@ant-design/icons\";\n\nfunction Header(props) {\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"0\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.alipay.com/\"\n        >\n          题目以中文显示\n        </a>\n      </Menu.Item>\n      <Menu.Item key=\"1\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.taobao.com/\"\n        >\n          题目以英文显示\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <div className=\"header\">\n      <ul className=\"header-nav\">\n        <li>\n          <img src={Logo} alt=\"力扣\"></img>\n        </li>\n        <li>学习</li>\n        <li>题库</li>\n        <li>讨论</li>\n        <li>竞赛</li>\n        <li>求职</li>\n        <li className=\"shop\">商店</li>\n        <li>\n          <a className=\"download\" href=\"#\">\n            下载 App\n          </a>\n        </li>\n        <li>\n          <a className=\"member\" href=\"#\">\n            Plus 会员\n          </a>\n        </li>\n        <Dropdown overlay={menu}>\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n            中 <DownOutlined />\n          </a>\n        </Dropdown>\n        <li>\n          <RightSquareOutlined />\n        </li>\n        <li>\n          <BellOutlined />\n        </li>\n        <li>\n          <Link to='/profile'><UserOutlined /></Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/index.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/footer/Footer.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/WindowWarp/windowWarp.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/resetpassword/components/ResetPwdWindow/resetPwdWindow.tsx",["443","444"],"import React, { createContext, useState } from \"react\"\nimport ResetPwdMain from '../ResetPwdMain/resetPwdMain'\nimport './style.scss'\n\n\n\nconst ResetPwdWindow: React.FC = () => {\n    return (\n        <div\n            className='resetpwd-window'\n        >\n            <ResetPwdMain />\n        </div>\n    )\n}\n\nexport default ResetPwdWindow","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/index.jsx",["445"],"import React, { useEffect } from 'react'\nimport Sider from './components/indexNav/indexNav'\nimport ListIndex from './components/list/list'\nimport Header from '../questionindex/components/header/Header'\nimport AnsweredInfo from '../questionlist/components/answeredInfo/index'\nimport '../questionlist/QuestionList.css'\nimport { useSelector } from 'react-redux'\nimport { useListData,useUserData } from './store/action'\nimport RandomStart from '../questionlist/components/randomStart/index'\nimport './index.css'\n\n\nconst Index = (props) =>{\n    let {data,records,loading,userInfo} = useSelector(state=>state.list)\n    let getData = useListData()\n    let getUserData = useUserData()\n    useEffect(()=>{\n        getData()\n        getUserData()\n       },[])\n    \n    \n    return  <div className='login' id='indexWrap'>\n        <Header />\n                <div id=\"infoWrap\">\n                    <AnsweredInfo \n                        userInfo={userInfo}\n                    />\n                    <RandomStart \n                        records={records}\n                    />\n                </div>\n                \n                <div id=\"siderWrap\">\n                    <Sider />\n                </div>\n\n                <ListIndex\n                    records={records}\n                    data={data}\n                    loading={loading}\n                />\n            </div>\n}\n\nexport default Index","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/store/reudcer/list.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/reducers/profile_reqHistory.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/sagas/sagaRoot.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/right/Right.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/Left.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/store/index.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/reducers/index.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/sagas/rootSaga.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/store/actions.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/apis/comments.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Head/index.jsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Side/index.jsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/index.jsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginWindow/loginWindow.tsx",["446"],"import React, { CSSProperties, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport LoginFooter from '../LoginFooter/loginFooter'\nimport LoginMain from '../LoginMain/loginMain'\nimport { FormTypes } from '../../store/reducers/loginMain';\nimport { IRootState } from '../../store/reducers';\nimport './style.scss';\n\n\ninterface IMapState {\n    formType: FormTypes\n}\n\ninterface IBaseProps extends IMapState {\n    children?: React.ReactNode\n    style?: CSSProperties\n}\n\n\nconst LoginWindow: React.FC<IBaseProps> = (props) => {\n\n    const {formType} = props;\n\n    const phoneLoginStyle: CSSProperties = {\n        minHeight: '514px',\n        top: '50%'\n    };\n\n    const pwdLoginStyle: CSSProperties = {\n        minHeight: '462px', \n        top: '54%'\n    };\n\n    const usaLoginStyle: CSSProperties = {\n        minHeight: '384px',\n        top: '60%'\n    }\n\n    const emailRegisterStyle: CSSProperties = {\n        minHeight: '514px',\n        top: '50%'\n    }\n\n    const [windowStyle, setWindowStyle] = useState(phoneLoginStyle);\n\n    const getLoginWindowStyle = (): CSSProperties => {\n        switch(formType) {\n            case FormTypes.EmailRegisterForm:\n                return emailRegisterStyle;\n\n            case FormTypes.PhoneLoginForm:\n                return phoneLoginStyle;\n\n            case FormTypes.USALoginForm:\n                return usaLoginStyle;\n\n            case FormTypes.PwdLoginForm: \n                return pwdLoginStyle;\n            default:\n                return phoneLoginStyle;\n        }\n    }\n\n    useEffect(() => {\n        setWindowStyle(getLoginWindowStyle());\n    }, [formType]);\n    \n    return (\n        <div \n            className='login-window' \n            style={windowStyle}>\n            <LoginMain />\n            {/* 只要是 USALoginForm 则把 Footer 隐藏起来 */}\n            <LoginFooter style={{\n                display: formType === FormTypes.USALoginForm ? 'none' : 'block'\n            }}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: IRootState): IMapState => ({\n    formType: state.loginMain.form\n});\n\nexport default connect(mapStateToProps, {})(LoginWindow);","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/resetpassword/components/ResetPwdMain/resetPwdMain.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/sagas/req_questionInfo.js",["447"],"import { call, put, takeEvery, } from 'redux-saga/effects'\n// import { reqQuestion } from '../../API/index'\nimport { GETQUESTION } from '../redux_test'\n\n\nfunction* reqQuestionInfo(action) {\n\n    yield put({ type: GETQUESTION })\n}\n\n\nfunction* watchreqQuestionInfo() {\n    yield takeEvery(\"getQues\", reqQuestionInfo);\n}\n\nexport default watchreqQuestionInfo","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/sagas/req_historySaga.js",["448"],"import { call, put, takeLatest } from 'redux-saga/effects'\n// import { reqPersonal } from '../../API/index'\nimport { GETLISTOFTOPICS } from '../redux_test'\n\n\nfunction* reqHistoryData(action) {\n\n    yield put({ type: GETLISTOFTOPICS })\n}\n\n\nfunction* watchReqHistoryData() {\n    yield takeLatest(\"getList\", reqHistoryData);\n}\n\nexport default watchReqHistoryData","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/indexNav/indexNav.jsx",["449","450","451","452","453","454","455","456","457"],"import React from 'react'\nimport { Menu,Tabs } from 'antd';\nimport '../indexNav/indexNav.css'\nimport {difficulty,status,tags,lists} from '../../router/config'\nimport { Link,HashRouter as Router } from \"react-router-dom\";\nimport Search from '../search/index'\nimport {CaretDownOutlined} from '@ant-design/icons'\n\nconst { SubMenu } = Menu;\nclass Sider extends React.Component {\n  handleClick = e => {\n    console.log('click ', e);\n  };\n\n   \n  render() {\n    return (\n        <Router>   <div>\n           \n        <div id='navWrap'>\n          \n          <div id= \"search\">\n            <Search/>\n          </div>\n      \n      <div id=\"Menu_one\">\n      <Menu\n        onClick={this.handleClick}\n        style={{ width: 100 }}\n        style={{marginRight:20}}\n        mode=\"horizontal\"\n        style={{backgroundColor:'rgba(247,247,247)'}}\n      >\n        <SubMenu key='sub1' title={<span>&nbsp;&nbsp;&nbsp;&nbsp;难度<span> <CaretDownOutlined /></span></span>} id=\"sub_one\">\n           {\n                difficulty.map((item,index)=>{\n                    return <Menu.Item key={index}>{item.name}</Menu.Item>\n                })\n            }\n        </SubMenu>\n          </Menu>\n          </div>\n      \n        <div id=\"Menu_two\">\n        <Menu\n        onClick={this.handleClick}\n        style={{ width: 50 }}\n        mode=\"horizontal\"\n        style={{backgroundColor:'rgba(247,247,247)'}}\n      >\n         <SubMenu key='sub2' title={<span>&nbsp;&nbsp;&nbsp;&nbsp;状态<span> <CaretDownOutlined /></span></span>}>\n            {\n                status.map((item,index)=>{\n                    return <Menu.Item key={index}>{item.name}</Menu.Item>\n                })\n            }\n        </SubMenu>\n        </Menu>\n        </div>\n\n        <div id=\"Menu_three\">\n      <Menu\n        onClick={this.handleClick}\n        style={{ width: 50 }}\n        style={{marginRight:10}}\n        mode=\"horizontal\"\n        style={{backgroundColor:'rgba(247,247,247)'}}\n      >\n        <SubMenu key='sub3' title={<span>&nbsp;&nbsp;&nbsp;&nbsp;列表<span> <CaretDownOutlined /></span></span>} id=\"sub_one\">\n           {\n                lists.map((item,index)=>{\n                    return <Menu.Item key={index}>{item.name}</Menu.Item>\n                })\n            }\n        </SubMenu>\n          </Menu>\n          </div>\n\n          <div id=\"Menu_four\">\n      <Menu\n        onClick={this.handleClick}\n        style={{ width: 60 }}\n        style={{marginRight:20}}\n        mode=\"horizontal\"\n        style={{backgroundColor:'rgba(247,247,247)'}}\n      >\n        <SubMenu key='sub4' title={<span>&nbsp;&nbsp;&nbsp;&nbsp;标签<span> <CaretDownOutlined /></span></span>} id=\"sub_one\">\n           {\n                tags.map((item,index)=>{\n                    return <Menu.Item key={index}>{item.name}</Menu.Item>\n                })\n            }\n        </SubMenu>\n          </Menu>\n          </div>\n        \n        </div>\n        \n        <div id=\"list_introduction\">\n          <div id=\"intro_title\">题名</div>\n          <div id=\"intro_answer\">题解</div>\n          <div id=\"intro_passrate\">通过率</div>\n          <div id=\"intro_difficulty\">难度</div>\n          {/* <div id=\"intro_status\">状态</div> */}\n        </div>\n      \n      </div>\n     \n      </Router>\n    );\n  }\n}\n\nexport default Sider;\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/list/list.jsx",["458","459"],"import React, { useState } from 'react'\nimport {List} from 'antd'\nimport \"../list/list.css\"\nimport {Link} from 'react-router-dom'\n\n\nconst onShowSizeChange= (current, pageSize) =>{\n  console.log(current, pageSize);\n}\n\n\nconst ListIndex = (props)=>{\n\n    let {records,data,loading} =props\n      let total = data.size+50\n      return <List id=\"list\"\n        dataSource = {records}\n        loading={loading}\n        pagination={{\n          onShowSizeChange:{onShowSizeChange},\n          defaultCurrent:1,\n          total:total\n        }}\n        renderItem = {(records,index)=>{\n          \n          return (  <div>\n            {\n              (index%2 ==0) ?\n          <List.Item\n            style={{backgroundColor:\"rgba(255,255,255)\"}}\n          >\n            <div id=\"list_td\">\n              <div id=\"item_message\">\n                <div id=\"data_title\" ><Link to= {`/questionindex/${records.questionId}`} style={{color:'rgba(59,134,198)'}}  >{records.title}</Link></div>\n                \n                <div id=\"data_message\">\n                    <div id=\"data_answer_num\">{records.answerNum}</div>\n\n                    <div id=\"data_passrate\">{records.passRate}%</div>\n\n                    <div id=\"data_difficulty\">{records.difficulty}</div>\n{/* \n                    <div id=\"data_status\">hello</div>  */}\n                </div>\n                \n              </div>\n            </div>\n            \n          </List.Item>:\n          <List.Item\n          style={{backgroundColor:\"rgba(250,250,250)\"}}\n        >\n          <div id=\"list_td\">\n            <div id=\"item_message\">\n              <div id=\"data_title\"><Link to= {`/questionindex/${records.questionId}` } style={{color:'rgba(59,134,198)'}}>{records.title}</Link></div>\n              \n              <div id=\"data_message\">\n                  <div id=\"data_answer_num\">{records.answerNum}</div>\n\n                  <div id=\"data_passrate\">{records.passRate}%</div>\n\n                  <div id=\"data_difficulty\">{records.difficulty}</div>\n\n                  {/* <div id=\"data_status\">hello</div>  */}\n              </div>\n              \n            </div>\n          </div>\n          \n        </List.Item>}\n        </div>\n\n          )\n         \n         \n          \n        }}\n      />\n\n}\n\nexport default ListIndex;\n\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/randomStart/index.jsx",["460","461","462","463","464"],"import React, { useState } from 'react'\nimport { Button,Card } from \"antd\";\nimport {Link} from 'react-router-dom'\nimport './index.css'\nimport {EditFilled} from '@ant-design/icons'\nimport { windowWhen } from 'rxjs/operators';\nimport { SSL_OP_TLS_BLOCK_PADDING_BUG } from 'constants';\n\nconst RandomStart = (props) =>{\n    \n    \n    return  (<div id=\"button_wrap\">\n        <Button>{<span>随机开始<span>&nbsp;<EditFilled /></span></span>}</Button>\n    </div>\n        \n    )\n}\n\nexport default RandomStart;\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/answeredInfo/index.jsx",["465"],"import './index.css'\nimport { Statistic } from 'antd'\n\nconst AnsweredInfo = (props) =>{\n    var Mocks = require('mockjs')\n    var data = Mocks.mock({\n        // 属性 list 的值是一个数组，其中含有 1 到 10 个元素\n        'code|1-10': 1,\n        'data': {\n            \"solved|1-1900\": 1,\n            'easy|1-549': 1,\n            'mid|1-1014': 1,\n            'diff|1-403':1\n        }\n    })\n\n    return (<div id='Info_wrap'>\n        <div id='solved'>已解决{data.data.solved}/1900</div>\n        <div id='diff'>困难{data.data.diff}</div>\n        <div id='mid'>中等{data.data.mid}</div>\n        <div id='easy'>简单{data.data.easy}</div>\n        \n        \n    </div>)\n}\n\nexport default AnsweredInfo;","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/submitrecord/SubmitRecord.js",["466","467"],"import { Table, } from \"antd\";\nimport { memo, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCommit } from '../../../../../../apis/comments'\nimport { getKeys } from '../../../../../../utils/shared'\nconst columns = [\n  {\n    title: \"提交时间\",\n    dataIndex: \"commitTime\",\n    key: \"commitTime\",\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: \"提交结果\",\n    dataIndex: \"commitResult\",\n    key: \"commitResult\",\n  },\n  {\n    title: \"运行时间\",\n    dataIndex: \"runtime\",\n    key: \"runtime\",\n  },\n  {\n    title: \"语言\",\n    dataIndex: \"word\",\n    key: \"java\",\n  },\n];\n\nconst SubmitRecord = (props) => {\n  const [commitList, setCommitList] = useState()\n  useEffect(() =>{\n    getCommit('josdnf')\n    .then(res =>{\n      setCommitList(getKeys(res.data.data.commitList))\n    })\n  },[])\n  return (\n    <div className=\"submit-record\">\n      {\n        props.exeCodeRes.result?<ul className='result-info'>\n        <li>执行结果 <span >{props.exeCodeRes.result == 'pass' ? '通过' : '解答错误'}</span></li>\n        <li>执行时间 <span className=\"info\">{props.exeCodeRes.runtime}</span></li>\n        <li>击败对手 <span className=\"info\">{props.exeCodeRes.runtimeBeat}</span></li>\n        <li>内存消耗 <span className=\"info\">{props.exeCodeRes.memory}</span></li>\n    </ul>:null\n      }\n      {\n        commitList? <Table pagination={false} columns={columns} dataSource={commitList} /> :''\n      }\n    </div>\n  );\n};\n\nconst mapState = (state) =>{\n  return {\n    exeCodeRes:state.desc.exeCodeRes\n  }\n}\n\nexport default connect(mapState)(memo(SubmitRecord));\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/desc/Desc.js",["468"],"import \"./desc.scss\";\nimport \"../../../../../../mock/questionIndex.js\";\nimport { getDescData, likeQuestion,  } from \"../../../../../../apis/comments\";\nimport DiffTag from \"../components/dif-tag/DigTag\";\nimport { devContetn } from \"../../../../../../utils/shared\";\nimport { withRouter } from 'react-router-dom'\nimport { useParams } from \"react-router\";\nimport {\n  likeAction,\n  unLikeAction,\n  collectAction,\n  unCollectAction,\n} from \"../../../../store/actions\";\nimport {\n  LikeOutlined,\n  HeartOutlined,\n  RotateRightOutlined,\n  SwapOutlined,\n  BellOutlined,\n  MessageOutlined,\n  LikeFilled,\n  HeartFilled,\n} from \"@ant-design/icons\";\nimport { Fragment, useEffect, useState, memo } from \"react\";\nimport { connect } from \"react-redux\";\nconst Desc = (props) => {\n  const {id} = useParams()\n  let [descData, setDescData] = useState({ code: 0 });\n  let {\n    like,\n    dispatchLike,\n    dispatchUnlike,\n    collect,\n    dispatchCollect,\n    dispatchUnCollect,\n  } = props;\n  useEffect(() => {\n    getDescData(id).then((res) => {\n      setDescData(res.data);\n    });\n  }, [descData.code]);\n  return (\n    <div className=\"desc\">\n      {descData.code ? (\n        <>\n          <div className=\"title\">1.{descData.data.title}</div>\n          <ul className=\"tag\">\n            <li>\n              难度 <DiffTag difficulty={descData.data.difficulty} />\n            </li>\n            <li>\n              {like ? (\n                <LikeFilled onClick={dispatchUnlike} />\n              ) : (\n                <LikeOutlined onClick={dispatchLike} />\n              )}\n              {descData.data.thumbup}\n            </li>\n            <li>\n              {collect ? (\n                <HeartFilled onClick={dispatchUnCollect} />\n              ) : (\n                <HeartOutlined onClick={dispatchCollect} />\n              )}\n              收藏\n            </li>\n            <li>\n              <RotateRightOutlined /> 分享\n            </li>\n            <li>\n              <SwapOutlined /> 切换为英文\n            </li>\n            <li>\n              <BellOutlined /> 接收动态\n            </li>\n            <li>\n              <MessageOutlined /> 反馈\n            </li>\n          </ul>\n          <div className=\"content\">\n            {devContetn(descData.data.content).map((p, i) => (\n              <Fragment key={i}>\n                <p>{p} </p>\n                <br />\n              </Fragment>\n            ))}\n            <ul className='submit-number'>\n              <li>通过次数 {descData.data.commit_num}</li>\n              <li>提交次数 {descData.data.answe_num}</li>\n            </ul>\n          </div>\n          <ul className='footer'>\n            <li>在真实的面试中遇到过这道题？ <button>是</button> <button>否</button></li>\n            <li>力扣(leetCode)版权所有</li>\n            <li>相关企业</li>\n            <li>相关标签</li>\n            <li>相似题目</li>\n            <li>显示提示1</li>\n            <li>显示提示2</li>\n            <li>显示提示3</li>\n          </ul>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst mapState = (state) => {\n  return {\n    like: state.desc.like,\n    collect: state.desc.collect,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    dispatchLike() {\n      const disLikeAction = likeAction();\n      dispatch(disLikeAction);\n      likeQuestion(\"question\", true, \"jsaodfnasd\");\n    },\n    dispatchUnlike() {\n      const disUnlikeAction = unLikeAction();\n      dispatch(disUnlikeAction);\n      likeQuestion(\"question\", false, \"jsaodfnasd\");\n    },\n    dispatchCollect() {\n      const disLikeAction = collectAction();\n      dispatch(disLikeAction);\n    },\n    dispatchUnCollect() {\n      const disUnlikeAction = unCollectAction();\n      dispatch(disUnlikeAction);\n    },\n  };\n};\n\nexport default connect(mapState, mapDispatch)(withRouter(memo(Desc)));\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/sagas/registerSaga.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/sagas/loginSaga.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/mid/index.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/store/epic.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/store/action/index.js",["469","470"],"\nimport { useDispatch } from 'react-redux'\nimport {storage} from '../../../../utils/shared'\nimport '../../mock/index'\nimport axios from \"axios\"\nimport request from '../../../../apis';\n\n//获取主题列表数据\nfunction useListData(){\n    let dispatch = useDispatch();\n    const token = storage.get('token')\n    // console.log(token)\n    dispatch({\n        type:\"list_loading\",\n        data:{},\n        records:{},\n        loading:true\n    })\n    return function(){\n        let params = {}\n        request.post('question/question/all', params)\n        \n        .then(value=>{\n            dispatch({\n                type:\"list_loadover\",\n                data:value.data,\n                records:value.data.records,\n                loading:false\n            })\n        })\n        \n        .catch(err=>{\n            console.log(err);\n        }) \n    }\n}\n       \nfunction useUserData(){\n    let dispatch = useDispatch();\n    const token = storage.get('token')\n   \n    return function(){\n        axios.get('question/get-tag')\n        \n        .then(value=>{\n            dispatch({\n                type:\"userInfo_loadover\",\n                userInfo:value\n            })\n        })\n        \n        .catch(err=>{\n            console.log(err);\n        }) \n    }\n}\n\nexport {useListData,useUserData}\n\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/reducers/pwdLoginForm.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/utils/shared.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/redux_test.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/reducers/loginMain.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/mock/questionIndex.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/resetpassword/components/ResetPwdMain/ResetForm/resetForm.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/loginMain.tsx",["471"],"import React from 'react';\nimport {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\nimport { Card, Button } from 'antd';\nimport { CaretRightOutlined, RightOutlined } from '@ant-design/icons'\nimport {useHistory} from 'react-router-dom'\nimport PhoneLoginForm from './PhoneLoginForm/phoneLoginForm'\nimport PwdLoginForm from './PwdLoginForm/pwdLoginForm'\nimport USALoginForm from './USALoginForm/usaLoginForm';\nimport {FormTypes} from '../../store/reducers/loginMain'\nimport {IRootState} from '../../store/reducers/index'\nimport { \n    toEmailRegisterForm, \n    toPhoneLoginForm, \n    toPwdLoginForm, \n    toResetPwdForm, \n    ToUSALoginForm \n} from '../../store/actions/loginMain';\nimport EmailRegisterForm from './EmailRegisterForm/emailRegisterForm';\n\nimport './style.scss'\n\nenum CardTitle {\n    Welcome = '欢迎使用力扣',\n    PwdLogin = '账号密码登录',\n    EmailRegister = '邮箱注册',\n    USAccountLogin = '美国站账号登录'\n}\n\nenum LinkBtnName {\n    PwdLogin = '账号密码登录',\n    CaptchaLogin = '验证码登录',\n    EmailRegister = '邮箱注册',\n    ForgetPwd = '忘记密码',\n    HasUSAccount = '已有美国站账号',\n    BackCH = '返回中文站账号登录'\n}\n\n\n\ninterface IMapState {\n    formType?: FormTypes\n}\n\ninterface IMapDispatch {\n    toPwdLoginForm: () => void;\n    toPhoneLoginForm: () => void;\n    toEmailRegisterForm: () => void;\n    toResetPwdForm: () => void;\n    toUSALoginForm: () => void;\n}\n\ninterface IBaseProps extends IMapState, IMapDispatch {\n    children?: React.ReactNode\n}\n\n\nconst LoginMain: React.FC<IBaseProps> = (props) => {\n\n\n    // state\n    const {formType} = props;\n\n    // dispatch\n    const {\n        toEmailRegisterForm,\n        toPhoneLoginForm,\n        toPwdLoginForm,\n        toResetPwdForm,\n        toUSALoginForm\n    } = props;\n\n    const betweenLinkBtnStyle = {\n        display: formType === FormTypes.EmailRegisterForm ? 'none' :\n                 formType === FormTypes.USALoginForm ? 'none' : 'block'\n    }\n\n    const centerLinkBtnStyle = {\n        display: formType === FormTypes.PhoneLoginForm ? 'flex' :\n                 formType === FormTypes.EmailRegisterForm ? 'flex' :\n                 formType === FormTypes.USALoginForm ? 'flex' : 'none'\n    }\n\n    let history = useHistory();\n\n    const leftConvert = () => {\n        if (formType === FormTypes.PhoneLoginForm ) {\n            toPwdLoginForm();\n        } else {\n            toPhoneLoginForm();\n        }\n    }\n\n    const rightConvert = () => {\n        if (formType === FormTypes.PwdLoginForm) {\n            toPhoneLoginForm();\n            history.push('/resetpassword');\n        } else {\n            toEmailRegisterForm();\n        }\n    }\n\n    const centerConvert = () => {\n        switch(formType) {\n            case FormTypes.PhoneLoginForm: \n                toUSALoginForm();\n                break;\n            case FormTypes.USALoginForm:\n                toPhoneLoginForm();\n                break;\n            case FormTypes.EmailRegisterForm:\n                toPhoneLoginForm();\n                break;\n        }\n    }\n\n    return (\n        <Card \n            className='login-window-main'\n            title={\n                formType === FormTypes.PhoneLoginForm ? CardTitle.Welcome :\n                formType === FormTypes.PwdLoginForm ? CardTitle.PwdLogin : \n                formType === FormTypes.EmailRegisterForm ? CardTitle.EmailRegister :\n                CardTitle.USAccountLogin \n            }\n            bordered={false}\n        >\n\n            <PhoneLoginForm  style={{display: formType === FormTypes.PhoneLoginForm ? 'block' : 'none'}} />\n            <PwdLoginForm style={{display: formType === FormTypes.PwdLoginForm ? 'block' : 'none'}} />\n            <EmailRegisterForm style={{display: formType === FormTypes.EmailRegisterForm ? 'block' : 'none'}} />\n            <USALoginForm style={{display: formType === FormTypes.USALoginForm ? 'block' : 'none'}} />\n\n          <div className='link-button-warp'>\n                <Button \n                    className='link-button' \n                    type='link' \n                    onClick={leftConvert}\n                    style={betweenLinkBtnStyle}\n                >\n                    {\n                        formType === FormTypes.PhoneLoginForm ? LinkBtnName.PwdLogin :\n                        LinkBtnName.CaptchaLogin\n                    }\n                </Button>\n\n\n                <Button \n                    className='link-button' \n                    type='link' \n                    onClick={rightConvert}\n                    style={betweenLinkBtnStyle}\n                >\n                    {\n                        formType === FormTypes.PhoneLoginForm ? LinkBtnName.EmailRegister : \n                        LinkBtnName.ForgetPwd\n                    }\n                </Button>\n            </div>\n\n            <div className='us-username' style={centerLinkBtnStyle}>\n                <Button className='link-button' type='link' onClick={centerConvert}>\n                    {\n                        formType === FormTypes.PhoneLoginForm ? LinkBtnName.HasUSAccount : \n                        formType === FormTypes.USALoginForm ? LinkBtnName.BackCH :\n                        LinkBtnName.CaptchaLogin\n                    }\n                    <CaretRightOutlined \n                        style={{ \n                            fontSize: '12px', marginLeft: '2px',\n                            display: formType === FormTypes.PhoneLoginForm ? 'inline' : 'none'\n                        }}     \n                    />\n                    <RightOutlined \n                        style={{ \n                            fontSize: '10px', marginLeft: '2px',\n                            display: formType === FormTypes.USALoginForm ? 'inline' : 'none' \n                        }} \n                    />\n                </Button>\n            </div>\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state: IRootState): IMapState => ({\n    formType: state.loginMain.form\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): IMapDispatch => ({\n    toEmailRegisterForm: () => void dispatch(toEmailRegisterForm()),\n    toPhoneLoginForm: () => void dispatch(toPhoneLoginForm()),\n    toPwdLoginForm: () => void dispatch(toPwdLoginForm()),\n    toResetPwdForm: () => void dispatch(toResetPwdForm()),\n    toUSALoginForm: () => void dispatch(ToUSALoginForm())\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginMain);","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginFooter/loginFooter.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-left/index.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/actions/pwdLoginForm.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/actions/emailRegisterForm.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/mock/index.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/components/dif-tag/DigTag.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/components/comment/index.tsx",["472","473","474","475"],"import { Divider, message, Select } from \"antd\";\nimport { Components } from \"antd/lib/date-picker/generatePicker\";\nimport {\n  createContext,\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { ErrorCode } from \"../../../../../../../apis\";\nimport {\n  Comment,\n  queryComments,\n  sendComment,\n} from \"../../../../../../../apis/comments\";\nimport Loading from \"../../../../../../../components/loading\";\nimport { useGetQuestionId } from \"../../../../../../../utils/hooks\";\nimport { storage } from \"../../../../../../../utils/shared\";\nimport MdEditor from \"../mdEditor\";\nimport Common from \"./components/Common\";\n\ninterface CommentsProps {}\n\n/**\n * 为了在其它编辑器打开的时候关闭其它的，因此需要给每一个设置一个id\n */\nexport const ActiveEditorId = createContext({\n  id: -1,\n  setId(id: number) {},\n});\n\nconst CommentFC: FC<CommentsProps> = () => {\n  const [comments, setComments] = useState<Comment[] | null>(null);\n  const [curPage, setCurPage] = useState(1);\n  const [pageNum, setPageNum] = useState(1);\n  const questionId = useGetQuestionId();\n  const [sortBy, setSortBy] = useState(-1); //0: 热度 1: 时间\n\n  const getComments = useCallback(async (pageNum: number, parentId: any) => {\n    const res = await queryComments(pageNum, parentId);\n    if (res.code === ErrorCode.Success) {\n      setPageNum(res.data.totalPage);\n      setComments(res.data.g);\n      setSortBy(0)\n    } else {\n      setPageNum(0);\n      setComments([]);\n    }\n  }, []);\n\n  const updateComments = (at: string, content: string) => {\n    const newVal = comments?.slice();\n    if (newVal) {\n      newVal.push({\n        avatar: storage.get(\"avatar\")!,\n        content,\n        userId: storage.get(\"userId\")!,\n        nickname: storage.get(\"username\")!,\n        thumbup: 0,\n        replyNum: 0,\n        commentTime: new Date().toString(),\n        islike: 0,\n        commentId: Math.random() * 10000000 + \"\",\n      });\n      setComments(newVal);\n      setSortBy(1);\n    }\n  };\n\n  useEffect(() => {\n    getComments(curPage, questionId);\n  }, [curPage, questionId, getComments]);\n\n  const sendClick = async (content: string) => {\n    // if (questionId) {\n    //   sendComment(questionId, storage.get(\"userId\")!, content);\n    //   const res = await sendComment(\"1\", \"狂拽酷炫吊炸天\", content);\n    //   if (res.code === ErrorCode.Success) {\n    //   }\n    // } else {\n    //   message.info({\n    //     content: \"请先登陆\",\n    //   });\n    // }\n    const res = await sendComment(\"1\", \"狂拽酷炫吊炸天\", content);\n    if (res.code === ErrorCode.Success) {\n      updateComments(\"\", content);\n    }\n  };\n\n  useEffect(() => {\n    setComments((oldComments) => {\n      const val = oldComments?.slice();\n      if (val) {\n        switch (sortBy) {\n          case 0:\n            val.sort((next, prev) => prev.thumbup - next.thumbup);\n            break;\n          case 1:\n            val.sort(\n              (next, prev) =>\n                Date.parse(prev.commentTime) - Date.parse(next.commentTime)\n            );\n            break;\n        }\n      }\n      return val || oldComments;\n    });\n  }, [sortBy]);\n\n  const [id, setId] = useState(-1);\n\n  return (\n    <ActiveEditorId.Provider\n      value={{\n        id,\n        setId,\n      }}\n    >\n      <div className=\"comment-main\">\n        <div className=\"flex j-between\">\n          <div>\n            <span\n              style={{\n                fontWeight: 8000,\n                fontSize: \"20px\",\n                fontFamily: \"Tahoma\",\n                color: \"#595959\",\n                marginRight: \"5px\",\n              }}\n            >\n              {768}\n            </span>\n            条评论\n          </div>\n          <Select\n            onChange={(value: number) => {\n              setSortBy(value);\n            }}\n            defaultValue={0}\n          >\n            <Select.Option value={0}>热度</Select.Option>\n            <Select.Option value={1}>时间</Select.Option>\n          </Select>\n        </div>\n        <MdEditor onSubmit={sendClick as any} />\n        <Divider\n          style={{\n            borderTopColor: \"#bfbfbf\",\n          }}\n        >\n          <span\n            style={{\n              color: \"#bfbfbf\",\n              fontSize: \"14px\",\n            }}\n          >\n            精选评论\n          </span>\n        </Divider>\n        {comments ? (\n          comments.map((item) => (\n            <Common\n              key={item.commentId}\n              userName={item.nickname}\n              avatar={item.avatar}\n              content={item.content}\n              thumbup={item.thumbup}\n              replyNum={item.replyNum}\n              parentId={questionId!}\n              commentTime={item.commentTime}\n              commentId={item.commentId}\n              islike={item.islike}\n            />\n          ))\n        ) : (\n          <div className=\"flex j-center\">\n            <Loading size=\"large\" />\n          </div>\n        )}\n      </div>\n    </ActiveEditorId.Provider>\n  );\n};\n\nexport default memo(CommentFC);\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/actions/loginMain.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/apis/index.ts",["476"],"import axios from 'axios'\nimport { message } from 'antd'\nimport { storage } from '../utils/shared'\n\ntype PendingQueue = ((...args: any) => void)[]\n\nconst BASE_URL = 'http://localhost:3000/api'\n\nconst CONNECT_LIMIT = 6 // 最大网络连接数\nconst TIMEOUT = 1000 * 10 //最大请求到期时间 10s\n\nexport enum ErrorCode {\n  Success = 200,\n  BadRequest = 400, /**参数类型或者字段错误，只展示给我们开发者看，我会log到控制台 */\n  UnAuthorized = 401,\n  Abort = 520,\n  Connect_Fail = 1314, /**由于用户网络断了等特殊情况导致的请求失败 */\n}\nconst CodeMap = {\n  [ErrorCode.Success]: \"请求成功\",\n  [ErrorCode.UnAuthorized]: \"请登陆\",\n  [ErrorCode.Connect_Fail]: \"网络连接失败\",\n  [ErrorCode.BadRequest]: \"参数异常\",\n  [ErrorCode.Abort]: \"请求取消\"\n}\nlet now = window.performance\n  ? () => performance.now()\n  : () => Date.now();\n\n/** 当前请求数 */\nlet requestNum = 0\nlet pendingQueue: PendingQueue = []\nlet isRefreshing = false\n\n/** 不需要token的请求 */\nconst whiteList = new Set([\n  '/user/resetToken',\n  '/user/login',\n  '/user/forget',\n  '/user/register',\n  '/user/checkEmail',\n  '/user/checkUserId',\n  '/user/sendActiveMail',\n  '/user/requestcode',\n  '/user/logout',\n  '/user/findBackPassword',\n  '/user/checkUserLegality',\n  '/token',\n  '/course/queryCourse',\n  '/question/start/'\n])\n\nconst request = axios.create({\n  baseURL: BASE_URL,\n  timeout: TIMEOUT\n})\n\nrequest.interceptors.request.use(\n  async config => {\n    if (!storage.get('token') && !whiteList.has(config.url!)) {\n      config.cancelToken = new axios.CancelToken(c => c())\n      return config\n    }\n\n    if (!config.headers.priority && (isRefreshing || requestNum >= CONNECT_LIMIT)) { //如果正在请求新的token，代表当前token是过期了的\n      try {\n        await block() //等待前面的请求完\n      } catch (e) {//这里表示等待时间过长, 仍然取消请求\n        config.cancelToken = new axios.CancelToken(c => c())\n        config.data.message = '超时'\n        return config\n      }\n    }\n    config.headers = {\n      token: storage.get(\"token\") || \"\",\n      contentType: 'application/json;charset=utf-8',\n    }\n    return config\n  },\n  err => {\n    console.log('异常未知情况造成的错误'); /**正常情况应该永远不会出现这里 */\n    console.log(err);\n  }\n)\n\nrequest.interceptors.response.use(\n  async res => {\n    try {\n      return res\n    } finally {\n      requestNum--\n      send()\n    }\n  },\n  err => {\n    /** 只有网络连接失败和取消请求（没有携带token）会走到这里 */\n    try {\n      if (axios.isCancel(err)) { //是被取消的请求\n        if (!storage.get('token')) { //因为没有token取消的，需要重新登陆\n          return {\n            ...err,\n            data: {\n              message: \"未登录\",\n              code: ErrorCode.UnAuthorized\n            }\n          }\n        }\n        return {\n          data: {\n            message: err.data.message,\n            code: ErrorCode.Abort,\n            data: err\n          }\n        }\n      }\n      /** 网络异常 或者 请求代码执行出错，可能是参数错误，\n       *  比如onClick={func}, 把e传进了请求参数导致axiosJSON.stringify报错\n       */\n      return {\n        data: {\n          data: err,\n          message: \"网络异常\",\n          code: ErrorCode.Connect_Fail\n        }\n      }\n    } finally {\n      requestNum--\n      send()\n    }\n  }\n)\n\nrequest.interceptors.response.use(\n  (res: any) => {\n    const code = res.data.code as ErrorCode\n\n    switch (code) {\n      case ErrorCode.Success: {\n        const newTK = res.headers.token\n        if (newTK && newTK !== res.config.headers.token) {\n          storage.set(\"token\", res.headers.token)\n        }\n        return res.data\n      }\n      default:\n        if (code === 400) {\n          console.log(CodeMap[code]);\n        } else {\n          message.info(CodeMap[code])\n        }\n        return {\n          code: code,\n          message: res.data.message,\n          data: res.data?.data\n        }\n    }\n  }\n)\n\nfunction block() {\n  return new Promise((resolve, reject) => {\n    const timerId: number = window.setTimeout(() => {\n      reject(undefined)\n    }, TIMEOUT)\n    pendingQueue.push(() => {\n      clearTimeout(timerId)\n      resolve(undefined)\n    })\n  })\n}\n\nfunction send() {\n  if (!isRefreshing && pendingQueue.length) {\n    const resolve = pendingQueue.shift()!\n    resolve()\n  }\n}\n\nexport default request\n\nexport interface Response<T = any> {\n  code: number,\n  message: string,\n  data: T\n}","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/USALoginForm/usaLoginForm.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/PwdLoginForm/pwdLoginForm.tsx",["477"],"\nimport { Form, Button, Input } from 'antd';\nimport React, { CSSProperties, useEffect } from 'react';\nimport {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { login } from '../../../store/actions/pwdLoginForm';\nimport { ILoginParams, Method } from '../types';\nimport { IRootState } from '../../../store/reducers';\nimport './style.scss'\n\n\ninterface IFormValues {\n    username: string,\n    password: string\n}\n\ninterface IMappedState {\n    isLoading: boolean;\n    status: 0 | 1 | 2;\n}\n\ninterface IMappedDispacth {\n    login: (params: ILoginParams) => void;\n}\n\ninterface IBaseProps extends IMappedState, IMappedDispacth {\n    children?: React.ReactNode;\n    style?: CSSProperties;\n}\n\n\nconst PhoneLoginForm: React.FC<IBaseProps> = (props) => {\n    const [form] = Form.useForm();\n    let history = useHistory();\n\n    \n    const {\n        // state\n        isLoading,\n        status,\n        // dispatch\n        login\n    } = props;\n\n    useEffect(() => {\n        if (status === 1) {\n            history.replace('/questionlist')\n        }\n    }, [status])\n\n\n    // 将表单填入的信息提交\n    const onFinish = (values: IFormValues) => {\n        const {username, password} = values;\n\n        const params: ILoginParams = {\n            registerBody: username,\n            password,\n            method: Method.Email\n        } \n        login(params);  \n    }\n\n    // const onValuesChange = (value: {username: string} | {password: string}) => {\n        \n    // }\n   \n    return (\n        <Form\n            className='pwd-login-form'\n            name='pwd_login_form'\n            form={form}\n            initialValues={{\n                username: '',\n                password: ''\n            }}\n            onFinish={onFinish}\n            // onValuesChange={onValuesChange}\n            style={props.style}\n        >\n            <Form.Item\n                className='pwd-login-form-item username-input-item'\n                name='username'\n                rules={[\n                    {required: true, message: '请输入手机号或邮箱', validateTrigger: 'onBlur'}\n                ]}\n                validateTrigger={['onChange', 'onBlur']}\n\n            >\n                <Input \n                    className='username-input' \n                    placeholder='手机号 / 邮箱' \n                />\n            </Form.Item>\n\n\n\n            <Form.Item\n                className='pwd-login-form-item password-input-item'\n                name=\"password\"\n                rules={[\n                    {required: true, message: '请输入密码', validateTrigger: 'onBlur'}\n                ]}\n                validateTrigger={['onChange', 'onBlur']}\n            >\n                <Input.Password \n                    className='password-input' \n                    placeholder='输入密码' \n                />\n            </Form.Item>\n\n\n            <Form.Item\n                className='pwd-login-form-item primary-button-item'\n            >\n                <Button \n                    loading={isLoading}\n                    className='primary-button' \n                    type='primary' \n                    htmlType='submit'\n                    style={{ width: '100%' }}\n                >\n                    登录\n                </Button>\n\n            </Form.Item>\n        </Form>\n    )\n}\nconst mapStateToProps = (state: IRootState): IMappedState => ({\n    isLoading: state.pwdLoginForm.isLoading,\n    status: state.pwdLoginForm.status\n});\n\nconst mapDispacthToProps = (dispatch: Dispatch): IMappedDispacth => ({\n    login: (params: ILoginParams) => dispatch(login(params)),\n});\n\nexport default connect(mapStateToProps, mapDispacthToProps)(PhoneLoginForm);\n\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/EmailRegisterForm/emailRegisterForm.tsx",["478","479","480","481","482"],"import React, { CSSProperties, useEffect, useState } from 'react'\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux'\nimport { Form, Input, Button } from 'antd'\nimport { useCaptcha } from '../../../../../utils/hooks';\nimport { IEmailRegisterParams, ILoginParams, Method } from '../types';\nimport { IRootState } from '../../../store/reducers';\nimport { register } from '../../../store/actions/emailRegisterForm';\nimport { useHistory } from 'react-router';\nimport { login } from '../../../store/actions/pwdLoginForm';\nimport './style.scss';\n\ninterface IMappedState {\n    isLoading: boolean;\n    status: 0 | 1 | 2 | 3;\n}\n\ninterface IMappedDispacth {\n    register: (params: IEmailRegisterParams) => void;\n    login: (params: ILoginParams) => void;\n}\n\ninterface IBaseProps extends IMappedState, IMappedDispacth {\n    children?: React.ReactNode;\n    style?: CSSProperties;\n}\n\ninterface IFormValues {\n    email: string,\n    password: string,\n    captcha: string\n}\n\nenum InputType {\n    Email = 'email',\n    Password = 'password',\n    Captcha = 'captcha'\n}\n\ninterface IValueObj {\n    email?: string;\n    password?: string;\n    captcha?: string;\n}\n\nconst EmailRegisterForm: React.FC<IBaseProps> = (props) => {\n\n    // const history = useHistory();\n\n    const {\n        style,\n\n        // state\n        isLoading,\n        status,\n\n        // dispacth\n        register\n    } = props;\n\n\n\n    const [isPwdInputOnBlur, setIsPwdInputOnBlur] = useState(false);\n    const [isEmailInputOnBlur, setIsEmailInputOnBlur] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [captcha, setCaptcha] = useState('');\n\n\n\n    const onFinish = (values: IFormValues) => {\n\n        const { email, password, captcha } = values;\n\n        const parmas: IEmailRegisterParams = {\n            registerBody: email,\n            password,\n            authCode: Number(captcha),\n            method: Method.Email\n        }\n\n        // console.log(parmas);\n\n        register(parmas);\n    }\n\n    const onFinishFailed = (obj: any) => {\n        console.log(obj);\n    }\n    const onValuesChange = (valueObj: IValueObj) => {\n        const changeType = Object.keys(valueObj)[0];\n        switch (changeType) {\n            case InputType.Email:\n                const email = valueObj.email as string;\n                setEmail(email)\n                break;\n            case InputType.Password:\n                const password = valueObj.password as string;\n                setPassword(password)\n                break;\n            case InputType.Captcha:\n                const captcha = valueObj.captcha as string;\n                setCaptcha(captcha)\n                break;\n        }\n    }\n\n\n    useEffect(() => {\n        // 注册的状态\n        // 1：自动登录\n        if (status === 1) {\n            login({\n                registerBody: email,\n                password: password,\n                method: Method.Email\n            });\n        }\n    }, [status])\n\n    const [getCaptcha, IBtnStatus] = useCaptcha('email', email, 60, []);\n\n    return (\n        <Form\n            className='email-register-form'\n            style={style}\n            initialValues={{\n                email: '',\n                password: '',\n                captcha: ''\n            }}\n            onValuesChange={onValuesChange}\n            onFinish={onFinish}\n            onFinishFailed={onFinishFailed}\n        >\n            <Form.Item\n                // ref={emailItemRef}\n                className='email-register-form-item email-register-email-item'\n                name='email'\n                rules={[\n                    { required: true, message: '请输入邮箱', validateTrigger: 'onBlur' },\n                    (/* { getFieldValue } */) => ({\n                        validator(_, value) {\n                            const email = value as string;\n\n                            const reg = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n                            const isValid = reg.test(email);\n                            if (!isValid && isEmailInputOnBlur && email != '') {\n                                return Promise.reject(new Error('邮箱地址不合法'))\n                            }\n\n                            return Promise.resolve();\n                        },\n                    })\n                ]}\n\n                validateTrigger={['onChange', 'onBlur']}\n            >\n                <Input\n                    className='email-register-input email-register-email-input'\n                    placeholder='输入邮箱'\n                    onBlur={() => setIsEmailInputOnBlur(true)}\n                    onFocus={() => setIsEmailInputOnBlur(false)}\n                />\n            </Form.Item>\n\n            <Form.Item\n                className='email-register-form-item email-register-password-item'\n                name='password'\n                rules={[\n                    { required: true, message: '请输入密码', validateTrigger: 'onBlur' },\n                    (/* { getFieldValue } */) => ({\n                        validator(_, value) {\n                            const password = value as string;\n\n                            const reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,30}$/;\n                            const isValid = reg.test(password) && password.length >= 8;\n                            if (!isValid && isPwdInputOnBlur && password != '') {\n                                return Promise.reject(new Error('密码须为不小于8位的数字及字母组合'))\n                            }\n                            return Promise.resolve();\n                        }\n                    })\n                ]}\n                validateTrigger={['onBlur', 'onChange']}\n            >\n                <Input.Password\n                    className='email-register-input email-register-password-input'\n                    placeholder='输入密码'\n                    onBlur={() => setIsPwdInputOnBlur(true)}\n                    onFocus={() => setIsPwdInputOnBlur(false)}\n                />\n            </Form.Item>\n            <div className='captcha-item-warp'>\n                <Form.Item\n                    className='email-register-form-item email-register-captcha-item input-item'\n                    name='captcha'\n                    rules={[\n                        { required: true, message: '请输入验证码', validateTrigger: 'onBlur' }\n                    ]}\n                    validateTrigger={['onChange', 'onBlur']}\n                >\n                    <Input\n                        className='email-register-input email-register-captcha-input'\n                        placeholder='输入验证码'\n                    />\n\n                </Form.Item>\n\n\n                <Form.Item\n                    className='email-register-form-item email-register-captcha-item button-item'\n                >\n                    <Button\n                        onClick={getCaptcha}\n                        // loading={true}\n                        {...IBtnStatus.btnProps}\n                    >\n                        {IBtnStatus.children}\n                    </Button>\n                </Form.Item>\n            </div>\n\n            <Form.Item\n                className='email-register-form-item email-register-btn-item'\n            >\n                <Button\n                    loading={isLoading}\n                    className='email-register-input email-register-btn-input'\n                    type='primary'\n                    htmlType='submit'\n                >\n                    注册\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nconst mapStateToProps = (state: IRootState): IMappedState => ({\n    isLoading: state.emailRegisterForm.isLoading,\n    status: state.emailRegisterForm.status\n});\nconst mapDispacthToProps = (dispacth: Dispatch): IMappedDispacth => ({\n    register: (params: IEmailRegisterParams) => dispacth(register(params)),\n    login: (params: ILoginParams) => dispacth(login(params))\n});\n\nexport default connect(mapStateToProps, mapDispacthToProps)(EmailRegisterForm);\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/phoneLoginForm.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/store/index.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/recordMonth/index.jsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/InfoDisplay/index.jsx",["483"],"import React,{useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Tabs} from 'antd'\nimport {proReqHistory} from '../../../store/actions/proReqHistory_action'\nimport './index.scss'\nimport urlRecord from '../images/record.png'\nimport urlDiscuss from '../images/discuss.png'\nimport urlFollow from '../images/follow.png'\nimport urlDynamic from '../images/dynamic.png'\n\nconst { TabPane } = Tabs\n\n\n\nconst InfoDisply = (props) => {\n    // 模拟数据\n    var Mock = require('mockjs')\n    var list = Mock.mock({\n        // 属性 list 的值是一个数组，其中含有 1 到 10 个元素\n        'code': 200,\n        'message':\"ok\",\n        'data|15': [{\n            \"questionNum|1-1900\": 1,\n            'questionId|14332-682222': 1,\n            'title|1': [\"两数之和\", \"编辑距离\", \"三数之和\"],\n            'isPassed|1': [true, false]\n        }]\n    })\n\n    useEffect(() => {\n    })\n    function reqRecord(e) {\n        if(e == '1') {\n            props.getHistoryData()  \n        }\n    }\n    return (\n        <div className=\"pro-show-history\">\n                <div className=\"pro-card-container\">\n                    <Tabs type=\"card\" onTabClick={reqRecord}>\n                        <TabPane tab={<span>\n                            <img src={urlRecord} alt=\"\"/>\n                            <span>  提交记录</span>\n                        </span> } key=\"1\" >\n                            {list.data.map(value => {\n                                return (\n                                    <div className=\"pro-show\" key={value.questionId}>\n                                        <div className=\"left\">\n                                            <span>我在题目</span>\n                                            <Link className=\"same tixing\" to=\"/questionindex/:id\">{value.questionNum}.{value.title}</Link>\n                                            <span className=\"same\">中使用</span>\n                                            <span className=\"same\">java</span>\n                                            <span className=\"same\">进行了提交</span>\n                                        </div>\n                                        {\n                                            value.isPassed ?\n                                            <div className=\"right\">\n                                                <span className=\"pro-pass\">通过</span>\n                                                <span>2 天前</span>\n                                            </div>:\n                                            <div className=\"right\">\n                                                <span className=\"pro-error\">编译出错</span>\n                                                <span>2 天前</span>\n                                            </div>\n                                        }\n                                    </div>\n                                )\n                            })}\n                            <div className=\"pro-load\">\n                                <div className=\"pro-loadingmore\">加载更多...</div>\n                            </div>\n                        </TabPane>\n                        <TabPane tab={<span>\n                            <img src={urlDiscuss} alt=\"\"/>\n                            <span>  讨论发布</span>\n                        </span>} key=\"2\">\n                            <p>Content of Tab Pane 2</p>\n                            <p>Content of Tab Pane 2</p>\n                            <p>Content of Tab Pane 2</p>\n                        </TabPane>\n                        <TabPane tab={<span>\n                            <img src={urlDynamic} alt=\"\"/>\n                            <span>  我的动态</span>\n                        </span>} key=\"3\">\n                            <p>Content of Tab Pane 3</p>\n                            <p>Content of Tab Pane 3</p>\n                            <p>Content of Tab Pane 3</p>\n                        </TabPane>\n                        <TabPane tab={<span>\n                            <img src={urlFollow} alt=\"\" className=\"pro-img\"/>\n                            <span>  我的关注</span>\n                        </span>} key=\"4\">\n                            <p>Content of Tab Pane 3</p>\n                            <p>Content of Tab Pane 3</p>\n                            <p>Content of Tab Pane 3</p>\n                        </TabPane>\n                    </Tabs>\n                </div>\n            </div>\n    )\n}\n\nexport default connect(\n    state => ({list:state}),\n    {\n        getHistoryData: proReqHistory\n    }\n)(InfoDisply)","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/QuestionInfo/index.jsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-left/Header.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-left/Footer.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-left/SolutionList.tsx",["484"],"import { FC } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { SolutionList as List } from \"../../../../../../apis/solution\";\nimport { RootState } from \"../../../../store\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport { dispatchShowDetail, switchId } from \"../store\";\nimport Loading from \"../../../../../../components/loading\";\nimport LikeBtn from \"../../../../../../components/likeBtn\";\n\ninterface Props {\n  solutionList: readonly List[];\n  dispatch: Dispatch;\n  initial: boolean;\n}\n\nconst SolutionList: FC<Props> = ({ solutionList, dispatch, initial }) => {\n  const showDetail = (id: number) => {\n    dispatch(switchId(id));\n    dispatch(dispatchShowDetail(true));\n  };\n  return (\n    <ul className=\"solution-list\">\n      {initial ? (\n        solutionList.map((item) => (\n          <Item {...item} key={item.answerId} onClick={showDetail} />\n        ))\n      ) : (\n        <div className=\"flex j-center a-center\">\n          <Loading size=\"large\" />\n        </div>\n      )}\n    </ul>\n  );\n};\n\nconst Item: FC<{\n  avatar: string | null;\n  userName: string;\n  title: string;\n  summary: string;\n  thumbup: number;\n  view: string;\n  answerId: string;\n  islike: number;\n  onClick: (id: number) => void;\n}> = (item) => {\n  const clickLikeBtn = () => {};\n\n  return (\n    <li className=\"item\" onClick={item.onClick.bind(null, +item.answerId)}>\n      <div className=\"item-header flex a-center\">\n        <img className=\"avatar\" src={item.avatar!} alt={item.userName} />\n        <span>{item.title}</span>\n      </div>\n      <div className=\"item-content\">{item.summary}</div>\n      <div className=\"item-footer flex a-center\">\n        <div className=\"flex a-center ic\">\n          <LikeBtn islike={item.islike} target=\"answer\" targetId={item.answerId} />\n          {item.thumbup}\n        </div>\n        <div className=\"flex a-center ic\">\n          <EyeOutlined />\n          {item.view}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default connect((state: RootState) => ({\n  solutionList: state.solution.solutionList,\n  initial: state.solution.initial,\n}))(SolutionList);\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/components/comment/components/Common.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/types/index.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/store/actions/proReqHistory_action.js",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/utils/hooks/index.ts",["485","486","487","488","489"],"import produce, { Immutable } from \"immer\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\nimport { Flags, LooseObj } from \"../shared\"\nimport { message, Modal } from 'antd'\nimport { Main_Dark, Main_Light } from \"../../config/colors\"\nimport request, { ErrorCode, Response } from '../../apis'\nimport { useParams } from \"react-router\"\n\ninterface Update<T> {\n  (updateFn: (draft: Immutable<T>) => void): void\n}\ninterface IConfirm {\n  msg?: string\n  title?: string\n  onOk?(): void\n  onCancel?(): void\n}\n\ninterface IBtnStatus {\n  children: string;\n  btnProps: {\n    loading: boolean,\n    disabled: boolean\n  }\n}\n\nexport const useImmer = <T extends LooseObj>(initState: T): [T, Update<T>] => {\n  const [state, setState] = useState<T>(initState)\n\n  const update: Update<T> = (updateFn) => {\n    const newState = produce<T>(state, updateFn)\n    setState(newState)\n  }\n  return [state, update]\n}\n\nexport const useConfirm = ({\n  msg = \"你确定吗\",\n  title = \"确定？\",\n  onOk,\n  onCancel\n}: IConfirm = {}) => {\n  return () => {\n    Modal.confirm({\n      title,\n      content: msg,\n      okText: \"确定\",\n      cancelText: \"取消\",\n      onOk,\n      onCancel,\n      okButtonProps: {\n        style: {\n          background: Main_Light,\n          color: \"#fff\"\n        }\n      },\n      cancelButtonProps: {\n        style: {\n          color: Main_Dark\n        }\n      }\n    })\n  }\n}\n\nexport const wrapRequest = <T extends any[], R>(req: (...args: T) => Promise<Response<R>>) => {\n  const useReqImpl = (...args: T): [Response<R>[\"data\"], Flags, () => void] => {\n    const [data, setData] = useState<Response[\"data\"]>(null)\n    const [flag, setFlag] = useState(Flags.Normal)\n\n    const send = useCallback(async () => {\n      setFlag(Flags.Pending)\n      const res = await req(...args)\n      if (res.code === ErrorCode.Success) {\n        setFlag(Flags.Success)\n      } else {\n        setFlag(Flags.Fail)\n      }\n      setData(res.data)\n    }, [...args])\n\n    useEffect(() => {\n      send()\n    }, [send])\n\n    return [data, flag, send]\n  }\n  return useReqImpl\n}\n\nexport const useGetQuestionId = () => {\n  const { questionId } = useParams<{\n    questionId: string | undefined\n  }>()\n  return questionId\n}\n\n\nexport const useCaptcha = (\n  type: 'email' | 'phone', \n  sendTarget: string, \n  initSeconds = 60, \n  deps: any[]\n): [() => void, IBtnStatus] => {\n  const [seconds, setSeconds] = useState(initSeconds);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isCountDown, setIsCountDown] = useState(false);\n\n  const [btnStatus, setBtnStatus] = useState<IBtnStatus>({\n    children: '获取验证码',\n    btnProps: {\n      loading: false,\n      disabled: true\n    }\n  });\n  \n  const timerRef = useRef<any>();\n\n  // 只有所有的 deps 全部有效后，captchaBtn 才能点击\n  useEffect(() => {\n    const res = deps.reduce((pre, current) => pre &= current, true);\n    setIsDisabled(!res);\n  }, deps)\n\n  useEffect(() => {\n    setBtnStatus({\n      children: `${\n        isLoading ? '发送中' : \n        isCountDown ? (seconds + ' 秒后可重发') : '获取验证码'\n      }`,\n      btnProps: {\n        loading: isLoading,\n        disabled: isDisabled\n      }\n    })\n  }, [seconds, isLoading, isCountDown, isDisabled])\n\n  useEffect(() => {\n    \n    if (isCountDown) {\n      let countDownTime = initSeconds;\n      // 每隔一秒，countDownTime 减 1\n      timerRef.current = setInterval(() => {\n\n        // countDownTime 为 0 时停止倒计时\n        if (countDownTime <= 1) {\n          setSeconds(initSeconds);\n          setIsCountDown(false);\n          setIsDisabled(false)\n          clearInterval(timerRef.current);\n          \n          return;\n        }\n        countDownTime -= 1;\n        setSeconds(countDownTime);\n      }, 1000);\n    } \n    return () => {\n      clearInterval(timerRef.current);\n    }\n  }, [isCountDown])\n\n  // 点击获取验证码\n  const getCaptcha = () => {\n\n    if (type === 'email') {\n      const reg = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      if (!reg.test(sendTarget)) {\n        if (sendTarget === '') {\n          message.info('请输入邮箱');\n        }\n        return;\n      }\n    } else {\n      console.log('手机注册登录接口还未开通');\n      return;\n    }\n    // 按钮 loading：正在发送请求\n    setIsLoading(true);\n    setIsDisabled(true)\n\n    request.post('/user/requestcode', {\n      method: type,\n      number: sendTarget\n    }).then(reponse => {\n\n      // 停止 loading\n      setIsLoading(false);\n      // 开始倒计时\n      setIsCountDown(true);\n      console.log(reponse);\n\n    }).catch(reason => {\n      console.log(reason);\n    })\n  }\n\n  return [getCaptcha, btnStatus];\n}","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/PhoneInput/phoneInput.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/CaptchaInput/captchaInput.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/left/components/mdEditor/index.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/components/loading/index.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/config/colors.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/components/likeBtn/index.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Section/QuestionInfo/Correct/index.jsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/apis/share.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/apis/solution.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/router/config.js",["490"],"import IndexEasy from '../indexEasy'\n\nconst difficulty = [\n    {\n        name:'简单',\n        to:'/quesionlist/?difficulty=easy',\n\n    },{\n        name:'普通',\n        to:'/quesionlist/?difficulty=normal'\n    },{\n        name:'困难',\n        to:'/quesionlist/?difficulty=hard'\n    }\n]\n\n\nconst status = [\n    {\n        name:'未做',\n        to:'/quesionlist/?status=notdone'\n    },{\n        name:'已完成',\n        to:'/quesionlist/?status=done'\n    },{\n        name:'尝试过',\n        to:'/quesionlist/?status=tried'\n    }\n]\n\nconst lists=[\n    {\n        name:'LeetCode热题HOT 100',\n    },{\n        name:'LeetCode精选数牛i...',\n    },{\n        name:'LeetCode精选算法200题',\n    },{\n        name:'力扣杯–竞赛合集',\n    },{\n        name:'腾讯精选练习50题',\n    }\n]\n\nconst tags = [\n    {\n        name:'栈',\n    },{\n        name:'堆',\n    },{\n        name:'贪心算法',\n    },{\n        name:'排序',\n    },{\n        name:'位运算',\n    },{\n        name:'树',\n    }\n]\n\nexport{difficulty,status,tags,lists};","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/login/store/reducers/emailRegisterForm.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/store/reducer.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/components/search/index.jsx",["491"],"import React from 'react'\nimport { Input } from \"antd\";\n\nconst Search = (props) =>{\n    return  (<div id=\"search_wrap\">\n        <Input\n            placeholder=\"搜索题目 名称、内容 或 编号\"\n            style={{width:300}}\n            style={{borderRadius:16}}\n        />\n    </div>\n        \n    )\n}\n\nexport default Search;","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionlist/indexEasy.jsx",["492"],"import React, { useEffect } from 'react'\nimport Sider from './components/indexNav/indexNav'\nimport ListIndex from './components/list/list'\nimport Header from '../questionindex/components/header/Header'\nimport AnsweredInfo from '../questionlist/components/answeredInfo/index'\nimport '../questionlist/QuestionList.css'\nimport { useSelector } from 'react-redux'\nimport { useListData,useUserData } from './store/action'\nimport RandomStart from '../questionlist/components/randomStart/index'\nimport './index.css'\n\n\nconst IndexEasy = (props) =>{\n    let {data,records,loading,userInfo} = useSelector(state=>state.list)\n    console.log(useSelector(state=>state))\n    let getData = useListData()\n    let getUserData = useUserData()\n    useEffect(()=>{\n        getData()\n        getUserData()\n       },[])\n    \n    \n    return  <div className='login' id='indexWrap'>\n        <Header />\n                <div id=\"infoWrap\">\n                    <AnsweredInfo \n                        userInfo={userInfo}\n                    />\n                    <RandomStart \n                        records={records}\n                    />\n                </div>\n                \n                <div id=\"siderWrap\">\n                    <Sider />\n                </div>\n\n                <ListIndex\n                    records={records}\n                    data={data}\n                    loading={loading}\n                />\n            </div>\n}\n\nexport default IndexEasy","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/store/index.ts",["493","494","495"],"import { createStore, combineReducers } from 'redux'\nimport reducer, { initState } from './reducer'\nimport { produce } from 'immer'\n\ntype MappedReducer<T extends { [k: string]: (...args: any) => any }> = {\n  [K in keyof T]: ReturnType<T[K]>\n}\n\nconst editorConfigReducer = produce(reducer, initState)\n\nexport { editorConfigReducer }","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/index.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/body/solution/solution-right/index.tsx",["496"],"import { FC } from \"react\";\nimport { Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { dispatchShowDetail } from \"../store\";\nimport { wrapRequest } from \"../../../../../../utils/hooks\";\nimport {\n  DetailInfo,\n  fetchDetailSolution,\n} from \"../../../../../../apis/solution\";\nimport { RootState } from \"../../../../store\";\nimport { Flags } from \"../../../../../../utils/shared\";\nimport { LoadingOutlined, UserOutlined } from \"@ant-design/icons\";\nimport Comment from \"../../left/components/comment\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport BraftEditor from \"braft-editor\";\nimport Loading from \"../../../../../../components/loading\";\n\ninterface Props {\n  dispatch: Dispatch;\n  answerId: number;\n}\n\nconst useGetDetail = wrapRequest(fetchDetailSolution);\n\nconst SolutionRight: FC<Props> = ({ dispatch, answerId }) => {\n  const close = () => {\n    dispatch(dispatchShowDetail(false));\n  };\n  const [data, flag] = useGetDetail(answerId);\n\n  return (\n    <div className=\"solution-right\">\n      <header className=\"flex a-center\">\n        <button className=\"close-btn\" onClick={close}>\n          关闭\n        </button>\n      </header>\n      <div className=\"sr-content\">\n        {flag === Flags.Pending ? (\n          <div className=\"flex j-center a-center\">\n            <Loading size=\"large\" />\n          </div>\n        ) : flag === Flags.Success ? (\n          <Main {...data} />\n        ) : (\n          \"网络异常\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Main: FC<DetailInfo> = (props) => (\n  <div className=\"main\">\n    <div className=\"solution-header flex a-center\">\n      <Avatar icon={<UserOutlined />} src={props.image} alt=\"头像\" />\n      <span>{props.userName}</span>\n    </div>\n    <BraftEditor\n      value={BraftEditor.createEditorState(props.content)}\n      controls={[]}\n      readOnly={true}\n    />\n    <Comment />\n  </div>\n);\n\nexport default connect((state: RootState) => ({\n  answerId: state.solution.answerId,\n}))(SolutionRight);\n","/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/profile/components/Side/dataExplain/index.jsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/components/ConfigBar.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/components/Editor.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/store/actions.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/config/code.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/components/ConfigMain.tsx",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/pages/questionindex/components/code-editor/store/reducer.ts",[],"/Users/yukee-798/Downloads/daily/React_Project/leetCode/src/components/showModal/index.tsx",[],{"ruleId":"497","severity":1,"message":"498","line":49,"column":11,"nodeType":"499","endLine":49,"endColumn":44},{"ruleId":"497","severity":1,"message":"498","line":54,"column":11,"nodeType":"499","endLine":54,"endColumn":42},{"ruleId":"497","severity":1,"message":"500","line":59,"column":11,"nodeType":"499","endLine":59,"endColumn":80},{"ruleId":"501","severity":1,"message":"502","line":1,"column":17,"nodeType":"503","messageId":"504","endLine":1,"endColumn":30},{"ruleId":"501","severity":1,"message":"505","line":1,"column":32,"nodeType":"503","messageId":"504","endLine":1,"endColumn":40},{"ruleId":"506","severity":1,"message":"507","line":20,"column":10,"nodeType":"508","endLine":20,"endColumn":12,"suggestions":"509"},{"ruleId":"506","severity":1,"message":"510","line":66,"column":8,"nodeType":"508","endLine":66,"endColumn":18,"suggestions":"511"},{"ruleId":"512","severity":1,"message":"513","line":1,"column":10,"nodeType":"503","messageId":"504","endLine":1,"endColumn":14},{"ruleId":"512","severity":1,"message":"513","line":1,"column":10,"nodeType":"503","messageId":"504","endLine":1,"endColumn":14},{"ruleId":"512","severity":1,"message":"514","line":2,"column":15,"nodeType":"503","messageId":"504","endLine":2,"endColumn":19},{"ruleId":"512","severity":1,"message":"515","line":5,"column":10,"nodeType":"503","messageId":"504","endLine":5,"endColumn":14},{"ruleId":"516","severity":1,"message":"517","line":30,"column":9,"nodeType":"518","endLine":30,"endColumn":33},{"ruleId":"516","severity":1,"message":"517","line":32,"column":9,"nodeType":"518","endLine":32,"endColumn":54},{"ruleId":"516","severity":1,"message":"517","line":49,"column":9,"nodeType":"518","endLine":49,"endColumn":54},{"ruleId":"516","severity":1,"message":"517","line":65,"column":9,"nodeType":"518","endLine":65,"endColumn":33},{"ruleId":"516","severity":1,"message":"517","line":67,"column":9,"nodeType":"518","endLine":67,"endColumn":54},{"ruleId":"516","severity":1,"message":"517","line":83,"column":9,"nodeType":"518","endLine":83,"endColumn":33},{"ruleId":"516","severity":1,"message":"517","line":85,"column":9,"nodeType":"518","endLine":85,"endColumn":54},{"ruleId":"512","severity":1,"message":"505","line":1,"column":17,"nodeType":"503","messageId":"504","endLine":1,"endColumn":25},{"ruleId":"519","severity":1,"message":"520","line":28,"column":24,"nodeType":"521","messageId":"522","endLine":28,"endColumn":26},{"ruleId":"512","severity":1,"message":"505","line":1,"column":17,"nodeType":"503","messageId":"504","endLine":1,"endColumn":25},{"ruleId":"512","severity":1,"message":"523","line":2,"column":17,"nodeType":"503","messageId":"504","endLine":2,"endColumn":21},{"ruleId":"512","severity":1,"message":"515","line":3,"column":9,"nodeType":"503","messageId":"504","endLine":3,"endColumn":13},{"ruleId":"512","severity":1,"message":"524","line":6,"column":10,"nodeType":"503","messageId":"504","endLine":6,"endColumn":20},{"ruleId":"512","severity":1,"message":"525","line":7,"column":10,"nodeType":"503","messageId":"504","endLine":7,"endColumn":38},{"ruleId":"512","severity":1,"message":"526","line":2,"column":10,"nodeType":"503","messageId":"504","endLine":2,"endColumn":19},{"ruleId":"497","severity":1,"message":"500","line":11,"column":23,"nodeType":"499","endLine":11,"endColumn":26},{"ruleId":"519","severity":1,"message":"520","line":42,"column":50,"nodeType":"521","messageId":"522","endLine":42,"endColumn":52},{"ruleId":"506","severity":1,"message":"527","line":41,"column":6,"nodeType":"508","endLine":41,"endColumn":21,"suggestions":"528"},{"ruleId":"512","severity":1,"message":"529","line":11,"column":11,"nodeType":"503","messageId":"504","endLine":11,"endColumn":16},{"ruleId":"512","severity":1,"message":"529","line":40,"column":11,"nodeType":"503","messageId":"504","endLine":40,"endColumn":16},{"ruleId":"501","severity":1,"message":"530","line":69,"column":9,"nodeType":"503","messageId":"504","endLine":69,"endColumn":23},{"ruleId":"501","severity":1,"message":"531","line":1,"column":19,"nodeType":"503","messageId":"504","endLine":1,"endColumn":26},{"ruleId":"501","severity":1,"message":"532","line":2,"column":10,"nodeType":"503","messageId":"504","endLine":2,"endColumn":20},{"ruleId":"501","severity":1,"message":"533","line":35,"column":19,"nodeType":"503","messageId":"504","endLine":35,"endColumn":29},{"ruleId":"501","severity":1,"message":"534","line":36,"column":10,"nodeType":"503","messageId":"504","endLine":36,"endColumn":17},{"ruleId":"501","severity":1,"message":"535","line":26,"column":5,"nodeType":"503","messageId":"504","endLine":26,"endColumn":8},{"ruleId":"506","severity":1,"message":"536","line":50,"column":8,"nodeType":"508","endLine":50,"endColumn":16,"suggestions":"537"},{"ruleId":"501","severity":1,"message":"538","line":9,"column":10,"nodeType":"503","messageId":"504","endLine":9,"endColumn":20},{"ruleId":"501","severity":1,"message":"539","line":67,"column":12,"nodeType":"503","messageId":"504","endLine":67,"endColumn":19},{"ruleId":"506","severity":1,"message":"540","line":119,"column":8,"nodeType":"508","endLine":119,"endColumn":16,"suggestions":"541"},{"ruleId":"519","severity":1,"message":"542","line":148,"column":73,"nodeType":"521","messageId":"522","endLine":148,"endColumn":75},{"ruleId":"519","severity":1,"message":"542","line":178,"column":74,"nodeType":"521","messageId":"522","endLine":178,"endColumn":76},{"ruleId":"519","severity":1,"message":"520","line":34,"column":14,"nodeType":"521","messageId":"522","endLine":34,"endColumn":16},{"ruleId":"501","severity":1,"message":"543","line":48,"column":9,"nodeType":"503","messageId":"504","endLine":48,"endColumn":21},{"ruleId":"506","severity":1,"message":"544","line":80,"column":8,"nodeType":"508","endLine":80,"endColumn":17,"suggestions":"545"},{"ruleId":"506","severity":1,"message":"546","line":80,"column":9,"nodeType":"547","endLine":80,"endColumn":16},{"ruleId":"506","severity":1,"message":"548","line":124,"column":6,"nodeType":"503","endLine":124,"endColumn":10},{"ruleId":"506","severity":1,"message":"549","line":124,"column":6,"nodeType":"503","endLine":124,"endColumn":10,"suggestions":"550"},{"ruleId":"506","severity":1,"message":"551","line":162,"column":6,"nodeType":"508","endLine":162,"endColumn":19,"suggestions":"552"},{"ruleId":"512","severity":1,"message":"553","line":1,"column":8,"nodeType":"503","messageId":"504","endLine":1,"endColumn":17},{"ruleId":"516","severity":1,"message":"517","line":9,"column":13,"nodeType":"518","endLine":9,"endColumn":38},{"ruleId":"506","severity":1,"message":"507","line":21,"column":10,"nodeType":"508","endLine":21,"endColumn":12,"suggestions":"554"},{"ruleId":"501","severity":1,"message":"555","line":1,"column":10,"nodeType":"503","messageId":"504","endLine":1,"endColumn":21},{"ruleId":"501","severity":1,"message":"556","line":1,"column":23,"nodeType":"503","messageId":"504","endLine":1,"endColumn":38},{"ruleId":"501","severity":1,"message":"557","line":5,"column":6,"nodeType":"503","messageId":"504","endLine":5,"endColumn":19},{"ruleId":"501","severity":1,"message":"558","line":13,"column":10,"nodeType":"503","messageId":"504","endLine":13,"endColumn":25},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getData' and 'getUserData'. Either include them or remove the dependency array.","ArrayExpression",["559"],"React Hook useEffect has a missing dependency: 'getLoginWindowStyle'. Either include it or remove the dependency array.",["560"],"no-unused-vars","'call' is defined but never used.","'Tabs' is defined but never used.","'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'windowWhen' is defined but never used.","'SSL_OP_TLS_BLOCK_PADDING_BUG' is defined but never used.","'Statistic' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["561"],"'token' is assigned a value but never used.","'toResetPwdForm' is assigned a value but never used.","'message' is defined but never used.","'Components' is defined but never used.","'setCurPage' is assigned a value but never used.","'pageNum' is assigned a value but never used.","'now' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["562"],"'useHistory' is defined but never used.","'captcha' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'email' and 'password'. Either include them or remove the dependency array.",["563"],"Expected '!==' and instead saw '!='.","'clickLikeBtn' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'args'. Either include it or remove the dependency array.",["564"],"React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'deps'. Either include it or remove the dependency array.",["565"],"React Hook useEffect has a missing dependency: 'initSeconds'. Either include it or remove the dependency array. If 'setSeconds' needs the current value of 'initSeconds', you can also switch to useReducer instead of useState and read 'initSeconds' in the reducer.",["566"],"'IndexEasy' is defined but never used.",["567"],"'createStore' is defined but never used.","'combineReducers' is defined but never used.","'MappedReducer' is defined but never used.","'LoadingOutlined' is defined but never used.",{"desc":"568","fix":"569"},{"desc":"570","fix":"571"},{"desc":"572","fix":"573"},{"desc":"574","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},{"desc":"568","fix":"584"},"Update the dependencies array to be: [getData, getUserData]",{"range":"585","text":"586"},"Update the dependencies array to be: [formType, getLoginWindowStyle]",{"range":"587","text":"588"},"Update the dependencies array to be: [descData.code, id]",{"range":"589","text":"590"},"Update the dependencies array to be: [history, status]",{"range":"591","text":"592"},"Update the dependencies array to be: [email, password, status]",{"range":"593","text":"594"},"Update the dependencies array to be: [args]",{"range":"595","text":"596"},"Update the dependencies array to be: [deps]",{"range":"597","text":"598"},"Update the dependencies array to be: [initSeconds, isCountDown]",{"range":"599","text":"600"},{"range":"601","text":"586"},[746,748],"[getData, getUserData]",[1616,1626],"[formType, getLoginWindowStyle]",[1068,1083],"[descData.code, id]",[1103,1111],"[history, status]",[2975,2983],"[email, password, status]",[1926,1935],"[args]",[2904,2908],"[deps]",[3776,3789],"[initSeconds, isCountDown]",[793,795]]