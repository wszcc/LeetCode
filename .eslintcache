[{"D:\\PROJECT\\leetCode\\src\\index.tsx":"1","D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts":"2","D:\\PROJECT\\leetCode\\src\\App.tsx":"3","D:\\PROJECT\\leetCode\\src\\router\\index.jsx":"4","D:\\PROJECT\\leetCode\\src\\router\\config.js":"5","D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js":"6","D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js":"7","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js":"8","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js":"9","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js":"10","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js":"11","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js":"12","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js":"13","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js":"14","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js":"15","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\data.js":"16","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js":"17","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx":"18","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx":"19","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx":"20","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts":"21","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx":"22","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts":"23","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts":"24","D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx":"25","D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts":"26","D:\\PROJECT\\leetCode\\src\\config\\colors.ts":"27","D:\\PROJECT\\leetCode\\src\\apis\\index.ts":"28","D:\\PROJECT\\leetCode\\src\\utils\\shared.ts":"29"},{"size":417,"mtime":1611926463004,"results":"30","hashOfConfig":"31"},{"size":440,"mtime":1611827611826,"results":"32","hashOfConfig":"31"},{"size":270,"mtime":1611827611819,"results":"33","hashOfConfig":"31"},{"size":492,"mtime":1611827611827,"results":"34","hashOfConfig":"31"},{"size":669,"mtime":1611827611826,"results":"35","hashOfConfig":"31"},{"size":149,"mtime":1611827611822,"results":"36","hashOfConfig":"31"},{"size":3376,"mtime":1611926549557,"results":"37","hashOfConfig":"31"},{"size":165,"mtime":1611827611825,"results":"38","hashOfConfig":"31"},{"size":280,"mtime":1611827611823,"results":"39","hashOfConfig":"31"},{"size":168,"mtime":1611827611825,"results":"40","hashOfConfig":"31"},{"size":1819,"mtime":1611827611824,"results":"41","hashOfConfig":"31"},{"size":243,"mtime":1611929108009,"results":"42","hashOfConfig":"31"},{"size":795,"mtime":1611928955736,"results":"43","hashOfConfig":"31"},{"size":1617,"mtime":1611928955737,"results":"44","hashOfConfig":"31"},{"size":955,"mtime":1611928955737,"results":"45","hashOfConfig":"31"},{"size":851,"mtime":1611928955737,"results":"46","hashOfConfig":"31"},{"size":380,"mtime":1611926463005,"results":"47","hashOfConfig":"31"},{"size":636,"mtime":1612023186231,"results":"48","hashOfConfig":"31"},{"size":2920,"mtime":1611934240321,"results":"49","hashOfConfig":"31"},{"size":1470,"mtime":1611992668150,"results":"50","hashOfConfig":"31"},{"size":470,"mtime":1611926463006,"results":"51","hashOfConfig":"31"},{"size":3390,"mtime":1611932320954,"results":"52","hashOfConfig":"31"},{"size":1361,"mtime":1611978654573,"results":"53","hashOfConfig":"31"},{"size":859,"mtime":1611934233791,"results":"54","hashOfConfig":"31"},{"size":1673,"mtime":1611926463004,"results":"55","hashOfConfig":"31"},{"size":914,"mtime":1611978724525,"results":"56","hashOfConfig":"31"},{"size":125,"mtime":1611935458357,"results":"57","hashOfConfig":"31"},{"size":6021,"mtime":1611926463004,"results":"58","hashOfConfig":"31"},{"size":1662,"mtime":1612023523913,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"12bdsu8",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PROJECT\\leetCode\\src\\index.tsx",[],["131","132"],"D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts",[],"D:\\PROJECT\\leetCode\\src\\App.tsx",[],"D:\\PROJECT\\leetCode\\src\\router\\index.jsx",["133"],"import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport routerMap from \"./config\";\r\n\r\n\r\nconst RouterView = () => {\r\n  return (\r\n    <Router>\r\n      {/* <Redirect to=\"/home\"></Redirect> */}\r\n      <Switch>\r\n        {routerMap.map((item,index) => (\r\n          <Route key={index} path={item.path} component={item.component}></Route>\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RouterView;\r\n",["134","135"],"D:\\PROJECT\\leetCode\\src\\router\\config.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js",["136","137","138"],"import React from \"react\";\r\nimport Logo from \"../../../../assets/imgs/logo.svg\";\r\nimport \"./header.scss\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n  RightSquareOutlined,\r\n  BellOutlined,\r\n  UserOutlined,\r\n  DownOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nfunction Header(props) {\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.alipay.com/\"\r\n        >\r\n          题目以中文显示\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.taobao.com/\"\r\n        >\r\n          题目以英文显示\r\n        </a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div className=\"header\">\r\n      <ul className=\"header-nav\">\r\n        <li>\r\n          <img src={Logo} alt=\"力扣\"></img>\r\n        </li>\r\n        <li>学习</li>\r\n        <li>题库</li>\r\n        <li>讨论</li>\r\n        <li>竞赛</li>\r\n        <li>求职</li>\r\n        <li className=\"shop\">商店</li>\r\n        <li>\r\n          <a className=\"download\" href=\"#\">\r\n            下载 App\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"member\" href=\"#\">\r\n            Plus 会员\r\n          </a>\r\n        </li>\r\n        <Dropdown overlay={menu}>\r\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\r\n            中 <DownOutlined />\r\n          </a>\r\n        </Dropdown>\r\n        <li>\r\n          <RightSquareOutlined />\r\n        </li>\r\n        <li>\r\n          <BellOutlined />\r\n        </li>\r\n        <li>\r\n          <Link to='/profile'><UserOutlined /></Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js",["139","140"],"import { Table, Tag, Space } from \"antd\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"提交时间\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: \"提交结果\",\r\n    dataIndex: \"age\",\r\n    key: \"age\",\r\n  },\r\n  {\r\n    title: \"运行时间\",\r\n    dataIndex: \"address\",\r\n    key: \"address\",\r\n  },\r\n  {\r\n    title: \"内存消耗\",\r\n    key: \"tags\",\r\n    dataIndex: \"tags\",\r\n    render: (tags) => (\r\n      <>\r\n        {tags.map((tag) => {\r\n          let color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n          if (tag === \"loser\") {\r\n            color = \"volcano\";\r\n          }\r\n          return (\r\n            <Tag color={color} key={tag}>\r\n              {tag.toUpperCase()}\r\n            </Tag>\r\n          );\r\n        })}\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    title: \"语言\",\r\n    key: \"action\",\r\n    render: (text, record) => (\r\n      <Space size=\"middle\">\r\n        <a>Invite {record.name}</a>\r\n      </Space>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: \"1\",\r\n    name: \"John Brown\",\r\n    age: 32,\r\n    address: \"New York No. 1 Lake Park\",\r\n    tags: [\"nice\", \"developer\"],\r\n  },\r\n  {\r\n    key: \"2\",\r\n    name: \"Jim Green\",\r\n    age: 42,\r\n    address: \"London No. 1 Lake Park\",\r\n    tags: [\"loser\"],\r\n  },\r\n  {\r\n    key: \"3\",\r\n    name: \"Joe Black\",\r\n    age: 32,\r\n    address: \"Sidney No. 1 Lake Park\",\r\n    tags: [\"cool\", \"teacher\"],\r\n  },\r\n];\r\n\r\nconst SubmitRecord = (props) => {\r\n  return (\r\n    <div className=\"submit-record\">\r\n      <Table pagination={false} columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitRecord;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\data.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js",["141"],"import React,{useEffect} from 'react'\r\nimport E from 'wangeditor'\r\nimport CodeEditor from '../../code-editor'\r\n\r\nconst Right = (props) =>{\r\n    useEffect(()=>{\r\n        // const editor = new E('#div1')\r\n        // editor.create()\r\n    },[])\r\n    return <div className='left'>\r\n        <div id='div1'>\r\n          <CodeEditor/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Right","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx",["142"],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx",["143","144","145","146","147"],"import { FC, useCallback, useEffect, useRef, useState } from 'react'\r\nimport { Dispatch } from 'redux'\r\nimport { RootState } from '../store'\r\nimport { Controlled as CodeMirror } from 'react-codemirror2'\r\nimport 'codemirror/addon/display/autorefresh';\r\nimport 'codemirror/addon/comment/comment';\r\nimport 'codemirror/addon/edit/matchbrackets';\r\nimport 'codemirror/keymap/vim';\r\nimport 'codemirror/theme/eclipse.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/theme/ambiance.css';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/mode/clike/clike.js'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/hint/anyword-hint';\r\nimport 'codemirror/addon/selection/active-line';\r\nimport 'codemirror/mode/xml/xml.js';\r\nimport 'codemirror/addon/fold/foldgutter.css';\r\nimport 'codemirror/addon/fold/foldcode.js';\r\nimport 'codemirror/addon/fold/foldgutter.js';\r\nimport 'codemirror/addon/fold/brace-fold.js';\r\nimport 'codemirror/addon/fold/comment-fold.js';\r\n\r\nimport 'codemirror/addon/comment/comment'\r\nimport 'codemirror/keymap/sublime'\r\nimport 'codemirror/addon/edit/closebrackets.js'//自动括号\r\nimport { connect } from 'react-redux';\r\nimport { debounce, storage } from '../../../../../utils/shared'\r\nimport { actSaveCode } from '../store/actions';\r\n\r\nconst Default_Java_Code = `class Solution {\r\n\tint main() {\r\n\t\t\r\n\t\treturn 0;\r\n\t}\r\n}`\r\n\r\ninterface Config {\r\n  fontSize: number,\r\n  theme: \"dark\" | \"light\",\r\n  indent: number,\r\n  code: string,\r\n  dispatch: Dispatch\r\n}\r\n\r\nconst CodeEditor: FC<Config> = ({ fontSize, theme, indent, code, dispatch }) => {\r\n  const editor = useRef<CodeMirror>(null)\r\n  \r\n  useEffect(() => {\r\n    const $editor = (editor.current as any).editor\r\n    $editor.setSize('100%', '100%')\r\n  }, [])\r\n\r\n  return (\r\n    <CodeMirror\r\n      className={\"font-size-\" + fontSize + \" editor\"}\r\n      ref={editor}\r\n      value={code}\r\n      options={{\r\n        mode: {\r\n          name: \"text/x-java\"\r\n        },\r\n        theme: theme === 'light' ? 'eclipse' : 'material',\r\n        indentWithTabs: indent,\r\n        tabSize: indent,\r\n        lineNumbers: true,\r\n        smartIndent: true,\r\n        autoCloseBrackets: true,\r\n        matchBrackets: true,\r\n        extraKyes: {\r\n          \"Tab\": \"autocomplete\"\r\n        },\r\n        lineWrapping: true,\r\n        foldGutter: true,\r\n        gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter']\r\n      }}\r\n      onBeforeChange={(...arr) => {\r\n        dispatch(actSaveCode(arr[2]))\r\n      }}\r\n      onInputRead={(cm, change) => {\r\n        cm.setOption('hintOptions', {\r\n          completeSingle: false\r\n        });\r\n        if (![';'].includes(change.text[0]))\r\n          cm.execCommand('autocomplete');\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state: RootState) => ({ ...state.editorConfig })\r\n)(CodeEditor)","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx",["148","149","150"],"import { memo, useState, useRef, useEffect } from \"react\"\r\nimport ShowModal from '../../../../../components/showModal'\r\nimport ConfigMain from \"./ConfigMain\"\r\nimport { SettingOutlined, ExpandOutlined, RetweetOutlined } from '@ant-design/icons'\r\nimport { Tooltip, Modal } from 'antd'\r\nimport { useConfirm } from \"../../../../../utils/hooks\"\r\n\r\nconst {confirm} = Modal\r\n\r\nconst ConfigBar = () => {\r\n  const open = useRef<(...args: any) => any>(null)\r\n  const confirm = useConfirm()\r\n  const resetCode = () => {\r\n    confirm()\r\n  }\r\n  return (\r\n    <div className=\"head-bar flex j-between\">\r\n      <div>\r\n        java\r\n      </div>\r\n      <div className=\"config-bar flex a-center\">\r\n        <div className=\"i-config\" onClick={resetCode}>\r\n          <Tooltip placement=\"bottom\" title=\"重置为默认代码\">\r\n            <RetweetOutlined />\r\n          </Tooltip>\r\n        </div>\r\n        <ShowModal\r\n          className=\"editor-configer\"\r\n          title=\"代码编辑器设置\"\r\n          render={<div className=\"i-config\">\r\n            <Tooltip placement=\"bottom\" title=\"代码编辑器设置\">\r\n              <SettingOutlined />\r\n            </Tooltip>\r\n          </div>}\r\n          content={<ConfigMain />}\r\n          ref={open}\r\n        />\r\n        <div className=\"i-config\">\r\n          <Tooltip placement=\"bottom\" title=\"全屏\">\r\n            <ExpandOutlined />\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(ConfigBar)","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx",["151","152","153","154","155","156","157"],"import { Dropdown, Menu } from 'antd'\r\nimport { FC } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Action, Dispatch } from 'redux'\r\nimport { RootState } from '../store'\r\nimport { Actions, actFontSize, actIndent, actTheme } from '../store/actions'\r\nimport { initState } from '../store/reducer'\r\nimport { DownOutlined } from '@ant-design/icons'\r\n\r\ntype State = typeof initState\r\n\r\ninterface Props extends State {\r\n  dispatch: Dispatch\r\n}\r\n\r\nconst configs: {\r\n  keyword: string,\r\n  title: string,\r\n  description: string,\r\n  options: Array<[string, string | number]>\r\n}[] = [\r\n    {\r\n      keyword: \"fontSize\",\r\n      title: \"字体设置\",\r\n      description: \"调整适合你的字体大小\",\r\n      options: [...Array(9).fill([\"\", 0])].map((v, i) => [12 + i + 'px', 12 + i]), //12-20px\r\n    }, {\r\n      keyword: \"theme\",\r\n      title: \"主题设置\",\r\n      description: \"切换不同的编辑器主题\",\r\n      options: [[\"dark\", \"dark\"], [\"light\", \"light\"]]\r\n    }, {\r\n      keyword: \"indent\",\r\n      title: \"Tab长度\",\r\n      description: \"按下Tab后的缩进长度，默认为2\",\r\n      options: [[\"2\", 2], [\"4\", 4]]\r\n    }\r\n  ]\r\n\r\nconst ConfigMain: FC<Props> = (props) => {\r\n  const { fontSize, theme, indent, dispatch } = props\r\n  return (\r\n    <div className=\"config-main\">\r\n      {\r\n        configs.map((v) => <EachConfig key={v.keyword} {...v} {...props} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ConfigProps extends State {\r\n  title: string,\r\n  description: string,\r\n  options: Array<[string, string | number]>,\r\n  keyword: string,\r\n  dispatch: Dispatch\r\n}\r\nconst EachConfig: FC<ConfigProps> = (props) => {\r\n  const { title, description, options, keyword, dispatch } = props\r\n  return <div key={title} className=\"config-item flex j-between\">\r\n    <div style={{ width: '70%' }}>\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"description\">{description}</div>\r\n    </div>\r\n    <div style={{ width: '30%' }}>\r\n      <Dropdown\r\n        overlay={\r\n          <Menu>\r\n            {\r\n              options.map(([k, v]) => {\r\n                const update = () => {\r\n                  let action: any\r\n                  switch (keyword) {\r\n                    case \"fontSize\":\r\n                      action = actFontSize(v as number)\r\n                      break\r\n                    case \"theme\":\r\n                      action = actTheme(v as \"dark\" | \"light\")\r\n                      break\r\n                    case \"indent\":\r\n                      action = actIndent(v as 2 | 4)\r\n                      break\r\n                  }\r\n                  dispatch(action)\r\n                }\r\n                return <Menu.Item\r\n                  key={k}\r\n                  onClick={update}\r\n                >\r\n                  {k}\r\n                </Menu.Item>\r\n              })\r\n            }\r\n          </Menu>\r\n        }\r\n        trigger={['click']}\r\n        placement=\"bottomCenter\"\r\n      >\r\n        <div className=\"config-dropdown flex j-between a-center\">\r\n          <a>{props[keyword as \"fontSize\" | \"theme\" | \"indent\"]}</a>\r\n          <DownOutlined />\r\n        </div>\r\n      </Dropdown>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default connect(\r\n  (state: RootState) => ({\r\n    fontSize: state.editorConfig.fontSize,\r\n    indent: state.editorConfig.indent,\r\n    theme: state.editorConfig.theme,\r\n    code: state.editorConfig.code\r\n  })\r\n)(ConfigMain)","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts",[],"D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx",["158"],"/**\r\n * 食用方式像这样：\r\n *    点击 设置  就会弹出传入的content\r\n *    如果需要在某些情况手动关闭，比如网络请求成功后关掉弹框:\r\n *                            * 传入 ref \r\n *                            * myRef.current.close() 展示弹框\r\n *                            * myRef.current.open()  关闭弹框\r\n *     <ShowModal\r\n *       render={ <div>打开弹窗</div> }\r\n *       content={ <你的组件 /> }\r\n *       ref={myRef}\r\n *     />\r\n * \r\n */\r\nimport { forwardRef, memo, ReactNode, useImperativeHandle, useState } from 'react'\r\nimport { Modal } from 'antd'\r\n\r\ninterface Props {\r\n  className?:string\r\n  footer?: ReactNode\r\n  onCancel?(): void\r\n  show?: boolean\r\n  switch?: boolean\r\n  title?: string\r\n  render: ReactNode\r\n  content: ReactNode\r\n  [K: string]: any\r\n}\r\n\r\nconst ShowModal = forwardRef((props: Props, ref) => {\r\n  const {\r\n    footer,\r\n    onCancel,\r\n    content,\r\n    render,\r\n    show,\r\n  } = props\r\n  const [visible, setVisible] = useState(!!show)\r\n  useImperativeHandle(ref, () => ({\r\n    open: setVisible.bind(null, true),\r\n    close: setVisible.bind(null, false),\r\n  }), [ref, setVisible])\r\n\r\n  const click = () => {\r\n    setVisible(!visible)\r\n  }\r\n  const defaultOnChange = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span onClick={click}>\r\n        {render}\r\n      </span>\r\n      <Modal\r\n        {...props}\r\n        style={{ padding: \"15px\" }}\r\n        visible={visible}\r\n        footer={footer || null}\r\n        maskClosable={true}\r\n        onCancel={onCancel || defaultOnChange}\r\n      >\r\n        {content}\r\n      </Modal>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default memo(ShowModal)","D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts",["159","160","161"],"import produce, { Immutable } from \"immer\"\r\nimport { useState } from \"react\"\r\nimport { LooseObj } from \"../shared\"\r\nimport { Modal } from 'antd'\r\nimport { Main_Light } from \"../../config/colors\"\r\ninterface Update<T> {\r\n  (updateFn: (draft: Immutable<T>) => void): void\r\n}\r\n\r\nexport const useImmer = <T extends LooseObj>(initState: T): [T, Update<T>] => {\r\n  const [state, setState] = useState<T>(initState)\r\n\r\n  const update: Update<T> = (updateFn) => {\r\n    const newState = produce<T>(state, updateFn)\r\n    setState(newState)\r\n  }\r\n  return [state, update]\r\n}\r\n\r\nexport const useConfirm = (msg: string = \"你确定吗\", title: string = \"确定？\") => {\r\n  const _okFn = () => { }\r\n  const _cancelFn = () => { }\r\n\r\n  return () => {\r\n    Modal.confirm({\r\n      title,\r\n      content: msg,\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      okButtonProps: {\r\n        type: \"text\"\r\n      }\r\n    })\r\n  }\r\n}","D:\\PROJECT\\leetCode\\src\\config\\colors.ts",[],"D:\\PROJECT\\leetCode\\src\\apis\\index.ts",["162","163","164","165","166"],"import axios from 'axios'\r\nimport { storage } from '../utils/shared'\r\n\r\ntype PendingQueue = ((...args: any) => void)[]\r\n\r\nconst BASE_URL = 'http://47.107.90.201:8080'\r\n\r\nconst CONNECT_LIMIT = 1 // 最大网络连接数\r\nconst TIMEOUT = 1000 * 10 //最大请求到期时间 10s\r\n\r\nlet retryNum = 0\r\nconst MAX_RETRY_NUM = 5\r\n\r\nexport enum ErrorCode {\r\n  Token_Expire_Code = 430,\r\n  RefreshToken_Expire_Code = 432,\r\n  No_Token = 425,\r\n  Abort = 16625,\r\n  Connect_Fail = 16626,\r\n  Succes = 200\r\n}\r\nlet now = window.performance\r\n  ? () => performance.now()\r\n  : () => Date.now();\r\nconst Concurrent_Timing = 2\r\n\r\nlet lastModified = 0\r\n\r\n/** 当前请求数 */\r\nlet requestNum = 0\r\nlet pendingQueue: PendingQueue = []\r\nlet isRefreshing = false\r\n\r\n/** 不需要token的请求 */\r\nconst whiteList = new Set([\r\n  '/user/resetToken',\r\n  '/user/login',\r\n  '/user/register',\r\n  '/user/checkEmail',\r\n  '/user/checkUserId',\r\n  '/user/sendActiveMail',\r\n  '/user/logout',\r\n  '/user/findBackPassword',\r\n  '/user/checkUserLegality',\r\n  '/token',\r\n])\r\n\r\nconst request = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: TIMEOUT\r\n})\r\n\r\nrequest.interceptors.request.use(\r\n  async config => {\r\n    if (!storage.get('token') && !whiteList.has(config.url!)) {\r\n      config.cancelToken = new axios.CancelToken(c => c())\r\n      return config\r\n    }\r\n    console.log('isRefreshing' + isRefreshing);\r\n    console.log('requestNum' + requestNum);\r\n\r\n    if (!config.headers.priority && (isRefreshing || requestNum >= CONNECT_LIMIT)) { //如果正在请求新的token，代表当前token是过期了的\r\n      try {\r\n        await block() //等待前面的请求完\r\n      } catch (e) {//这里表示等待时间过长, 仍然取消请求\r\n        config.cancelToken = new axios.CancelToken(c => c())\r\n        return config\r\n      }\r\n    }\r\n    requestNum++\r\n    config.headers = {\r\n      token: storage.get(\"token\") || \"\",\r\n      contentType: 'application/json;charset=utf-8',\r\n    }\r\n    config.data = {\r\n      userId: storage.get('userId') || ''\r\n    }\r\n    return config\r\n  }\r\n)\r\n\r\nrequest.interceptors.response.use(\r\n  async res => {\r\n    try {\r\n      if (res.data.error_code === ErrorCode.Token_Expire_Code) {\r\n        /**\r\n         *  token过期有两种情况\r\n         *  1.第一次过期, 重新请求token并且重新发送请求，将新的结果返回\r\n         *  2.并发请求中，全部过期，但是刚才有一个请求已经检测到过期，\r\n         *    于是已经重新获取token了，需要将这个请求重新发送\r\n         *  两种情况的判定：通过最近一次刷新token的时间（lastModified）来确定\r\n         */\r\n        console.log(now() - lastModified > Concurrent_Timing);\r\n\r\n        if (now() - lastModified > Concurrent_Timing) { //第一次过期\r\n          try {\r\n            console.log('refresh tk');\r\n            await refreshToken() //这里也会发一个请求，因此请求数+1了，因此这个函数最后会让请求数-1\r\n          } catch (e) { //连refreshToken也失效了，需要重新登陆了\r\n            storage.clear()\r\n            return e\r\n          }\r\n        }\r\n        requestNum--\r\n        //返回新的请求,舍弃之前的请求\r\n        const newRes = await request.request(res.config)\r\n        console.log(newRes);\r\n        return newRes\r\n      }\r\n      return res\r\n    } finally {\r\n      requestNum--\r\n      send()\r\n    }\r\n  },\r\n  err => {\r\n    /** 只有网络连接失败和取消请求（没有携带token）会走到这里 */\r\n    try {\r\n      if (axios.isCancel(err)) { //是被取消的请求\r\n        if (!storage.get('token')) { //因为没有token取消的，需要重新登陆\r\n          return {\r\n            ...err,\r\n            data: {\r\n              message: \"未登陆\",\r\n              error_code: ErrorCode.No_Token\r\n            }\r\n          }\r\n        }\r\n        return {\r\n          ...err,\r\n          data: {\r\n            message: '请求取消',\r\n            error_code: ErrorCode.Abort\r\n          }\r\n        }\r\n      }\r\n      /** 网络异常 */\r\n      return {\r\n        ...err,\r\n        data: {\r\n          message: \"网络异常\",\r\n          error_code: ErrorCode.Connect_Fail\r\n        }\r\n      }\r\n    } finally {\r\n      requestNum--\r\n      send()\r\n    }\r\n  }\r\n)\r\n\r\nrequest.interceptors.response.use(\r\n  res => {\r\n    if (res.data.error_code && res.data.error_code !== ErrorCode.Succes) {\r\n      throw {\r\n        message: res.data.message,\r\n        data: res.data\r\n      }\r\n    }\r\n    return res\r\n  }\r\n)\r\n\r\nasync function refreshToken() {\r\n  try {\r\n    isRefreshing = true\r\n    const refreshToken = storage.get('refreshToken')\r\n    const res = await request.post('/user/resetToken', {\r\n      refreshToken\r\n    }, {\r\n      headers: {\r\n        priority: 1 //刷新token是高权限请求可以不用阻塞直接插队\r\n      }\r\n    })\r\n    if (!res.data.data && !res.data.data.token && !res.data.data.refreshToken) {\r\n      console.log('refresh fail');\r\n      throw {\r\n        ...res,\r\n        data: {\r\n          error_code: ErrorCode.RefreshToken_Expire_Code\r\n        }\r\n      }\r\n    }\r\n    storage.set('token', res.data.data.token)\r\n    storage.set('refreshToken', res.data.data.refreshToken)\r\n  } catch (error) {  //如果refreshToken也过期, 清空过期期间的请求\r\n    pendingQueue = []\r\n    throw {\r\n      ...error,\r\n      data: {\r\n        error_code: ErrorCode.RefreshToken_Expire_Code\r\n      }\r\n    }\r\n  } finally {\r\n    isRefreshing = false\r\n    /** 这里也会发一个请求，因此请求数+1了，因此这个函数最后会让请求数-1 */\r\n    requestNum--\r\n    lastModified = now()\r\n  }\r\n}\r\n\r\n\r\nfunction block() {\r\n  return new Promise((resolve, reject) => {\r\n    const timerId: number = window.setTimeout(() => {\r\n      reject(undefined)\r\n    }, TIMEOUT)\r\n    pendingQueue.push(() => {\r\n      clearTimeout(timerId)\r\n      resolve(undefined)\r\n    })\r\n  })\r\n}\r\n\r\nfunction send() {\r\n  if (pendingQueue.length) {\r\n    const resolve = pendingQueue.shift()!\r\n    resolve(undefined)\r\n  }\r\n}\r\n\r\nexport default request",["167","168"],"D:\\PROJECT\\leetCode\\src\\utils\\shared.ts",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":6,"column":3,"nodeType":"175","messageId":"176","endLine":6,"endColumn":11},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"177","severity":1,"message":"178","line":49,"column":11,"nodeType":"179","endLine":49,"endColumn":44},{"ruleId":"177","severity":1,"message":"178","line":54,"column":11,"nodeType":"179","endLine":54,"endColumn":42},{"ruleId":"177","severity":1,"message":"180","line":59,"column":11,"nodeType":"179","endLine":59,"endColumn":80},{"ruleId":"177","severity":1,"message":"180","line":8,"column":23,"nodeType":"179","endLine":8,"endColumn":26},{"ruleId":"177","severity":1,"message":"180","line":45,"column":9,"nodeType":"179","endLine":45,"endColumn":12},{"ruleId":"173","severity":1,"message":"181","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":9},{"ruleId":"182","severity":1,"message":"183","line":8,"column":10,"nodeType":"175","messageId":"176","endLine":8,"endColumn":13},{"ruleId":"182","severity":1,"message":"184","line":1,"column":14,"nodeType":"175","messageId":"176","endLine":1,"endColumn":25},{"ruleId":"182","severity":1,"message":"185","line":1,"column":46,"nodeType":"175","messageId":"176","endLine":1,"endColumn":54},{"ruleId":"182","severity":1,"message":"186","line":30,"column":10,"nodeType":"175","messageId":"176","endLine":30,"endColumn":18},{"ruleId":"182","severity":1,"message":"187","line":30,"column":20,"nodeType":"175","messageId":"176","endLine":30,"endColumn":27},{"ruleId":"182","severity":1,"message":"188","line":33,"column":7,"nodeType":"175","messageId":"176","endLine":33,"endColumn":24},{"ruleId":"182","severity":1,"message":"185","line":1,"column":16,"nodeType":"175","messageId":"176","endLine":1,"endColumn":24},{"ruleId":"182","severity":1,"message":"189","line":1,"column":34,"nodeType":"175","messageId":"176","endLine":1,"endColumn":43},{"ruleId":"182","severity":1,"message":"190","line":8,"column":8,"nodeType":"175","messageId":"176","endLine":8,"endColumn":15},{"ruleId":"182","severity":1,"message":"191","line":4,"column":10,"nodeType":"175","messageId":"176","endLine":4,"endColumn":16},{"ruleId":"182","severity":1,"message":"192","line":6,"column":10,"nodeType":"175","messageId":"176","endLine":6,"endColumn":17},{"ruleId":"182","severity":1,"message":"193","line":41,"column":11,"nodeType":"175","messageId":"176","endLine":41,"endColumn":19},{"ruleId":"182","severity":1,"message":"194","line":41,"column":21,"nodeType":"175","messageId":"176","endLine":41,"endColumn":26},{"ruleId":"182","severity":1,"message":"195","line":41,"column":28,"nodeType":"175","messageId":"176","endLine":41,"endColumn":34},{"ruleId":"182","severity":1,"message":"196","line":41,"column":36,"nodeType":"175","messageId":"176","endLine":41,"endColumn":44},{"ruleId":"177","severity":1,"message":"180","line":100,"column":11,"nodeType":"179","endLine":100,"endColumn":14},{"ruleId":"197","severity":1,"message":"198","line":42,"column":7,"nodeType":"199","endLine":42,"endColumn":24,"suggestions":"200"},{"ruleId":"182","severity":1,"message":"201","line":5,"column":10,"nodeType":"175","messageId":"176","endLine":5,"endColumn":20},{"ruleId":"182","severity":1,"message":"202","line":21,"column":9,"nodeType":"175","messageId":"176","endLine":21,"endColumn":14},{"ruleId":"182","severity":1,"message":"203","line":22,"column":9,"nodeType":"175","messageId":"176","endLine":22,"endColumn":18},{"ruleId":"182","severity":1,"message":"204","line":11,"column":5,"nodeType":"175","messageId":"176","endLine":11,"endColumn":13},{"ruleId":"182","severity":1,"message":"205","line":12,"column":7,"nodeType":"175","messageId":"176","endLine":12,"endColumn":20},{"ruleId":"206","severity":1,"message":"207","line":155,"column":7,"nodeType":"208","messageId":"209","endLine":158,"endColumn":8},{"ruleId":"206","severity":1,"message":"207","line":177,"column":7,"nodeType":"208","messageId":"209","endLine":182,"endColumn":8},{"ruleId":"206","severity":1,"message":"207","line":188,"column":5,"nodeType":"208","messageId":"209","endLine":193,"endColumn":6},{"ruleId":"169","replacedBy":"210"},{"ruleId":"171","replacedBy":"211"},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'E' is defined but never used.","@typescript-eslint/no-unused-vars","'map' is defined but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'debounce' is defined but never used.","'storage' is defined but never used.","'Default_Java_Code' is assigned a value but never used.","'useEffect' is defined but never used.","'confirm' is assigned a value but never used.","'Action' is defined but never used.","'Actions' is defined but never used.","'fontSize' is assigned a value but never used.","'theme' is assigned a value but never used.","'indent' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useImperativeHandle has an unnecessary dependency: 'ref'. Either exclude it or remove the dependency array.","ArrayExpression",["214"],"'Main_Light' is defined but never used.","'_okFn' is assigned a value but never used.","'_cancelFn' is assigned a value but never used.","'retryNum' is assigned a value but never used.","'MAX_RETRY_NUM' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object",["212"],["213"],"no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},"Update the dependencies array to be: [setVisible]",{"range":"217","text":"218"},[1017,1034],"[setVisible]"]