[{"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\index.tsx":"1","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\reportWebVitals.ts":"2","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\index.ts":"3","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\App.tsx":"4","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\reducer.ts":"5","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\roootSaga.ts":"6","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\router\\index.tsx":"7","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\actionTypes.ts":"8","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\createSagaAction.ts":"9","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\utils\\isLogin.ts":"10","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\router\\config.ts":"11","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\apis\\index.ts":"12","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\Home.tsx":"13","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\topicdetail\\TopicDetail.tsx":"14","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\mycollect\\myCollect.tsx":"15","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\profile\\Profile.tsx":"16","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\edittheme\\editTheme.tsx":"17","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\createtheme\\createTheme.tsx":"18","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\message\\Message.tsx":"19","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\actionCreator.ts":"20","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\utils\\getTime.ts":"21","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\rightcomtent\\RightComtent.tsx":"22","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\components\\navigation\\Navigation.tsx":"23","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\topicdetail\\Header.tsx":"24","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\topicdetail\\replies\\Replies.tsx":"25","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\card\\Card.tsx":"26","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\rightcomtent\\BodyContent.tsx":"27","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\rightcomtent\\TopContent.tsx":"28"},{"size":595,"mtime":1609257505000,"results":"29","hashOfConfig":"30"},{"size":425,"mtime":1609257505000,"results":"31","hashOfConfig":"30"},{"size":344,"mtime":1609257505000,"results":"32","hashOfConfig":"30"},{"size":259,"mtime":1609257505000,"results":"33","hashOfConfig":"30"},{"size":1421,"mtime":1609257505000,"results":"34","hashOfConfig":"30"},{"size":674,"mtime":1609257505000,"results":"35","hashOfConfig":"30"},{"size":559,"mtime":1609257505000,"results":"36","hashOfConfig":"30"},{"size":1086,"mtime":1609257505000,"results":"37","hashOfConfig":"30"},{"size":2196,"mtime":1609257505000,"results":"38","hashOfConfig":"30"},{"size":179,"mtime":1609257505000,"results":"39","hashOfConfig":"30"},{"size":813,"mtime":1609257505000,"results":"40","hashOfConfig":"30"},{"size":1107,"mtime":1609257505000,"results":"41","hashOfConfig":"30"},{"size":1640,"mtime":1609257505000,"results":"42","hashOfConfig":"30"},{"size":2195,"mtime":1609257505000,"results":"43","hashOfConfig":"30"},{"size":2137,"mtime":1609257505000,"results":"44","hashOfConfig":"30"},{"size":5095,"mtime":1609257505000,"results":"45","hashOfConfig":"30"},{"size":4117,"mtime":1609257505000,"results":"46","hashOfConfig":"30"},{"size":3688,"mtime":1609257505000,"results":"47","hashOfConfig":"30"},{"size":3701,"mtime":1609257505000,"results":"48","hashOfConfig":"30"},{"size":1073,"mtime":1609257505000,"results":"49","hashOfConfig":"30"},{"size":927,"mtime":1609257505000,"results":"50","hashOfConfig":"30"},{"size":315,"mtime":1609257505000,"results":"51","hashOfConfig":"30"},{"size":2281,"mtime":1609257505000,"results":"52","hashOfConfig":"30"},{"size":3371,"mtime":1609257505000,"results":"53","hashOfConfig":"30"},{"size":4213,"mtime":1609257505000,"results":"54","hashOfConfig":"30"},{"size":2880,"mtime":1609257505000,"results":"55","hashOfConfig":"30"},{"size":2215,"mtime":1609257505000,"results":"56","hashOfConfig":"30"},{"size":1618,"mtime":1609257505000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1ni7ux5",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\index.tsx",[],["119","120"],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\reportWebVitals.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\index.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\App.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\reducer.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\roootSaga.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\router\\index.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\actionTypes.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\createSagaAction.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\utils\\isLogin.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\router\\config.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\apis\\index.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\Home.tsx",["121"],"import React, { useEffect, useState, memo } from \"react\";\nimport \"./home.scss\";\nimport { connect } from \"react-redux\";\nimport { AxiosResponse } from \"axios\";\nimport { getHomePageDate } from \"../../store/actionCreator\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport Card from \"./card/Card\";\nimport RightContent from \"./rightcomtent/RightComtent\";\ntype propsType = {\n  name?: string;\n  requestHomePageData: (params: requestParamsType) => void;\n  requestUserInfo: (params: requestParamsType) => void;\n  homeData: AxiosResponse;\n};\ntype requestParamsType = {\n  url: string;\n  type: string;\n  data: object;\n};\nconst Home: React.FC<propsType> = (props) => {\n  const [homeDataArr, setHomeDataArr] = useState<any | null>(null);\n  useEffect(() => {\n    props.requestHomePageData({\n      url: \"topics\",\n      type: \"GET\",\n      data: {\n        mdrender: false,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    setHomeDataArr(props.homeData ? props.homeData.data.data : null);\n  }, [props.homeData]);\n  return (\n    <div className=\"home\">\n      <Navigation />\n      <Card\n        cardDataArr={homeDataArr}\n        changeContent={props.requestHomePageData}\n      />\n      <RightContent />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    homeData: state.homePageDate,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    requestHomePageData(requestParams: requestParamsType): void {\n      const getHomePageDateAction = getHomePageDate(requestParams);\n      dispatch(getHomePageDateAction);\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(memo(Home));\n","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\topicdetail\\TopicDetail.tsx",["122"],"import React, { useEffect } from \"react\";\nimport \"./topicdetail.scss\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport { connect } from \"react-redux\";\nimport { getDetailPageDate } from \"../../store/actionCreator\";\nimport { Card } from \"antd\";\nimport Header from \"./Header\";\nimport Replies from \"./replies/Replies\";\nimport { accessToken } from \"../../store/actionTypes\";\ntype propsType = {\n  match: {\n    params: {\n      id: string;\n    };\n  };\n  dispatchDetailDataAction: (payload: object) => void;\n  detailData: any;\n};\n\nconst TopicDetail: React.FC<propsType> = (props: propsType) => {\n  const paramsStr=props.match.params.id\n  const [topicId,isEdit=false] =paramsStr.split('-')\n  useEffect(() => {\n    props.dispatchDetailDataAction({\n      url: `/topic/${topicId}`,\n      type: \"GET\",\n      data: {\n        accesstoken: accessToken,\n      },\n    });\n  },[props.match.params.id]);\n   \n  return (\n    <div className=\"topic-detail\">\n      <Navigation />\n      {props.detailData ? (\n        <>\n          <Header  isEdit={isEdit} titleData={props.detailData} />\n          <Card\n            title={\"\"}\n            bordered={false}\n            style={{ width: 1270, marginLeft: 70 }}\n          >\n            {props.detailData ? (\n              <div\n                className=\"center-card\"\n                dangerouslySetInnerHTML={{\n                  __html: props.detailData.data.data.content,\n                }}\n              ></div>\n            ) : (\n              \"\"\n            )}\n          </Card>\n          <Replies\n            repliesCount={props.detailData.data.data.reply_count}\n            repliesArr={props.detailData.data.data.replies}\n            topic_id={props.detailData.data.data.id}\n          />\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state: any) => {\n  return {\n    detailData: state.detailData,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    dispatchDetailDataAction(payload: object) {\n      const getDetailPageDateAction = getDetailPageDate(payload);\n      dispatch(getDetailPageDateAction);\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicDetail);\n","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\mycollect\\myCollect.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\profile\\Profile.tsx",["123"],"import React, { useEffect } from \"react\";\nimport \"./profile.scss\";\nimport { connect } from \"react-redux\";\nimport { AxiosResponse } from \"axios\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport { getUserInfo } from \"../../store/actionCreator\";\nimport RightContent from \"../home/rightcomtent/RightComtent\";\nimport ProfileImg from \"../../assets/imgs/profile.png\";\nimport getTime from \"../../utils/getTime\";\nimport { Card } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { getUserCollectTheme } from \"../../store/actionCreator\";\ntype paramsType = {\n  url: string;\n  type: string;\n  data: object;\n};\n\ntype propsType = {\n  userInfo: AxiosResponse;\n  dispatchUserInfo: (payload: paramsType) => void;\n  dispatchUserCollect: (payload: paramsType) => void;\n  collectTheme: AxiosResponse;\n};\n\nconst Profile: React.FC<propsType> = ({\n  userInfo = { data: { data: { githubUsername: \"zc\" } } },\n  dispatchUserInfo,\n  dispatchUserCollect,\n  collectTheme = { data: { success: false, data: [] } },\n}) => {\n  useEffect(() => {\n    dispatchUserInfo({\n      url: \"/user/wszcc\",\n      type: \"GET\",\n      data: {},\n    });\n    dispatchUserCollect({\n      url: \"/topic_collect/wszcc\",\n      type: \"GET\",\n      data: {},\n    });\n  }, [userInfo.data.data.githubUsername, collectTheme.data.success]);\n\n  return (\n    <div className=\"profile\">\n      <Navigation />\n      <RightContent />\n      {userInfo.data.data.githubUsername === \"wszcc\" ? (\n        <>\n          <Card\n            title=\"主页\"\n            bordered={false}\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\n          >\n            <p className=\"profile-img\">\n              <img src={ProfileImg} alt=\"\" />\n              <span>{userInfo.data.data.loginname}</span>\n            </p>\n            <Link to=\"/mycollect\">\n              <p>我的收藏 {collectTheme.data.data.length}</p>\n            </Link>\n            <p>{userInfo.data.data.score} 积分</p>\n            <p>注册时间 {getTime(userInfo.data.data.create_at)}</p>\n          </Card>\n          <Card\n            title=\"最近创建的话题\"\n            bordered={false}\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\n          >\n            {userInfo.data.data.recent_topics\n              ? userInfo.data.data.recent_topics.map((item: any) => (\n                  <li className=\"item\" key={item.id}>\n                    <div className=\"img\">\n                      <img src={item.author.avatar_url} alt=\"\" />\n                    </div>\n                    <span className=\"type\">\n                      {item.top ? (\n                        <span className=\"top\">置顶</span>\n                      ) : (\n                        <span className=\"share\">分享</span>\n                      )}\n                    </span>\n                    <Link to={`/topic/detail/${item.id}-${true}`}>\n                      <span className=\"context\">{item.title}</span>\n                    </Link>\n                    <div className=\"left-img\">\n                      <img src={item.author.avatar_url} alt=\"\" />\n                    </div>\n                    <span className=\"time\">{getTime(item.create_at)}</span>\n                  </li>\n                ))\n              : \"\"}\n          </Card>\n          <Card\n            title=\"最近参与的话题\"\n            bordered={false}\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\n          >\n            {userInfo.data.data.recent_replies\n              ? userInfo.data.data.recent_replies.map((item: any) => (\n                  <li className=\"item\" key={item.id}>\n                    <div className=\"img\">\n                      <img src={item.author.avatar_url} alt=\"\" />\n                    </div>\n                    <span className=\"type\">\n                      {item.top ? (\n                        <span className=\"top\">置顶</span>\n                      ) : (\n                        <span className=\"share\">分享</span>\n                      )}\n                    </span>\n                    <Link to={`/topic/detail/${item.id}`}>\n                      <span className=\"context\">{item.title}</span>\n                    </Link>\n                    <div className=\"left-img\">\n                      <img src={item.author.avatar_url} alt=\"\" />\n                    </div>\n                    <span className=\"time\">{getTime(item.last_reply_at)}</span>\n                  </li>\n                ))\n              : \"\"}\n          </Card>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state: any) => {\n  return {\n    userInfo: state.userInfo,\n    collectTheme: state.collectTheme,\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    dispatchUserInfo(payload: paramsType) {\n      const disUserInfoAction = getUserInfo(payload);\n      dispatch(disUserInfoAction);\n    },\n    dispatchUserCollect(payload: paramsType) {\n      const disUserCollectAction = getUserCollectTheme(payload);\n      dispatch(disUserCollectAction);\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\edittheme\\editTheme.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\createtheme\\createTheme.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\message\\Message.tsx",["124"],"import React, { useEffect } from \"react\";\nimport \"./message.scss\";\nimport Navigation from \"../../components/navigation/Navigation\";\nimport RightComtent from \"../home/rightcomtent/RightComtent\";\nimport { Card } from \"antd\";\nimport { getMessage } from \"../../store/actionCreator\";\nimport { connect } from \"react-redux\";\nimport { accessToken } from \"../../store/actionTypes\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport hasReadMessage from \"../../apis/index\";\n\ntype propsType = {\n  message: any;\n  dispatchReqMessage: (params: any) => void;\n};\n\nconst Message: React.FC<propsType & RouteComponentProps> = (props) => {\n  const { message = \"\", dispatchReqMessage } = props;\n  useEffect(() => {\n    dispatchReqMessage({\n      url: \"/messages\",\n      type: \"GET\",\n      data: {\n        accesstoken: accessToken,\n      },\n    });\n  }, []);\n  function handleHasRead(id: string) {\n    props.history.push(`/topic/detail/${id}-${true}`);\n  }\n  function handleHasNotRead(id: string, messageId: string) {\n    hasReadMessage({\n      url: `/message/mark_one/${messageId}`,\n      type: \"POST\",\n      data: {\n        accesstoken: accessToken,\n      },\n    });\n    props.history.push(`/topic/detail/${id}-${true}`);\n  }\n  return (\n    <div className=\"message\">\n      <Navigation />\n      <RightComtent />\n      {message ? (\n        <>\n          <Card\n            title={`新消息 ${message.data.data.hasnot_read_messages.length} 条`}\n            bordered={false}\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\n          >\n            {message.data.data.hasnot_read_messages.length\n              ? message.data.data.hasnot_read_messages.map(\n                  (item: any, index: number) => (\n                    <p key={index} className=\"item\">\n                      {item.author.loginname}\n                      &nbsp;&nbsp;回复了你的&nbsp;\n                      <span\n                        className=\"title\"\n                        onClick={() => {\n                          handleHasNotRead(item.topic.id, item.id);\n                        }}\n                      >\n                        {\" \"}\n                        {item.topic.title}\n                      </span>\n                    </p>\n                  )\n                )\n              : \"无消息\"}\n            {}\n          </Card>\n          <Card\n            title={`过往消息 ${message.data.data.has_read_messages.length} 条`}\n            bordered={false}\n            style={{ width: 1000, marginTop: 15, marginLeft: 70 }}\n          >\n            {message.data.data.has_read_messages.length\n              ? message.data.data.has_read_messages.map(\n                  (item: any, index: number) => (\n                    <p key={index} className=\"item\">\n                      {item.author.loginname}\n                      &nbsp;&nbsp;回复了你的&nbsp;\n                      <span\n                        className=\"title\"\n                        onClick={() => {\n                          handleHasRead(item.topic.id);\n                        }}\n                      >\n                        {\" \"}\n                        {item.topic.title}\n                      </span>\n                    </p>\n                  )\n                )\n              : \"无消息\"}\n          </Card>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst mapState = (state: any) => {\n  return {\n    message: state.message,\n  };\n};\n\nconst mapDispatch = (dispatch: any) => {\n  return {\n    dispatchReqMessage(params: any) {\n      const disMessageAction = getMessage(params);\n      dispatch(disMessageAction);\n    },\n  };\n};\n\nexport default connect(mapState, mapDispatch)(withRouter(Message));\n","D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\store\\actionCreator.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\utils\\getTime.ts",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\rightcomtent\\RightComtent.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\components\\navigation\\Navigation.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\topicdetail\\Header.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\topicdetail\\replies\\Replies.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\card\\Card.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\rightcomtent\\BodyContent.tsx",[],"D:\\FontEnd\\myDemos\\LeetCode\\leetcodeapp\\src\\pages\\home\\rightcomtent\\TopContent.tsx",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":30,"column":6,"nodeType":"131","endLine":30,"endColumn":8,"suggestions":"132"},{"ruleId":"129","severity":1,"message":"133","line":31,"column":5,"nodeType":"131","endLine":31,"endColumn":28,"suggestions":"134"},{"ruleId":"129","severity":1,"message":"135","line":43,"column":6,"nodeType":"131","endLine":43,"endColumn":68,"suggestions":"136"},{"ruleId":"129","severity":1,"message":"137","line":27,"column":6,"nodeType":"131","endLine":27,"endColumn":8,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["141"],"React Hook useEffect has missing dependencies: 'props' and 'topicId'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["142"],"React Hook useEffect has missing dependencies: 'dispatchUserCollect' and 'dispatchUserInfo'. Either include them or remove the dependency array. If 'dispatchUserInfo' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["143"],"React Hook useEffect has a missing dependency: 'dispatchReqMessage'. Either include it or remove the dependency array.",["144"],"no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [props]",{"range":"153","text":"154"},"Update the dependencies array to be: [props, props.match.params.id, topicId]",{"range":"155","text":"156"},"Update the dependencies array to be: [userInfo.data.data.githubUsername, collectTheme.data.success, dispatchUserInfo, dispatchUserCollect]",{"range":"157","text":"158"},"Update the dependencies array to be: [dispatchReqMessage]",{"range":"159","text":"160"},[899,901],"[props]",[881,904],"[props, props.match.params.id, topicId]",[1248,1310],"[userInfo.data.data.githubUsername, collectTheme.data.success, dispatchUserInfo, dispatchUserCollect]",[857,859],"[dispatchReqMessage]"]