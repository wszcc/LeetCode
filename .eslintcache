[{"D:\\FontEnd\\myDemos\\leetCode\\src\\index.tsx":"1","D:\\FontEnd\\myDemos\\leetCode\\src\\reportWebVitals.ts":"2","D:\\FontEnd\\myDemos\\leetCode\\src\\App.tsx":"3","D:\\FontEnd\\myDemos\\leetCode\\src\\router\\index.jsx":"4","D:\\FontEnd\\myDemos\\leetCode\\src\\router\\config.js":"5","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\Profile.js":"6","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\QuestionList.js":"7","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js":"8","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js":"9","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\Login.js":"10","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\index.js":"11","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\store\\index.js":"12","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js":"13","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js":"14","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\footer\\Footer.tsx":"15","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\index.jsx":"16","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\index.ts":"17","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdWindow\\resetPwdWindow.tsx":"18","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\WindowWarp\\windowWarp.tsx":"19","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\sagas\\sagaRoot.js":"20","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\reducers\\profile_reqHistory.js":"21","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\store\\reudcer\\list.js":"22","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js":"23","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js":"24","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\store\\index.ts":"25","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\store\\actions.ts":"26","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js":"27","D:\\FontEnd\\myDemos\\leetCode\\src\\apis\\comments.ts":"28","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Side\\index.jsx":"29","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Head\\index.jsx":"30","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\reducers\\index.ts":"31","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\redux_test.js":"32","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\sagas\\req_questionInfo.js":"33","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\sagas\\req_historySaga.js":"34","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Section\\index.jsx":"35","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdMain\\resetPwdMain.tsx":"36","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\components\\indexNav\\indexNav.jsx":"37","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\components\\list\\list.jsx":"38","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginWindow\\loginWindow.tsx":"39","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx":"40","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\epic.ts":"41","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\store\\action\\index.js":"42","D:\\FontEnd\\myDemos\\leetCode\\src\\mock\\questionIndex.js":"43","D:\\FontEnd\\myDemos\\leetCode\\src\\apis\\index.ts":"44","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\reducers\\loginMain.ts":"45","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdMain\\ResetForm\\resetForm.tsx":"46","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\index.tsx":"47","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\mock\\index.js":"48","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\index.ts":"49","D:\\FontEnd\\myDemos\\leetCode\\src\\apis\\solution.ts":"50","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts":"51","D:\\FontEnd\\myDemos\\leetCode\\src\\utils\\shared.ts":"52","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\actions\\loginMain.ts":"53","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Section\\QuestionInfo\\index.jsx":"54","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Section\\recordMonth\\index.jsx":"55","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Section\\InfoDisplay\\index.jsx":"56","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts":"57","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\actions\\proReqHistory_action.js":"58","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts":"59","D:\\FontEnd\\myDemos\\leetCode\\src\\config\\code.ts":"60","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Footer.tsx":"61","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Header.tsx":"62","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\SolutionList.tsx":"63","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\router\\config.js":"64","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\store\\reducer.ts":"65","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginFooter\\loginFooter.tsx":"66","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\loginMain.tsx":"67","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\components\\search\\index.jsx":"68","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\components\\randomStart\\index.jsx":"69","D:\\FontEnd\\myDemos\\leetCode\\src\\components\\likeBtn\\index.tsx":"70","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js":"71","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js":"72","D:\\FontEnd\\myDemos\\leetCode\\src\\components\\loading\\index.tsx":"73","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\PwdLoginForm\\pwdLoginForm.tsx":"74","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\USALoginForm\\usaLoginForm.tsx":"75","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\phoneLoginForm.tsx":"76","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\EmailRegisterForm\\emailRegisterForm.tsx":"77","D:\\FontEnd\\myDemos\\leetCode\\src\\apis\\share.ts":"78","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx":"79","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-right\\index.tsx":"80","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx":"81","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\PhoneInput\\phoneInput.tsx":"82","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\CaptchaInput\\captchaInput.tsx":"83","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx":"84","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx":"85","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\dif-tag\\DigTag.tsx":"86","D:\\FontEnd\\myDemos\\leetCode\\src\\utils\\hooks\\index.ts":"87","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\types\\index.ts":"88","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx":"89","D:\\FontEnd\\myDemos\\leetCode\\src\\config\\colors.ts":"90","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\mdEditor\\index.tsx":"91","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx":"92","D:\\FontEnd\\myDemos\\leetCode\\src\\components\\showModal\\index.tsx":"93"},{"size":405,"mtime":1613741113000,"results":"94","hashOfConfig":"95"},{"size":425,"mtime":1613741113000,"results":"96","hashOfConfig":"95"},{"size":252,"mtime":1613741113000,"results":"97","hashOfConfig":"95"},{"size":468,"mtime":1613741113000,"results":"98","hashOfConfig":"95"},{"size":642,"mtime":1614682655276,"results":"99","hashOfConfig":"95"},{"size":914,"mtime":1614603722030,"results":"100","hashOfConfig":"95"},{"size":308,"mtime":1615208366109,"results":"101","hashOfConfig":"95"},{"size":266,"mtime":1614683402122,"results":"102","hashOfConfig":"95"},{"size":429,"mtime":1614185345515,"results":"103","hashOfConfig":"95"},{"size":296,"mtime":1615043216989,"results":"104","hashOfConfig":"95"},{"size":354,"mtime":1614603722047,"results":"105","hashOfConfig":"95"},{"size":166,"mtime":1615208366117,"results":"106","hashOfConfig":"95"},{"size":352,"mtime":1613741113000,"results":"107","hashOfConfig":"95"},{"size":1742,"mtime":1613741113000,"results":"108","hashOfConfig":"95"},{"size":3407,"mtime":1615213851186,"results":"109","hashOfConfig":"95"},{"size":1095,"mtime":1615208366109,"results":"110","hashOfConfig":"95"},{"size":439,"mtime":1615043217001,"results":"111","hashOfConfig":"95"},{"size":351,"mtime":1614683402130,"results":"112","hashOfConfig":"95"},{"size":4607,"mtime":1615043217040,"results":"113","hashOfConfig":"95"},{"size":284,"mtime":1614603722050,"results":"114","hashOfConfig":"95"},{"size":369,"mtime":1614603722048,"results":"115","hashOfConfig":"95"},{"size":287,"mtime":1615208366117,"results":"116","hashOfConfig":"95"},{"size":600,"mtime":1614184059287,"results":"117","hashOfConfig":"95"},{"size":1535,"mtime":1615116344570,"results":"118","hashOfConfig":"95"},{"size":1022,"mtime":1614184059295,"results":"119","hashOfConfig":"95"},{"size":1300,"mtime":1614610539851,"results":"120","hashOfConfig":"95"},{"size":116,"mtime":1613741113000,"results":"121","hashOfConfig":"95"},{"size":1885,"mtime":1615213534325,"results":"122","hashOfConfig":"95"},{"size":2130,"mtime":1614603722045,"results":"123","hashOfConfig":"95"},{"size":821,"mtime":1614603722032,"results":"124","hashOfConfig":"95"},{"size":278,"mtime":1615043217002,"results":"125","hashOfConfig":"95"},{"size":92,"mtime":1614603722048,"results":"126","hashOfConfig":"95"},{"size":369,"mtime":1614603722050,"results":"127","hashOfConfig":"95"},{"size":374,"mtime":1614603722049,"results":"128","hashOfConfig":"95"},{"size":2156,"mtime":1615043217003,"results":"129","hashOfConfig":"95"},{"size":1429,"mtime":1614683402172,"results":"130","hashOfConfig":"95"},{"size":1720,"mtime":1615208366125,"results":"131","hashOfConfig":"95"},{"size":1247,"mtime":1615208366125,"results":"132","hashOfConfig":"95"},{"size":2225,"mtime":1615043216997,"results":"133","hashOfConfig":"95"},{"size":1049,"mtime":1613741113000,"results":"134","hashOfConfig":"95"},{"size":1277,"mtime":1614184059291,"results":"135","hashOfConfig":"95"},{"size":832,"mtime":1615208366117,"results":"136","hashOfConfig":"95"},{"size":2431,"mtime":1614603505210,"results":"137","hashOfConfig":"95"},{"size":4616,"mtime":1615212970759,"results":"138","hashOfConfig":"95"},{"size":1099,"mtime":1615043217002,"results":"139","hashOfConfig":"95"},{"size":5027,"mtime":1614683402127,"results":"140","hashOfConfig":"95"},{"size":657,"mtime":1614184059289,"results":"141","hashOfConfig":"95"},{"size":618,"mtime":1614682325182,"results":"142","hashOfConfig":"95"},{"size":2727,"mtime":1615043217009,"results":"143","hashOfConfig":"95"},{"size":1186,"mtime":1615043216987,"results":"144","hashOfConfig":"95"},{"size":341,"mtime":1614184059294,"results":"145","hashOfConfig":"95"},{"size":3988,"mtime":1615043217009,"results":"146","hashOfConfig":"95"},{"size":733,"mtime":1615043217000,"results":"147","hashOfConfig":"95"},{"size":1410,"mtime":1614603722035,"results":"148","hashOfConfig":"95"},{"size":1154,"mtime":1615043217003,"results":"149","hashOfConfig":"95"},{"size":4752,"mtime":1615043217003,"results":"150","hashOfConfig":"95"},{"size":1297,"mtime":1613741113000,"results":"151","hashOfConfig":"95"},{"size":149,"mtime":1614603722047,"results":"152","hashOfConfig":"95"},{"size":828,"mtime":1613741113000,"results":"153","hashOfConfig":"95"},{"size":85,"mtime":1613741113000,"results":"154","hashOfConfig":"95"},{"size":168,"mtime":1614184059288,"results":"155","hashOfConfig":"95"},{"size":168,"mtime":1614184059288,"results":"156","hashOfConfig":"95"},{"size":2198,"mtime":1615043217003,"results":"157","hashOfConfig":"95"},{"size":525,"mtime":1615208366109,"results":"158","hashOfConfig":"95"},{"size":1296,"mtime":1614610686110,"results":"159","hashOfConfig":"95"},{"size":2278,"mtime":1615043217050,"results":"160","hashOfConfig":"95"},{"size":6634,"mtime":1615043216996,"results":"161","hashOfConfig":"95"},{"size":262,"mtime":1615208366133,"results":"162","hashOfConfig":"95"},{"size":454,"mtime":1615208366117,"results":"163","hashOfConfig":"95"},{"size":1109,"mtime":1615043216988,"results":"164","hashOfConfig":"95"},{"size":1684,"mtime":1615213890016,"results":"165","hashOfConfig":"95"},{"size":3998,"mtime":1615213703834,"results":"166","hashOfConfig":"95"},{"size":632,"mtime":1615043216988,"results":"167","hashOfConfig":"95"},{"size":3081,"mtime":1615116344568,"results":"168","hashOfConfig":"95"},{"size":1887,"mtime":1615043216996,"results":"169","hashOfConfig":"95"},{"size":5199,"mtime":1615043216993,"results":"170","hashOfConfig":"95"},{"size":6834,"mtime":1615116344566,"results":"171","hashOfConfig":"95"},{"size":255,"mtime":1615043216987,"results":"172","hashOfConfig":"95"},{"size":291,"mtime":1614184059294,"results":"173","hashOfConfig":"95"},{"size":2079,"mtime":1615043217003,"results":"174","hashOfConfig":"95"},{"size":5216,"mtime":1615043217003,"results":"175","hashOfConfig":"95"},{"size":5016,"mtime":1615043217050,"results":"176","hashOfConfig":"95"},{"size":1884,"mtime":1615116344568,"results":"177","hashOfConfig":"95"},{"size":2774,"mtime":1614603722053,"results":"178","hashOfConfig":"95"},{"size":1683,"mtime":1614184059292,"results":"179","hashOfConfig":"95"},{"size":494,"mtime":1614048819709,"results":"180","hashOfConfig":"95"},{"size":5253,"mtime":1615116344571,"results":"181","hashOfConfig":"95"},{"size":841,"mtime":1615116344569,"results":"182","hashOfConfig":"95"},{"size":5095,"mtime":1615043217003,"results":"183","hashOfConfig":"95"},{"size":123,"mtime":1613741113000,"results":"184","hashOfConfig":"95"},{"size":2214,"mtime":1615043217003,"results":"185","hashOfConfig":"95"},{"size":3335,"mtime":1614184059293,"results":"186","hashOfConfig":"95"},{"size":1600,"mtime":1613741113000,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"yjoibg",{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"198"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"198"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"190"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"198"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"198"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"198"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"198"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"190"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"198"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"190"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"198"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"190"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"198"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"190"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"190"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"198"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"190"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"190"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"190"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"190"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"190"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"190"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"D:\\FontEnd\\myDemos\\leetCode\\src\\index.tsx",[],["399","400"],"D:\\FontEnd\\myDemos\\leetCode\\src\\reportWebVitals.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\App.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\router\\index.jsx",["401"],"import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport routerMap from \"./config\";\n\n\nconst RouterView = () => {\n  return (\n    <Router>\n      {/* <Redirect to=\"/home\"></Redirect> */}\n      <Switch>\n        {routerMap.map((item,index) => (\n          <Route key={index} path={item.path} component={item.component}></Route>\n        ))}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default RouterView;\n",["402","403"],"D:\\FontEnd\\myDemos\\leetCode\\src\\router\\config.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\Profile.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\QuestionList.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\Login.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\index.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\store\\index.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js",["404","405","406"],"import React from \"react\";\nimport Logo from \"../../../../assets/imgs/logo.svg\";\nimport \"./header.scss\";\nimport { Menu, Dropdown } from \"antd\";\nimport {Link} from 'react-router-dom'\nimport {\n  RightSquareOutlined,\n  BellOutlined,\n  UserOutlined,\n  DownOutlined\n} from \"@ant-design/icons\";\n\nfunction Header(props) {\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"0\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.alipay.com/\"\n        >\n          题目以中文显示\n        </a>\n      </Menu.Item>\n      <Menu.Item key=\"1\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.taobao.com/\"\n        >\n          题目以英文显示\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <div className=\"header\">\n      <ul className=\"header-nav\">\n        <li>\n          <img src={Logo} alt=\"力扣\"></img>\n        </li>\n        <li>学习</li>\n        <li>题库</li>\n        <li>讨论</li>\n        <li>竞赛</li>\n        <li>求职</li>\n        <li className=\"shop\">商店</li>\n        <li>\n          <a className=\"download\" href=\"#\">\n            下载 App\n          </a>\n        </li>\n        <li>\n          <a className=\"member\" href=\"#\">\n            Plus 会员\n          </a>\n        </li>\n        <Dropdown overlay={menu}>\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n            中 <DownOutlined />\n          </a>\n        </Dropdown>\n        <li>\n          <RightSquareOutlined />\n        </li>\n        <li>\n          <BellOutlined />\n        </li>\n        <li>\n          <Link to='/profile'><UserOutlined /></Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Header;\n","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\footer\\Footer.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\index.jsx",["407"],"import React, { useEffect } from 'react'\nimport Sider from './components/indexNav/indexNav'\nimport ListIndex from './components/list/list'\nimport '../questionlist/QuestionList.css'\nimport { useSelector } from 'react-redux'\nimport { useListData } from './store/action'\nimport RandomStart from '../questionlist/components/randomStart/index'\nimport './index.css'\n\n\nconst Index = (props) =>{\n    let {data,records,loading} = useSelector(state=>state.list)\n    let getData = useListData()\n    // let {scearch} = useLocation()\n    // let {difficulty,status} = qs.parse(search.substr(1))\n    useEffect(()=>{\n        getData()\n       },[])\n    \n    \n    return  <div className='login' id='indexWrap'>\n                <div id=\"button_start\">\n                    <RandomStart \n                        records={records}\n                    />\n                </div>\n                \n                <Sider />\n\n                <ListIndex\n                    records={records}\n                    data={data}\n                    loading={loading}\n                />\n            </div>\n}\n\nexport default Index","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\index.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdWindow\\resetPwdWindow.tsx",["408","409"],"import React, { createContext, useState } from \"react\"\r\nimport ResetPwdMain from '../ResetPwdMain/resetPwdMain'\r\nimport './index.scss'\r\n\r\n\r\n\r\nconst ResetPwdWindow: React.FC = () => {\r\n    return (\r\n        <div\r\n            className='resetpwd-window'\r\n        >\r\n            <ResetPwdMain />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPwdWindow","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\WindowWarp\\windowWarp.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\sagas\\sagaRoot.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\reducers\\profile_reqHistory.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\store\\reudcer\\list.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\store\\index.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\store\\actions.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js",["410"],"import { takeEvery } from \"redux-saga/effects\";\n\n\nfunction* watchFetchData() {\n  \n}\n\nexport default watchFetchData;\n","D:\\FontEnd\\myDemos\\leetCode\\src\\apis\\comments.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Side\\index.jsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Head\\index.jsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\reducers\\index.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\redux_test.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\sagas\\req_questionInfo.js",["411"],"import { call, put, takeEvery, } from 'redux-saga/effects'\r\n// import { reqQuestion } from '../../API/index'\r\nimport { GETQUESTION } from '../redux_test'\r\n\r\n\r\nfunction* reqQuestionInfo(action) {\r\n\r\n    yield put({ type: GETQUESTION })\r\n}\r\n\r\n\r\nfunction* watchreqQuestionInfo() {\r\n    yield takeEvery(\"getQues\", reqQuestionInfo);\r\n}\r\n\r\nexport default watchreqQuestionInfo","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\sagas\\req_historySaga.js",["412"],"import { call, put, takeLatest } from 'redux-saga/effects'\r\n// import { reqPersonal } from '../../API/index'\r\nimport { GETLISTOFTOPICS } from '../redux_test'\r\n\r\n\r\nfunction* reqHistoryData(action) {\r\n\r\n    yield put({ type: GETLISTOFTOPICS })\r\n}\r\n\r\n\r\nfunction* watchReqHistoryData() {\r\n    yield takeLatest(\"getList\", reqHistoryData);\r\n}\r\n\r\nexport default watchReqHistoryData","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Section\\index.jsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdMain\\resetPwdMain.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\components\\indexNav\\indexNav.jsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\components\\list\\list.jsx",["413"],"import React from 'react'\nimport '../../mock/index'\nimport {List} from 'antd'\nimport \"../list/list.css\"\nimport {Link} from 'react-router-dom'\n\nconst onShowSizeChange= (current, pageSize) =>{\n  console.log(current, pageSize);\n}\n\n\nconst ListIndex = (props)=>{\n\n    let {records,data,loading} =props\n      return <List id=\"list\"\n        dataSource = {records}\n        loading={loading}\n        pagination={{\n          onShowSizeChange:{onShowSizeChange},\n          defaultCurrent:1,\n          total:100\n        }}\n        renderItem = {(records)=>{\n        \n          return <List.Item>\n              <div id=\"item_message\">\n                <div id=\"data_title\"><Link to= {`/questionindex/${records.questionId}` }>{records.title}</Link></div>\n                \n                <div id=\"data_message\">\n                    <div id=\"data_answer_num\">{records.answerNum}</div>\n\n                    <div id=\"data_passrate\">{records.passRate}</div>\n\n                    <div id=\"data_difficulty\">{records.difficulty}</div>\n\n                    <div id=\"data_status\">hello</div> \n                </div>\n                \n              </div>\n            \n          </List.Item>\n         \n         \n          \n        }}\n      />\n}\n\nexport default ListIndex;\n\n","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginWindow\\loginWindow.tsx",["414"],"import React, { CSSProperties, useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoginFooter from '../LoginFooter/loginFooter'\r\nimport LoginMain from '../LoginMain/loginMain'\r\nimport { FormTypes } from '../../store/reducers/loginMain';\r\nimport { IRootState } from '../../store/reducers';\r\nimport './style.scss';\r\n\r\n\r\ninterface IMapState {\r\n    formType: FormTypes\r\n}\r\n\r\ninterface IBaseProps extends IMapState {\r\n    children?: React.ReactNode\r\n    style?: CSSProperties\r\n}\r\n\r\n\r\nconst LoginWindow: React.FC<IBaseProps> = (props) => {\r\n\r\n    const {formType} = props;\r\n\r\n    const phoneLoginStyle: CSSProperties = {\r\n        minHeight: '514px',\r\n        top: '50%'\r\n    };\r\n\r\n    const pwdLoginStyle: CSSProperties = {\r\n        minHeight: '462px', \r\n        top: '54%'\r\n    };\r\n\r\n    const usaLoginStyle: CSSProperties = {\r\n        minHeight: '384px',\r\n        top: '60%'\r\n    }\r\n\r\n    const emailRegisterStyle: CSSProperties = {\r\n        minHeight: '514px',\r\n        top: '50%'\r\n    }\r\n\r\n    const [windowStyle, setWindowStyle] = useState(phoneLoginStyle);\r\n\r\n    const getLoginWindowStyle = (): CSSProperties => {\r\n        switch(formType) {\r\n            case FormTypes.EmailRegisterForm:\r\n                return emailRegisterStyle;\r\n\r\n            case FormTypes.PhoneLoginForm:\r\n                return phoneLoginStyle;\r\n\r\n            case FormTypes.USALoginForm:\r\n                return usaLoginStyle;\r\n\r\n            case FormTypes.PwdLoginForm: \r\n                return pwdLoginStyle;\r\n            default:\r\n                return phoneLoginStyle;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setWindowStyle(getLoginWindowStyle());\r\n    }, [formType]);\r\n    \r\n    return (\r\n        <div \r\n            className='login-window' \r\n            style={windowStyle}>\r\n            <LoginMain />\r\n            {/* 只要是 USALoginForm 则把 Footer 隐藏起来 */}\r\n            <LoginFooter style={{\r\n                display: formType === FormTypes.USALoginForm ? 'none' : 'block'\r\n            }}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: IRootState): IMapState => ({\r\n    formType: state.loginMain.form\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(LoginWindow);","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\epic.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\store\\action\\index.js",["415"],"\nimport { useDispatch } from 'react-redux'\nimport {storage} from '../../../../utils/shared'\nimport request from '../../../../apis';\n\n//获取主题列表数据\nfunction useListData(){\n    let dispatch = useDispatch();\n    const token = storage.get('token')\n    // console.log(token)\n    dispatch({\n        type:\"list_loading\",\n        data:{},\n        records:{},\n        loading:true\n    })\n    return function(){\n        let params = {}\n        request.post('question/question/all', params)\n        \n        .then(value=>{\n            dispatch({\n                type:\"list_loadover\",\n                data:value.data,\n                records:value.data.records,\n                loading:false\n            })\n        })\n        \n        .catch(err=>{\n            console.log(err);\n        }) \n    }\n}\n       \n\n\nexport {useListData}\n\n","D:\\FontEnd\\myDemos\\leetCode\\src\\mock\\questionIndex.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\apis\\index.ts",["416"],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\reducers\\loginMain.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\resetpassword\\pages\\validation\\components\\ResetPwdMain\\ResetForm\\resetForm.tsx",["417"],"import React from 'react';\r\nimport ProForm, { ProFormText, ProFormCaptcha } from '@ant-design/pro-form';\r\nimport { Button, notification, message } from 'antd';\r\nimport { SmileOutlined } from '@ant-design/icons';\r\n\r\nexport enum ResetFormType {\r\n    ByPhoneReset = 'byPhoneReset',\r\n    ByEmailReset = 'byEmailReset'\r\n}\r\n\r\n\r\n\r\ninterface OtherProps {\r\n    style?: {[key: string]: string};\r\n    [key: string]: any;\r\n}\r\n\r\ninterface BaseResetFormProps extends OtherProps{\r\n    type: ResetFormType;\r\n}\r\n\r\nconst ResetForm: React.FC<BaseResetFormProps > = (props) => {\r\n\r\n    const {\r\n        type,\r\n        style\r\n    } = props;\r\n\r\n\r\n    const waitTime = (time: number = 100) => {\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, time);\r\n        });\r\n    };\r\n\r\n\r\n    const openNotification = () => {\r\n        notification.open({\r\n            message: 'Notification Title',\r\n            description:\r\n                '我们已经给您发送了一封电子邮件，请稍等片刻。如果过了10分钟后还未收到，请及时联系我们。',\r\n            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\r\n            duration: 5,\r\n            placement: 'topLeft'\r\n        });\r\n    };\r\n\r\n    \r\n    if (type === ResetFormType.ByPhoneReset) {\r\n        return (\r\n            <ProForm\r\n                style={style}\r\n                onFinish={async () => {\r\n                    await waitTime(2000);\r\n\r\n\r\n                    // message.success('');\r\n                }}\r\n                submitter={{\r\n                    searchConfig: {\r\n                        submitText: '重设我的密码',\r\n                    },\r\n                    render: (_, dom) => dom.pop(),\r\n                    submitButtonProps: {\r\n                        size: 'large',\r\n                        style: {\r\n                            width: '100%',\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                <ProFormText\r\n                    fieldProps={{\r\n                        size: 'large',\r\n                        // prefix: <MobileOutlined />,\r\n                    }}\r\n                    name=\"phone\"\r\n                    placeholder=\"手机号\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入手机号!',\r\n                        },\r\n                        {\r\n                            pattern: /^1\\d{10}$/,\r\n                            message: '不合法的手机号格式!',\r\n                        },\r\n                    ]}\r\n                />\r\n                <ProFormCaptcha\r\n                    fieldProps={{\r\n                        size: 'large',\r\n                        // prefix: <MailOutlined />,\r\n                    }}\r\n                    captchaProps={{\r\n                        size: 'large',\r\n                    }}\r\n                    phoneName=\"phone\"\r\n                    name=\"captcha\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入验证码',\r\n                        },\r\n                    ]}\r\n                    placeholder=\"验证码\"\r\n                    onGetCaptcha={async (phone) => {\r\n                        await waitTime(1000);\r\n                        message.success(`手机号 ${phone} 验证码发送成功!`);\r\n                    }}\r\n                />\r\n            </ProForm>\r\n        );\r\n    } else {\r\n        return (\r\n            <ProForm\r\n                style={style}\r\n                onFinish={async () => {\r\n                    await waitTime(2000);\r\n                    openNotification();\r\n                }}\r\n                submitter={{\r\n                    searchConfig: {\r\n                        submitText: '重设我的密码',\r\n                    },\r\n                    render: (_, dom) => dom.pop(),\r\n                    submitButtonProps: {\r\n                        size: 'large',\r\n                        style: {\r\n                            width: '100%',\r\n                        },\r\n                    },\r\n                }}\r\n            >\r\n                <ProFormText\r\n                    fieldProps={{\r\n                        size: 'large',\r\n                        // prefix: <MobileOutlined />,\r\n                    }}\r\n                    name=\"phone\"\r\n                    placeholder=\"请输入邮箱\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '请输入邮箱!',\r\n                        },\r\n                        {\r\n                            pattern: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/,\r\n                            message: '不合法的邮箱格式!',\r\n                        },\r\n                    ]}\r\n                />\r\n\r\n            </ProForm>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ResetForm;","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\index.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\mock\\index.js",["418"],"import Mock from 'mockjs'\nimport data from '../store'\n\nconst Random = Mock.Random\nconst dataList = []\nfor(let i = 10;i<100;i++){\n    const template ={\n        \"code\":1,\n        \"title\":Random.string(12,30),\n        \"questionId\":Random.string(11),\n        \"answer_num\":Random.integer(200,1000),\n        \"difficulty\":\"简单\",\n        \"passrate\":Random.integer(0,100)+'%',\n        \"status\":\"未完成\"\n    }\n    dataList.push(template)\n}\n\nMock.mock('/question/list','get',function() {\n    return Mock.mock({\n            \"code\": 1,\n            \"data\": dataList,\n            \"message\": \"请求成功！\"\n          })\n})\n\n\n","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\store\\index.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\apis\\solution.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts",["419","420","421"],"import { createStore, combineReducers } from 'redux'\r\nimport reducer, { initState } from './reducer'\r\nimport { produce } from 'immer'\r\n\r\ntype MappedReducer<T extends { [k: string]: (...args: any) => any }> = {\r\n  [K in keyof T]: ReturnType<T[K]>\r\n}\r\n\r\nconst editorConfigReducer = produce(reducer, initState)\r\n\r\nexport { editorConfigReducer }","D:\\FontEnd\\myDemos\\leetCode\\src\\utils\\shared.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\store\\actions\\loginMain.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Section\\QuestionInfo\\index.jsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Section\\recordMonth\\index.jsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\components\\Section\\InfoDisplay\\index.jsx",["422"],"import React,{useEffect} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Tabs} from 'antd'\r\nimport {proReqHistory} from '../../../store/actions/proReqHistory_action'\r\nimport './index.scss'\r\nimport urlRecord from '../images/record.png'\r\nimport urlDiscuss from '../images/discuss.png'\r\nimport urlFollow from '../images/follow.png'\r\nimport urlDynamic from '../images/dynamic.png'\r\n\r\nconst { TabPane } = Tabs\r\n\r\n\r\n\r\nconst InfoDisply = (props) => {\r\n    // 模拟数据\r\n    var Mock = require('mockjs')\r\n    var list = Mock.mock({\r\n        // 属性 list 的值是一个数组，其中含有 1 到 10 个元素\r\n        'code': 200,\r\n        'message':\"ok\",\r\n        'data|15': [{\r\n            \"questionNum|1-1900\": 1,\r\n            'questionId|14332-682222': 1,\r\n            'title|1': [\"两数之和\", \"编辑距离\", \"三数之和\"],\r\n            'isPassed|1': [true, false]\r\n        }]\r\n    })\r\n\r\n    useEffect(() => {\r\n    })\r\n    function reqRecord(e) {\r\n        if(e == '1') {\r\n            props.getHistoryData()  \r\n        }\r\n    }\r\n    return (\r\n        <div className=\"pro-show-history\">\r\n                <div className=\"pro-card-container\">\r\n                    <Tabs type=\"card\" onTabClick={reqRecord}>\r\n                        <TabPane tab={<span>\r\n                            <img src={urlRecord} alt=\"\"/>\r\n                            <span>  提交记录</span>\r\n                        </span> } key=\"1\" >\r\n                            {list.data.map(value => {\r\n                                return (\r\n                                    <div className=\"pro-show\" key={value.questionId}>\r\n                                        <div className=\"left\">\r\n                                            <span>我在题目</span>\r\n                                            <Link className=\"same tixing\" to=\"/questionindex/:id\">{value.questionNum}.{value.title}</Link>\r\n                                            <span className=\"same\">中使用</span>\r\n                                            <span className=\"same\">java</span>\r\n                                            <span className=\"same\">进行了提交</span>\r\n                                        </div>\r\n                                        {\r\n                                            value.isPassed ?\r\n                                            <div className=\"right\">\r\n                                                <span className=\"pro-pass\">通过</span>\r\n                                                <span>2 天前</span>\r\n                                            </div>:\r\n                                            <div className=\"right\">\r\n                                                <span className=\"pro-error\">编译出错</span>\r\n                                                <span>2 天前</span>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                            <div className=\"pro-load\">\r\n                                <div className=\"pro-loadingmore\">加载更多...</div>\r\n                            </div>\r\n                        </TabPane>\r\n                        <TabPane tab={<span>\r\n                            <img src={urlDiscuss} alt=\"\"/>\r\n                            <span>  讨论发布</span>\r\n                        </span>} key=\"2\">\r\n                            <p>Content of Tab Pane 2</p>\r\n                            <p>Content of Tab Pane 2</p>\r\n                            <p>Content of Tab Pane 2</p>\r\n                        </TabPane>\r\n                        <TabPane tab={<span>\r\n                            <img src={urlDynamic} alt=\"\"/>\r\n                            <span>  我的动态</span>\r\n                        </span>} key=\"3\">\r\n                            <p>Content of Tab Pane 3</p>\r\n                            <p>Content of Tab Pane 3</p>\r\n                            <p>Content of Tab Pane 3</p>\r\n                        </TabPane>\r\n                        <TabPane tab={<span>\r\n                            <img src={urlFollow} alt=\"\" className=\"pro-img\"/>\r\n                            <span>  我的关注</span>\r\n                        </span>} key=\"4\">\r\n                            <p>Content of Tab Pane 3</p>\r\n                            <p>Content of Tab Pane 3</p>\r\n                            <p>Content of Tab Pane 3</p>\r\n                        </TabPane>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    state => ({list:state}),\r\n    {\r\n        getHistoryData: proReqHistory\r\n    }\r\n)(InfoDisply)","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\profile\\store\\actions\\proReqHistory_action.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\config\\code.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Footer.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\Header.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-left\\SolutionList.tsx",["423"],"import { FC } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dispatch } from \"redux\";\r\nimport { SolutionList as List } from \"../../../../../../apis/solution\";\r\nimport { RootState } from \"../../../../store\";\r\nimport { EyeOutlined } from \"@ant-design/icons\";\r\nimport { dispatchShowDetail, switchId } from \"../store\";\r\nimport Loading from \"../../../../../../components/loading\";\r\nimport LikeBtn from \"../../../../../../components/likeBtn\";\r\n\r\ninterface Props {\r\n  solutionList: readonly List[];\r\n  dispatch: Dispatch;\r\n  initial: boolean;\r\n}\r\n\r\nconst SolutionList: FC<Props> = ({ solutionList, dispatch, initial }) => {\r\n  const showDetail = (id: number) => {\r\n    dispatch(switchId(id));\r\n    dispatch(dispatchShowDetail(true));\r\n  };\r\n  return (\r\n    <ul className=\"solution-list\">\r\n      {initial ? (\r\n        solutionList.map((item) => (\r\n          <Item {...item} key={item.answerId} onClick={showDetail} />\r\n        ))\r\n      ) : (\r\n        <div className=\"flex j-center a-center\">\r\n          <Loading size=\"large\" />\r\n        </div>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst Item: FC<{\r\n  avatar: string | null;\r\n  userName: string;\r\n  title: string;\r\n  summary: string;\r\n  thumbup: number;\r\n  view: string;\r\n  answerId: string;\r\n  islike: number;\r\n  onClick: (id: number) => void;\r\n}> = (item) => {\r\n  const clickLikeBtn = () => {};\r\n\r\n  return (\r\n    <li className=\"item\" onClick={item.onClick.bind(null, +item.answerId)}>\r\n      <div className=\"item-header flex a-center\">\r\n        <img className=\"avatar\" src={item.avatar!} alt={item.userName} />\r\n        <span>{item.title}</span>\r\n      </div>\r\n      <div className=\"item-content\">{item.summary}</div>\r\n      <div className=\"item-footer flex a-center\">\r\n        <div className=\"flex a-center ic\">\r\n          <LikeBtn islike={item.islike} target=\"answer\" targetId={item.answerId} />\r\n          {item.thumbup}\r\n        </div>\r\n        <div className=\"flex a-center ic\">\r\n          <EyeOutlined />\r\n          {item.view}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect((state: RootState) => ({\r\n  solutionList: state.solution.solutionList,\r\n  initial: state.solution.initial,\r\n}))(SolutionList);\r\n","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\router\\config.js",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\store\\reducer.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginFooter\\loginFooter.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\loginMain.tsx",["424","425","426"],"import React, { useRef, useState } from 'react';\r\nimport {Dispatch} from 'redux'\r\nimport {connect} from 'react-redux'\r\nimport { Card, Button } from 'antd';\r\nimport { CaretRightOutlined, RightOutlined } from '@ant-design/icons'\r\nimport {useHistory} from 'react-router-dom'\r\nimport PhoneLoginForm from './PhoneLoginForm/phoneLoginForm'\r\nimport PwdLoginForm from './PwdLoginForm/pwdLoginForm'\r\nimport USALoginForm from './USALoginForm/usaLoginForm';\r\nimport {FormTypes} from '../../store/reducers/loginMain'\r\nimport {IRootState} from '../../store/reducers/index'\r\nimport { toEmailRegisterForm, toPhoneLoginForm, toPwdLoginForm, toResetPwdForm, ToUSALoginForm } from '../../store/actions/loginMain';\r\nimport './style.scss'\r\nimport EmailRegisterForm from './EmailRegisterForm/emailRegisterForm';\r\n\r\nenum CardTitle {\r\n    Welcome = '欢迎使用力扣',\r\n    PwdLogin = '账号密码登录',\r\n    EmailRegister = '邮箱注册',\r\n    USAccountLogin = '美国站账号登录'\r\n}\r\n\r\nenum LinkBtnName {\r\n    PwdLogin = '账号密码登录',\r\n    CaptchaLogin = '验证码登录',\r\n    EmailRegister = '邮箱注册',\r\n    ForgetPwd = '忘记密码',\r\n    HasUSAccount = '已有美国站账号',\r\n    BackCH = '返回中文站账号登录'\r\n}\r\n\r\n\r\n\r\ninterface IMapState {\r\n    formType?: FormTypes\r\n}\r\n\r\ninterface IMapDispatch {\r\n    toPwdLoginForm: () => void;\r\n    toPhoneLoginForm: () => void;\r\n    toEmailRegisterForm: () => void;\r\n    toResetPwdForm: () => void;\r\n    toUSALoginForm: () => void;\r\n}\r\n\r\ninterface IBaseProps extends IMapState, IMapDispatch {\r\n    children?: React.ReactNode\r\n}\r\n\r\n\r\nconst LoginMain: React.FC<IBaseProps> = (props) => {\r\n\r\n\r\n    // state\r\n    const {formType} = props;\r\n\r\n    // dispatch\r\n    const {\r\n        toEmailRegisterForm,\r\n        toPhoneLoginForm,\r\n        toPwdLoginForm,\r\n        toResetPwdForm,\r\n        toUSALoginForm\r\n    } = props;\r\n\r\n    const betweenLinkBtnStyle = {\r\n        display: formType === FormTypes.EmailRegisterForm ? 'none' :\r\n                 formType === FormTypes.USALoginForm ? 'none' : 'block'\r\n    }\r\n\r\n    const centerLinkBtnStyle = {\r\n        display: formType === FormTypes.PhoneLoginForm ? 'flex' :\r\n                 formType === FormTypes.EmailRegisterForm ? 'flex' :\r\n                 formType === FormTypes.USALoginForm ? 'flex' : 'none'\r\n    }\r\n\r\n    let history = useHistory();\r\n\r\n    const leftConvert = () => {\r\n        if (formType === FormTypes.PhoneLoginForm ) {\r\n            toPwdLoginForm();\r\n        } else {\r\n            toPhoneLoginForm();\r\n        }\r\n    }\r\n\r\n    const rightConvert = () => {\r\n        if (formType === FormTypes.PwdLoginForm) {\r\n            toPhoneLoginForm();\r\n            history.push('/resetpassword');\r\n        } else {\r\n            toEmailRegisterForm();\r\n        }\r\n    }\r\n\r\n    const centerConvert = () => {\r\n        switch(formType) {\r\n            case FormTypes.PhoneLoginForm: \r\n                toUSALoginForm();\r\n                break;\r\n            case FormTypes.USALoginForm:\r\n                toPhoneLoginForm();\r\n                break;\r\n            case FormTypes.EmailRegisterForm:\r\n                toPhoneLoginForm();\r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card \r\n            className='login-window-main'\r\n            title={\r\n                formType === FormTypes.PhoneLoginForm ? CardTitle.Welcome :\r\n                formType === FormTypes.PwdLoginForm ? CardTitle.PwdLogin : \r\n                formType === FormTypes.EmailRegisterForm ? CardTitle.EmailRegister :\r\n                CardTitle.USAccountLogin \r\n            }\r\n            bordered={false}\r\n        >\r\n\r\n            <PhoneLoginForm  style={{display: formType === FormTypes.PhoneLoginForm ? 'block' : 'none'}} />\r\n            <PwdLoginForm style={{display: formType === FormTypes.PwdLoginForm ? 'block' : 'none'}} />\r\n            <EmailRegisterForm style={{display: formType === FormTypes.EmailRegisterForm ? 'block' : 'none'}} />\r\n            <USALoginForm style={{display: formType === FormTypes.USALoginForm ? 'block' : 'none'}} />\r\n\r\n          <div className='link-button-warp'>\r\n                <Button \r\n                    className='link-button' \r\n                    type='link' \r\n                    onClick={leftConvert}\r\n                    style={betweenLinkBtnStyle}\r\n                >\r\n                    {\r\n                        formType === FormTypes.PhoneLoginForm ? LinkBtnName.PwdLogin :\r\n                        LinkBtnName.CaptchaLogin\r\n                    }\r\n                </Button>\r\n\r\n\r\n                <Button \r\n                    className='link-button' \r\n                    type='link' \r\n                    onClick={rightConvert}\r\n                    style={betweenLinkBtnStyle}\r\n                >\r\n                    {\r\n                        formType === FormTypes.PhoneLoginForm ? LinkBtnName.EmailRegister : \r\n                        LinkBtnName.ForgetPwd\r\n                    }\r\n                </Button>\r\n            </div>\r\n\r\n            <div className='us-username' style={centerLinkBtnStyle}>\r\n                <Button className='link-button' type='link' onClick={centerConvert}>\r\n                    {\r\n                        formType === FormTypes.PhoneLoginForm ? LinkBtnName.HasUSAccount : \r\n                        formType === FormTypes.USALoginForm ? LinkBtnName.BackCH :\r\n                        LinkBtnName.CaptchaLogin\r\n                    }\r\n                    <CaretRightOutlined \r\n                        style={{ \r\n                            fontSize: '12px', marginLeft: '2px',\r\n                            display: formType === FormTypes.PhoneLoginForm ? 'inline' : 'none'\r\n                        }}     \r\n                    />\r\n                    <RightOutlined \r\n                        style={{ \r\n                            fontSize: '10px', marginLeft: '2px',\r\n                            display: formType === FormTypes.USALoginForm ? 'inline' : 'none' \r\n                        }} \r\n                    />\r\n                </Button>\r\n            </div>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: IRootState): IMapState => ({\r\n    formType: state.loginMain.form\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IMapDispatch => ({\r\n    toEmailRegisterForm: () => void dispatch(toEmailRegisterForm()),\r\n    toPhoneLoginForm: () => void dispatch(toPhoneLoginForm()),\r\n    toPwdLoginForm: () => void dispatch(toPwdLoginForm()),\r\n    toResetPwdForm: () => void dispatch(toResetPwdForm()),\r\n    toUSALoginForm: () => void dispatch(ToUSALoginForm())\r\n    \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginMain);","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\components\\search\\index.jsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionlist\\components\\randomStart\\index.jsx",["427"],"import React from 'react'\nimport { Button,Card } from \"antd\";\nimport {Link} from 'react-router-dom'\n\nconst RandomStart = (props) =>{\n    // let data = props.records\n    // let randomItem = data[Math.floor(Math.random() * data.length)]\n\n    return  (<div id=\"button_wrap\">\n        \n        <Button><Link>随机开始</Link></Button>\n        {/* //  to={`/questionindex/${randomItem.questionId}` */}\n    </div>\n        \n    )\n}\n\nexport default RandomStart;","D:\\FontEnd\\myDemos\\leetCode\\src\\components\\likeBtn\\index.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js",["428","429"],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js",["430"],"D:\\FontEnd\\myDemos\\leetCode\\src\\components\\loading\\index.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\PwdLoginForm\\pwdLoginForm.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\USALoginForm\\usaLoginForm.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\phoneLoginForm.tsx",["431"],"import { Form, Button, message } from 'antd';\r\nimport React, { CSSProperties, useEffect, useState } from 'react';\r\nimport PhoneInput, { IPhoneNumber } from './PhoneInput/phoneInput'\r\nimport CaptchaInput, { ICaptcha } from './CaptchaInput/captchaInput'\r\nimport './style.scss'\r\n\r\n\r\ninterface IBaseProps {\r\n    children?: React.ReactNode;\r\n    style?: CSSProperties;\r\n}\r\n\r\n\r\ninterface IFormValues {\r\n    captcha: ICaptcha;\r\n    phone: IPhoneNumber;\r\n}\r\n\r\n\r\nenum ItemHelpTypes {\r\n    EmptyPhone = '请输入手机号',\r\n    InvalidPhone = '请输入正确的手机号',\r\n    EmptyCaptcha = '请输入验证码',\r\n    NoneHelp = ''\r\n}\r\nexport interface IValidator {\r\n    validateStatus: 'success' | 'warning' | 'error' | 'validating';\r\n    help: ItemHelpTypes\r\n}\r\n\r\n\r\nconst PhoneLoginForm: React.FC<IBaseProps> = (props) => {\r\n\r\n    const [form] = Form.useForm();\r\n    const initalFormValues: IFormValues = {\r\n        phone: {\r\n            select: '+86',\r\n            number: ''\r\n        },\r\n        captcha: {\r\n            number: ''\r\n        }\r\n    };\r\n\r\n    const initValidator: IValidator = {\r\n        validateStatus: 'success',\r\n        help: ItemHelpTypes.NoneHelp\r\n    }\r\n\r\n    const [isPhoneInputOnBlur, setPhoneIsInputOnBlur] = useState(false);\r\n    const [isCaptchaInputOnBlur, setIsCaptchaInputOnBlur] = useState(false);\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [isPhoneValid, setIsPhoneValid] = useState(false);\r\n    const [captcha, setCaptcha] = useState('');\r\n    const [phoneValidator, setPhoneValidator] = useState<IValidator>(initValidator);\r\n    const [captchaValidator, setCaptchaValidator] = useState<IValidator>(initValidator);\r\n\r\n\r\n    // 将表单填入的信息提交\r\n    const onFinish = (values: IFormValues) => {\r\n        const { captcha: { number: captcha }, phone: { number: phone } } = values;\r\n\r\n        if (captcha === '') {\r\n            setCaptchaValidator({ validateStatus: 'error', help: ItemHelpTypes.EmptyCaptcha });\r\n        }\r\n\r\n        if (phone === '') {\r\n            setPhoneValidator({ validateStatus: 'error', help: ItemHelpTypes.EmptyPhone})\r\n        }\r\n\r\n        // message.error('验证码错误，请重新验证');\r\n        // console.log(values);\r\n\r\n\r\n    }\r\n\r\n\r\n    const onValuesChange = (values: IFormValues) => {\r\n        const phoneObj = values.phone;\r\n        const captchaObj = values.captcha;\r\n        if (phoneObj) {\r\n            const number = phoneObj.number as string;\r\n            const reg = /^1\\d{10}$/;\r\n            setIsPhoneValid(reg.test(number));\r\n            \r\n            setPhoneNumber(number);\r\n        } else if (captchaObj) {\r\n            const captcha = captchaObj.number as string;\r\n            setCaptcha(captcha);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setPhoneValidator({ validateStatus: 'success', help: ItemHelpTypes.NoneHelp });\r\n\r\n        const reg = /^1\\d{10}$/;\r\n        const isValid = reg.test(phoneNumber);\r\n\r\n        if (isPhoneInputOnBlur) {\r\n            if (isValid || phoneNumber === '') {\r\n                setPhoneValidator({ validateStatus: 'success', help: ItemHelpTypes.NoneHelp });\r\n            } else {\r\n                setPhoneValidator({ validateStatus: 'error', help: ItemHelpTypes.InvalidPhone});\r\n            }\r\n        }\r\n    }, [phoneNumber, isPhoneInputOnBlur]);\r\n\r\n    useEffect(() => {\r\n        setCaptchaValidator({ validateStatus: 'success', help: ItemHelpTypes.NoneHelp });\r\n    }, [captcha, isCaptchaInputOnBlur])\r\n\r\n\r\n\r\n    return (\r\n        <Form\r\n            className='phone-login-form'\r\n            name='phone_login_form'\r\n            onFinish={onFinish}\r\n            form={form}\r\n            onValuesChange={onValuesChange}\r\n            initialValues={initalFormValues}\r\n            style={props.style}\r\n        >\r\n            <Form.Item\r\n                className='phone-login-form-item phone-login-phone-item'\r\n                name='phone'\r\n                {...phoneValidator}\r\n            >\r\n                <PhoneInput\r\n                    className='phone-login-input phone-login-phone-input'\r\n                    setOnBlur={setPhoneIsInputOnBlur}\r\n                    \r\n                />\r\n            </Form.Item>\r\n\r\n\r\n\r\n            <Form.Item\r\n                className='phone-login-form-item phone-login-captcha-item'\r\n                name=\"captcha\"\r\n                {...captchaValidator}\r\n            >\r\n                <CaptchaInput\r\n                    className='phone-login-input phone-login-captcha-input'\r\n                    setOnBlur={setIsCaptchaInputOnBlur}\r\n                    isPhoneValid={isPhoneValid}\r\n                />\r\n            </Form.Item>\r\n\r\n\r\n            <Form.Item\r\n                className='phone-login-form-item phone-login-btn-item'\r\n                validateStatus='validating'\r\n            >\r\n                <Button\r\n                    className='phone-login-input phone-login-btn-input'\r\n                    type='primary'\r\n                    htmlType='submit'\r\n                    style={{ width: '100%' }}\r\n\r\n                >\r\n                    登录 / 注册\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PhoneLoginForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\EmailRegisterForm\\emailRegisterForm.tsx",["432","433","434","435","436"],"import React, { CSSProperties, useEffect, useState } from 'react'\r\nimport { Form, Input, Button, message } from 'antd'\r\nimport request from '../../../../../apis/index'\r\nimport './style.scss';\r\nimport { useCaptcha } from '../../../../../utils/hooks';\r\n\r\n\r\ninterface IBaseProps {\r\n    children?: React.ReactNode;\r\n    style?: CSSProperties;\r\n}\r\n\r\ninterface IFormValues {\r\n    email: string,\r\n    password: string,\r\n    captcha: string\r\n}\r\n\r\nenum InputType {\r\n    Email = 'email',\r\n    Password = 'password',\r\n    Captcha = 'captcha'\r\n}\r\n\r\ninterface IValueObj {\r\n    email?: string;\r\n    password?: string;\r\n    captcha?: string;\r\n}\r\n\r\nconst EmailRegisterForm: React.FC<IBaseProps> = (props) => {\r\n    const { style } = props;\r\n\r\n    const [isPwdInputOnBlur, setIsPwdInputOnBlur] = useState(false);\r\n    const [isEmailInputOnBlur, setIsEmailInputOnBlur] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [captcha, setCaptcha] = useState('');\r\n\r\n\r\n\r\n    const onFinish = (values: IFormValues) => {\r\n        const { email, password, captcha } = values;\r\n        console.log(email, password, captcha);\r\n\r\n        request.post('/user/register', {\r\n            registerBody: email,\r\n            password,\r\n            authCode: Number(captcha),\r\n            method: 'email'\r\n\r\n        }).then(value => {\r\n            message.success('注册成功！')\r\n        }).catch(reason => {\r\n            console.log(reason);\r\n        });\r\n    }\r\n\r\n    const onValuesChange = (valueObj: IValueObj) => {\r\n        const changeType = Object.keys(valueObj)[0];\r\n        switch(changeType) {\r\n            case InputType.Email:\r\n                const email = valueObj.email as string;\r\n                setEmail(email)\r\n                break;\r\n            case InputType.Password:\r\n                const password = valueObj.password as string;\r\n                setPassword(password)\r\n                break;\r\n            case InputType.Captcha:\r\n                const captcha = valueObj.captcha as string;\r\n                setCaptcha(captcha)\r\n                break;\r\n        }\r\n    }\r\n\r\n    const [getCaptcha, IBtnStatus] = useCaptcha('email', email, 5, []);\r\n\r\n    return (\r\n        <Form\r\n            className='email-register-form'\r\n            style={style}\r\n            initialValues={{\r\n                email: '',\r\n                password: '',\r\n                captcha: ''\r\n            }}\r\n            onValuesChange={onValuesChange}\r\n            onFinish={onFinish}\r\n        >\r\n            <Form.Item\r\n                className='email-register-form-item email-register-email-item'\r\n                name='email'\r\n                rules={[\r\n                    { required: true, message: '请输入邮箱', validateTrigger: 'onBlur' },\r\n                    (/* { getFieldValue } */) => ({\r\n                        validator(_, value) {\r\n                            const email = value as string;\r\n\r\n                            const reg = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\r\n                            const isValid = reg.test(email);\r\n                            if (!isValid && isEmailInputOnBlur && email != '') {\r\n                                return Promise.reject(new Error('邮箱地址不合法'))\r\n                            }\r\n\r\n                            return Promise.resolve();\r\n                        },\r\n                    })\r\n\r\n                ]}\r\n                validateTrigger={['onChange', 'onBlur']}\r\n            >\r\n                <Input\r\n                    className='email-register-input email-register-email-input'\r\n                    placeholder='输入邮箱'\r\n                    onBlur={() => setIsEmailInputOnBlur(true)}\r\n                    onFocus={() => setIsEmailInputOnBlur(false)}\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                className='email-register-form-item email-register-password-item'\r\n                name='password'\r\n                rules={[\r\n                    { required: true, message: '请输入密码', validateTrigger: 'onBlur' },\r\n                    (/* { getFieldValue } */) => ({\r\n                        validator(_, value) {\r\n                            const password = value as string;\r\n\r\n                            const reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,30}$/;\r\n                            const isValid = reg.test(password) && password.length >= 8;\r\n                            if (!isValid && isPwdInputOnBlur && password != '') {\r\n                                return Promise.reject(new Error('密码须为不小于8位的数字及字母组合'))\r\n                            }\r\n                            return Promise.resolve();\r\n                        }\r\n                    })\r\n                ]}\r\n                validateTrigger={['onBlur', 'onChange']}\r\n            >\r\n                <Input.Password\r\n                    className='email-register-input email-register-password-input'\r\n                    placeholder='输入密码'\r\n                    onBlur={() => setIsPwdInputOnBlur(true)}\r\n                    onFocus={() => setIsPwdInputOnBlur(false)}\r\n                />\r\n            </Form.Item>\r\n            <div className='captcha-item-warp'>\r\n                <Form.Item\r\n                    className='email-register-form-item email-register-captcha-item input-item'\r\n                    name='captcha'\r\n                    rules={[\r\n                        { required: true, message: '请输入验证码', validateTrigger: 'onBlur' }\r\n                    ]}\r\n                    validateTrigger={['onChange', 'onBlur']}\r\n                >\r\n                    <Input\r\n                        className='email-register-input email-register-captcha-input'\r\n                        placeholder='输入验证码'\r\n                    />\r\n\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item\r\n                    className='email-register-form-item email-register-captcha-item button-item'\r\n                >\r\n                    <Button\r\n                        onClick={getCaptcha}\r\n                        // loading={true}\r\n                        {...IBtnStatus.btnProps}\r\n                    >\r\n                        {IBtnStatus.children}\r\n                </Button>\r\n                </Form.Item>\r\n            </div>\r\n\r\n            <Form.Item\r\n                className='email-register-form-item email-register-btn-item'\r\n            >\r\n                <Button\r\n                    className='email-register-input email-register-btn-input'\r\n                    type='primary'\r\n                    htmlType='submit'\r\n                >\r\n                    注册\r\n                </Button>\r\n            </Form.Item>\r\n\r\n\r\n\r\n\r\n\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default EmailRegisterForm;\r\n","D:\\FontEnd\\myDemos\\leetCode\\src\\apis\\share.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\solution\\solution-right\\index.tsx",["437"],"import { FC } from \"react\";\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./style.scss\";\r\nimport { dispatchShowDetail } from \"../store\";\r\nimport { wrapRequest } from \"../../../../../../utils/hooks\";\r\nimport {\r\n  DetailInfo,\r\n  fetchDetailSolution,\r\n} from \"../../../../../../apis/solution\";\r\nimport { RootState } from \"../../../../store\";\r\nimport { Flags } from \"../../../../../../utils/shared\";\r\nimport { LoadingOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport Comment from \"../../left/components/comment\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport BraftEditor from \"braft-editor\";\r\nimport Loading from \"../../../../../../components/loading\";\r\n\r\ninterface Props {\r\n  dispatch: Dispatch;\r\n  answerId: number;\r\n}\r\n\r\nconst useGetDetail = wrapRequest(fetchDetailSolution);\r\n\r\nconst SolutionRight: FC<Props> = ({ dispatch, answerId }) => {\r\n  const close = () => {\r\n    dispatch(dispatchShowDetail(false));\r\n  };\r\n  const [data, flag] = useGetDetail(answerId);\r\n\r\n  return (\r\n    <div className=\"solution-right\">\r\n      <header className=\"flex a-center\">\r\n        <button className=\"close-btn\" onClick={close}>\r\n          关闭\r\n        </button>\r\n      </header>\r\n      <div className=\"sr-content\">\r\n        {flag === Flags.Pending ? (\r\n          <div className=\"flex j-center a-center\">\r\n            <Loading size=\"large\" />\r\n          </div>\r\n        ) : flag === Flags.Success ? (\r\n          <Main {...data} />\r\n        ) : (\r\n          \"网络异常\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Main: FC<DetailInfo> = (props) => (\r\n  <div className=\"main\">\r\n    <div className=\"solution-header flex a-center\">\r\n      <Avatar icon={<UserOutlined />} src={props.image} alt=\"头像\" />\r\n      <span>{props.userName}</span>\r\n    </div>\r\n    <BraftEditor\r\n      value={BraftEditor.createEditorState(props.content)}\r\n      controls={[]}\r\n      readOnly={true}\r\n    />\r\n    <Comment />\r\n  </div>\r\n);\r\n\r\nexport default connect((state: RootState) => ({\r\n  answerId: state.solution.answerId,\r\n}))(SolutionRight);\r\n","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx",["438","439","440","441"],"import { Divider, message, Select } from \"antd\";\r\nimport { Components } from \"antd/lib/date-picker/generatePicker\";\r\nimport {\r\n  createContext,\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { ErrorCode } from \"../../../../../../../apis\";\r\nimport {\r\n  Comment,\r\n  queryComments,\r\n  sendComment,\r\n} from \"../../../../../../../apis/comments\";\r\nimport Loading from \"../../../../../../../components/loading\";\r\nimport { useGetQuestionId } from \"../../../../../../../utils/hooks\";\r\nimport { storage } from \"../../../../../../../utils/shared\";\r\nimport MdEditor from \"../mdEditor\";\r\nimport Common from \"./components/Common\";\r\n\r\ninterface CommentsProps {}\r\n\r\n/**\r\n * 为了在其它编辑器打开的时候关闭其它的，因此需要给每一个设置一个id\r\n */\r\nexport const ActiveEditorId = createContext({\r\n  id: -1,\r\n  setId(id: number) {},\r\n});\r\n\r\nconst CommentFC: FC<CommentsProps> = () => {\r\n  const [comments, setComments] = useState<Comment[] | null>(null);\r\n  const [curPage, setCurPage] = useState(1);\r\n  const [pageNum, setPageNum] = useState(1);\r\n  const questionId = useGetQuestionId();\r\n  const [sortBy, setSortBy] = useState(-1); //0: 热度 1: 时间\r\n\r\n  const getComments = useCallback(async (pageNum: number, parentId: any) => {\r\n    const res = await queryComments(pageNum, parentId);\r\n    if (res.code === ErrorCode.Success) {\r\n      setPageNum(res.data.totalPage);\r\n      setComments(res.data.g);\r\n      setSortBy(0)\r\n    } else {\r\n      setPageNum(0);\r\n      setComments([]);\r\n    }\r\n  }, []);\r\n\r\n  const updateComments = (at: string, content: string) => {\r\n    const newVal = comments?.slice();\r\n    if (newVal) {\r\n      newVal.push({\r\n        avatar: storage.get(\"avatar\")!,\r\n        content,\r\n        userId: storage.get(\"userId\")!,\r\n        nickname: storage.get(\"username\")!,\r\n        thumbup: 0,\r\n        replyNum: 0,\r\n        commentTime: new Date().toString(),\r\n        islike: 0,\r\n        commentId: Math.random() * 10000000 + \"\",\r\n      });\r\n      setComments(newVal);\r\n      setSortBy(1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getComments(curPage, questionId);\r\n  }, [curPage, questionId, getComments]);\r\n\r\n  const sendClick = async (content: string) => {\r\n    // if (questionId) {\r\n    //   sendComment(questionId, storage.get(\"userId\")!, content);\r\n    //   const res = await sendComment(\"1\", \"狂拽酷炫吊炸天\", content);\r\n    //   if (res.code === ErrorCode.Success) {\r\n    //   }\r\n    // } else {\r\n    //   message.info({\r\n    //     content: \"请先登陆\",\r\n    //   });\r\n    // }\r\n    const res = await sendComment(\"1\", \"狂拽酷炫吊炸天\", content);\r\n    if (res.code === ErrorCode.Success) {\r\n      updateComments(\"\", content);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setComments((oldComments) => {\r\n      const val = oldComments?.slice();\r\n      if (val) {\r\n        switch (sortBy) {\r\n          case 0:\r\n            val.sort((next, prev) => prev.thumbup - next.thumbup);\r\n            break;\r\n          case 1:\r\n            val.sort(\r\n              (next, prev) =>\r\n                Date.parse(prev.commentTime) - Date.parse(next.commentTime)\r\n            );\r\n            break;\r\n        }\r\n      }\r\n      return val || oldComments;\r\n    });\r\n  }, [sortBy]);\r\n\r\n  const [id, setId] = useState(-1);\r\n\r\n  return (\r\n    <ActiveEditorId.Provider\r\n      value={{\r\n        id,\r\n        setId,\r\n      }}\r\n    >\r\n      <div className=\"comment-main\">\r\n        <div className=\"flex j-between\">\r\n          <div>\r\n            <span\r\n              style={{\r\n                fontWeight: 8000,\r\n                fontSize: \"20px\",\r\n                fontFamily: \"Tahoma\",\r\n                color: \"#595959\",\r\n                marginRight: \"5px\",\r\n              }}\r\n            >\r\n              {768}\r\n            </span>\r\n            条评论\r\n          </div>\r\n          <Select\r\n            onChange={(value: number) => {\r\n              setSortBy(value);\r\n            }}\r\n            defaultValue={0}\r\n          >\r\n            <Select.Option value={0}>热度</Select.Option>\r\n            <Select.Option value={1}>时间</Select.Option>\r\n          </Select>\r\n        </div>\r\n        <MdEditor onSubmit={sendClick as any} />\r\n        <Divider\r\n          style={{\r\n            borderTopColor: \"#bfbfbf\",\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              color: \"#bfbfbf\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            精选评论\r\n          </span>\r\n        </Divider>\r\n        {comments ? (\r\n          comments.map((item) => (\r\n            <Common\r\n              key={item.commentId}\r\n              userName={item.nickname}\r\n              avatar={item.avatar}\r\n              content={item.content}\r\n              thumbup={item.thumbup}\r\n              replyNum={item.replyNum}\r\n              parentId={questionId!}\r\n              commentTime={item.commentTime}\r\n              commentId={item.commentId}\r\n              islike={item.islike}\r\n            />\r\n          ))\r\n        ) : (\r\n          <div className=\"flex j-center\">\r\n            <Loading size=\"large\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </ActiveEditorId.Provider>\r\n  );\r\n};\r\n\r\nexport default memo(CommentFC);\r\n","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\PhoneInput\\phoneInput.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\PhoneLoginForm\\CaptchaInput\\captchaInput.tsx",["442","443"],"import { Input, Button } from 'antd';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useCaptcha } from '../../../../../../utils/hooks';\r\nimport './style.scss'\r\n\r\nexport interface ICaptcha {\r\n    number?: string | undefined;\r\n}\r\n\r\ninterface BaseProps {\r\n    className?: string;\r\n    children?: React.ReactNode;\r\n    style?: {};\r\n    onChange?: (value: ICaptcha) => void;\r\n    value?: ICaptcha;\r\n    setOnBlur: React.Dispatch<React.SetStateAction<boolean>>\r\n    isPhoneValid: boolean\r\n}\r\n\r\n\r\n\r\nconst CaptchaInput: React.FC<BaseProps> = (props) => {\r\n\r\n    // state\r\n    const [number, setNumber] = useState('');\r\n\r\n    // props\r\n    const {\r\n        className,\r\n        value = {},\r\n        onChange,\r\n        setOnBlur,\r\n        isPhoneValid\r\n    } = props;\r\n\r\n\r\n    const [getCaptcha, btnStatus] = useCaptcha('email', '909397116@qq.com', 5, [isPhoneValid]);\r\n\r\n\r\n\r\n    // 让当前控件 onChange 的时候与 Form.Item 产生交互\r\n    const triggerChange = (changedValue: ICaptcha) => {\r\n        onChange?.({ number, ...value, ...changedValue });\r\n    };\r\n\r\n    const defOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const captchaValue = e.target.value;\r\n        setNumber(captchaValue);\r\n        triggerChange({\r\n            number: captchaValue\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Input\r\n            className={`${className} captcha-input`}\r\n            placeholder='验证码'\r\n            onBlur={() => setOnBlur(true)}\r\n            onFocus={() => setOnBlur(false)}\r\n            onChange={defOnChange}\r\n            suffix={\r\n                <Button\r\n                    type='link'\r\n                    {...btnStatus.btnProps}\r\n                    onClick={getCaptcha}\r\n                >\r\n                    {btnStatus.children}\r\n                </Button>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CaptchaInput;","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\dif-tag\\DigTag.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\utils\\hooks\\index.ts",["444","445","446","447","448","449","450"],"import produce, { Immutable } from \"immer\"\r\nimport { useCallback, useEffect, useState } from \"react\"\r\nimport { Flags, LooseObj } from \"../shared\"\r\nimport { Modal } from 'antd'\r\nimport { Main_Dark, Main_Light } from \"../../config/colors\"\r\nimport request, { ErrorCode, Response } from '../../apis'\r\nimport { useParams } from \"react-router\"\r\nimport classNames from 'classnames'\r\ninterface Update<T> {\r\n  (updateFn: (draft: Immutable<T>) => void): void\r\n}\r\ninterface IConfirm {\r\n  msg?: string\r\n  title?: string\r\n  onOk?(): void\r\n  onCancel?(): void\r\n}\r\n\r\ninterface IBtnStatus {\r\n  children: string;\r\n  btnProps: {\r\n    loading: boolean,\r\n    disabled: boolean\r\n  }\r\n}\r\n\r\nexport const useImmer = <T extends LooseObj>(initState: T): [T, Update<T>] => {\r\n  const [state, setState] = useState<T>(initState)\r\n\r\n  const update: Update<T> = (updateFn) => {\r\n    const newState = produce<T>(state, updateFn)\r\n    setState(newState)\r\n  }\r\n  return [state, update]\r\n}\r\n\r\nexport const useConfirm = ({\r\n  msg = \"你确定吗\",\r\n  title = \"确定？\",\r\n  onOk,\r\n  onCancel\r\n}: IConfirm = {}) => {\r\n  return () => {\r\n    Modal.confirm({\r\n      title,\r\n      content: msg,\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      onOk,\r\n      onCancel,\r\n      okButtonProps: {\r\n        style: {\r\n          background: Main_Light,\r\n          color: \"#fff\"\r\n        }\r\n      },\r\n      cancelButtonProps: {\r\n        style: {\r\n          color: Main_Dark\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const wrapRequest = <T extends any[], R>(req: (...args: T) => Promise<Response<R>>) => {\r\n  const useReqImpl = (...args: T): [Response<R>[\"data\"], Flags, () => void] => {\r\n    const [data, setData] = useState<Response[\"data\"]>(null)\r\n    const [flag, setFlag] = useState(Flags.Normal)\r\n\r\n    const send = useCallback(async () => {\r\n      setFlag(Flags.Pending)\r\n      const res = await req(...args)\r\n      if (res.code === ErrorCode.Success) {\r\n        setFlag(Flags.Success)\r\n      } else {\r\n        setFlag(Flags.Fail)\r\n      }\r\n      setData(res.data)\r\n    }, [...args])\r\n\r\n    useEffect(() => {\r\n      send()\r\n    }, [send])\r\n\r\n    return [data, flag, send]\r\n  }\r\n  return useReqImpl\r\n}\r\n\r\nexport const useGetQuestionId = () => {\r\n  const { questionId } = useParams<{\r\n    questionId: string | undefined\r\n  }>()\r\n  return questionId\r\n}\r\n\r\n\r\nexport const useCaptcha = (\r\n  type: 'email' | 'phone', \r\n  sendTarget: string, \r\n  initSeconds = 60, \r\n  deps: any[]\r\n): [() => void, IBtnStatus] => {\r\n  const [seconds, setSeconds] = useState(initSeconds);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [isCountDown, setIsCountDown] = useState(false);\r\n\r\n  const [btnStatus, setBtnStatus] = useState<IBtnStatus>({\r\n    children: '获取验证码',\r\n    btnProps: {\r\n      loading: false,\r\n      disabled: true\r\n    }\r\n  });\r\n\r\n  // 只有所有的 deps 全部有效后，captchaBtn 才能点击\r\n  useEffect(() => {\r\n    const res = deps.reduce((pre, current) => pre &= current, true);\r\n    setIsDisabled(!res);\r\n  }, deps)\r\n\r\n  useEffect(() => {\r\n    setBtnStatus({\r\n      children: `${\r\n        isLoading ? '发送中' : \r\n        isCountDown ? (seconds + ' 秒后可重发') : '获取验证码'\r\n      }`,\r\n      btnProps: {\r\n        loading: isLoading,\r\n        disabled: isDisabled\r\n      }\r\n    })\r\n  }, [seconds, isLoading, isCountDown, isDisabled])\r\n\r\n\r\n  let timer: any;\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  });\r\n\r\n  const startCountDown = () => {\r\n\r\n    // 倒计时60秒\r\n    // setSeconds(5);\r\n\r\n    let countDownTime = initSeconds;\r\n    // 每隔一秒，countDownTime 减 1\r\n    timer = setInterval(() => {\r\n\r\n      // countDownTime 为 0 时停止倒计时\r\n      if (countDownTime <= 1) {\r\n        setSeconds(initSeconds);\r\n        setIsCountDown(false);\r\n        setIsDisabled(false)\r\n        clearInterval(timer);\r\n        return;\r\n      }\r\n      countDownTime -= 1;\r\n      setSeconds(countDownTime);\r\n    }, 1000);\r\n  }\r\n\r\n  // 点击获取验证码\r\n  const getCaptcha = () => {\r\n\r\n    if (type === 'email') {\r\n      const reg = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\r\n      if (!reg.test(sendTarget)) {\r\n        return;\r\n      }\r\n    }\r\n    // 按钮 loading：正在发送请求\r\n    setIsLoading(true);\r\n    setIsDisabled(true)\r\n\r\n    request.post('/user/requestcode', {\r\n      method: type,\r\n      number: sendTarget\r\n    }).then(reponse => {\r\n\r\n      // 停止 loading\r\n      setIsLoading(false);\r\n      // 开始倒计时\r\n      setIsCountDown(true);\r\n      startCountDown();\r\n      console.log(reponse);\r\n\r\n    }).catch(reason => {\r\n      console.log(reason);\r\n    })\r\n    \r\n\r\n    // setTimeout(() => {\r\n    //   // 按钮停止 loading：请求结束 \r\n    //   setIsLoading(false);\r\n\r\n    //   if (!isLoading) {\r\n    //     // 开始倒计时\r\n    //     setIsCountDown(true);\r\n\r\n    //     startCountDown();\r\n    //   }\r\n\r\n    // }, 1000);\r\n  }\r\n\r\n  return [getCaptcha, btnStatus];\r\n}\r\n\r\n// deps 用来存放交互过程中可能会改变的状态\r\nconst useClassNames = (baseClassName: string, deps: any[]): string => {\r\n  useEffect(() => {\r\n    classNames(baseClassName, {\r\n\r\n    })\r\n  }, deps)\r\n\r\n  return ''\r\n}","D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\login\\components\\LoginMain\\types\\index.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\config\\colors.ts",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\mdEditor\\index.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx",[],"D:\\FontEnd\\myDemos\\leetCode\\src\\components\\showModal\\index.tsx",[],{"ruleId":"451","replacedBy":"452"},{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","severity":1,"message":"456","line":6,"column":3,"nodeType":"457","messageId":"458","endLine":6,"endColumn":11},{"ruleId":"451","replacedBy":"452"},{"ruleId":"453","replacedBy":"454"},{"ruleId":"459","severity":1,"message":"460","line":49,"column":11,"nodeType":"461","endLine":49,"endColumn":44},{"ruleId":"459","severity":1,"message":"460","line":54,"column":11,"nodeType":"461","endLine":54,"endColumn":42},{"ruleId":"459","severity":1,"message":"462","line":59,"column":11,"nodeType":"461","endLine":59,"endColumn":80},{"ruleId":"463","severity":1,"message":"464","line":18,"column":10,"nodeType":"465","endLine":18,"endColumn":12,"suggestions":"466"},{"ruleId":"467","severity":1,"message":"468","line":1,"column":17,"nodeType":"457","messageId":"458","endLine":1,"endColumn":30},{"ruleId":"467","severity":1,"message":"469","line":1,"column":32,"nodeType":"457","messageId":"458","endLine":1,"endColumn":40},{"ruleId":"455","severity":1,"message":"470","line":1,"column":10,"nodeType":"457","messageId":"458","endLine":1,"endColumn":19},{"ruleId":"455","severity":1,"message":"471","line":1,"column":10,"nodeType":"457","messageId":"458","endLine":1,"endColumn":14},{"ruleId":"455","severity":1,"message":"471","line":1,"column":10,"nodeType":"457","messageId":"458","endLine":1,"endColumn":14},{"ruleId":"455","severity":1,"message":"472","line":14,"column":18,"nodeType":"457","messageId":"458","endLine":14,"endColumn":22},{"ruleId":"463","severity":1,"message":"473","line":66,"column":8,"nodeType":"465","endLine":66,"endColumn":18,"suggestions":"474"},{"ruleId":"455","severity":1,"message":"475","line":9,"column":11,"nodeType":"457","messageId":"458","endLine":9,"endColumn":16},{"ruleId":"467","severity":1,"message":"476","line":26,"column":5,"nodeType":"457","messageId":"458","endLine":26,"endColumn":8},{"ruleId":"467","severity":1,"message":"477","line":3,"column":10,"nodeType":"457","messageId":"458","endLine":3,"endColumn":16},{"ruleId":"455","severity":1,"message":"478","line":2,"column":8,"nodeType":"457","messageId":"458","endLine":2,"endColumn":12},{"ruleId":"467","severity":1,"message":"479","line":1,"column":10,"nodeType":"457","messageId":"458","endLine":1,"endColumn":21},{"ruleId":"467","severity":1,"message":"480","line":1,"column":23,"nodeType":"457","messageId":"458","endLine":1,"endColumn":38},{"ruleId":"467","severity":1,"message":"481","line":5,"column":6,"nodeType":"457","messageId":"458","endLine":5,"endColumn":19},{"ruleId":"482","severity":1,"message":"483","line":34,"column":14,"nodeType":"484","messageId":"485","endLine":34,"endColumn":16},{"ruleId":"467","severity":1,"message":"486","line":48,"column":9,"nodeType":"457","messageId":"458","endLine":48,"endColumn":21},{"ruleId":"467","severity":1,"message":"487","line":1,"column":17,"nodeType":"457","messageId":"458","endLine":1,"endColumn":23},{"ruleId":"467","severity":1,"message":"469","line":1,"column":25,"nodeType":"457","messageId":"458","endLine":1,"endColumn":33},{"ruleId":"467","severity":1,"message":"488","line":62,"column":9,"nodeType":"457","messageId":"458","endLine":62,"endColumn":23},{"ruleId":"455","severity":1,"message":"489","line":2,"column":17,"nodeType":"457","messageId":"458","endLine":2,"endColumn":21},{"ruleId":"459","severity":1,"message":"462","line":11,"column":23,"nodeType":"461","endLine":11,"endColumn":26},{"ruleId":"482","severity":1,"message":"483","line":42,"column":50,"nodeType":"484","messageId":"485","endLine":42,"endColumn":52},{"ruleId":"463","severity":1,"message":"490","line":41,"column":6,"nodeType":"465","endLine":41,"endColumn":21,"suggestions":"491"},{"ruleId":"467","severity":1,"message":"492","line":1,"column":24,"nodeType":"457","messageId":"458","endLine":1,"endColumn":31},{"ruleId":"467","severity":1,"message":"493","line":1,"column":32,"nodeType":"457","messageId":"458","endLine":1,"endColumn":41},{"ruleId":"467","severity":1,"message":"494","line":37,"column":12,"nodeType":"457","messageId":"458","endLine":37,"endColumn":20},{"ruleId":"467","severity":1,"message":"495","line":38,"column":12,"nodeType":"457","messageId":"458","endLine":38,"endColumn":19},{"ruleId":"482","severity":1,"message":"496","line":102,"column":73,"nodeType":"484","messageId":"485","endLine":102,"endColumn":75},{"ruleId":"482","severity":1,"message":"496","line":132,"column":74,"nodeType":"484","messageId":"485","endLine":132,"endColumn":76},{"ruleId":"467","severity":1,"message":"497","line":13,"column":10,"nodeType":"457","messageId":"458","endLine":13,"endColumn":25},{"ruleId":"467","severity":1,"message":"492","line":1,"column":19,"nodeType":"457","messageId":"458","endLine":1,"endColumn":26},{"ruleId":"467","severity":1,"message":"498","line":2,"column":10,"nodeType":"457","messageId":"458","endLine":2,"endColumn":20},{"ruleId":"467","severity":1,"message":"499","line":35,"column":19,"nodeType":"457","messageId":"458","endLine":35,"endColumn":29},{"ruleId":"467","severity":1,"message":"500","line":36,"column":10,"nodeType":"457","messageId":"458","endLine":36,"endColumn":17},{"ruleId":"467","severity":1,"message":"493","line":2,"column":10,"nodeType":"457","messageId":"458","endLine":2,"endColumn":19},{"ruleId":"467","severity":1,"message":"487","line":2,"column":21,"nodeType":"457","messageId":"458","endLine":2,"endColumn":27},{"ruleId":"463","severity":1,"message":"501","line":80,"column":8,"nodeType":"465","endLine":80,"endColumn":17,"suggestions":"502"},{"ruleId":"463","severity":1,"message":"503","line":80,"column":9,"nodeType":"504","endLine":80,"endColumn":16},{"ruleId":"463","severity":1,"message":"505","line":122,"column":6,"nodeType":"457","endLine":122,"endColumn":10},{"ruleId":"463","severity":1,"message":"506","line":122,"column":6,"nodeType":"457","endLine":122,"endColumn":10,"suggestions":"507"},{"ruleId":"467","severity":1,"message":"508","line":216,"column":7,"nodeType":"457","messageId":"458","endLine":216,"endColumn":20},{"ruleId":"463","severity":1,"message":"505","line":221,"column":6,"nodeType":"457","endLine":221,"endColumn":10},{"ruleId":"463","severity":1,"message":"509","line":221,"column":6,"nodeType":"457","endLine":221,"endColumn":10,"suggestions":"510"},"no-native-reassign",["511"],"no-negated-in-lhs",["512"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["513"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","'useState' is defined but never used.","'takeEvery' is defined but never used.","'call' is defined but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getLoginWindowStyle'. Either include it or remove the dependency array.",["514"],"'token' is assigned a value but never used.","'now' is assigned a value but never used.","'Button' is defined but never used.","'data' is defined but never used.","'createStore' is defined but never used.","'combineReducers' is defined but never used.","'MappedReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'clickLikeBtn' is assigned a value but never used.","'useRef' is defined but never used.","'toResetPwdForm' is assigned a value but never used.","'Card' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["515"],"'message' is defined but never used.","'useEffect' is defined but never used.","'password' is assigned a value but never used.","'captcha' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'LoadingOutlined' is defined but never used.","'Components' is defined but never used.","'setCurPage' is assigned a value but never used.","'pageNum' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'args'. Either include it or remove the dependency array.",["516"],"React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'deps'. Either include it or remove the dependency array.",["517"],"'useClassNames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'baseClassName'. Either include it or remove the dependency array.",["518"],"no-global-assign","no-unsafe-negation",{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},"Update the dependencies array to be: [getData]",{"range":"531","text":"532"},"Update the dependencies array to be: [formType, getLoginWindowStyle]",{"range":"533","text":"534"},"Update the dependencies array to be: [descData.code, id]",{"range":"535","text":"536"},"Update the dependencies array to be: [args]",{"range":"537","text":"538"},"Update the dependencies array to be: [deps]",{"range":"539","text":"540"},"Update the dependencies array to be: [baseClassName]",{"range":"541","text":"542"},[628,630],"[getData]",[1681,1691],"[formType, getLoginWindowStyle]",[1108,1123],"[descData.code, id]",[2023,2032],"[args]",[3006,3010],"[deps]",[5000,5004],"[baseClassName]"]