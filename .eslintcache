[{"/Users/apple/daliy/leetCode/src/index.tsx":"1","/Users/apple/daliy/leetCode/src/reportWebVitals.ts":"2","/Users/apple/daliy/leetCode/src/App.tsx":"3","/Users/apple/daliy/leetCode/src/router/index.jsx":"4","/Users/apple/daliy/leetCode/src/router/config.js":"5","/Users/apple/daliy/leetCode/src/pages/login/Login.js":"6","/Users/apple/daliy/leetCode/src/pages/profile/Profile.js":"7","/Users/apple/daliy/leetCode/src/pages/questionlist/QuestionList.js":"8","/Users/apple/daliy/leetCode/src/pages/questionindex/QuestionIndex.js":"9","/Users/apple/daliy/leetCode/src/pages/resetpassword/ResetPassword.js":"10","/Users/apple/daliy/leetCode/src/pages/profile/store/index.js":"11","/Users/apple/daliy/leetCode/src/pages/questionlist/store/index.js":"12","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/Body.js":"13","/Users/apple/daliy/leetCode/src/pages/questionindex/components/header/Header.js":"14","/Users/apple/daliy/leetCode/src/pages/login/store/index.ts":"15","/Users/apple/daliy/leetCode/src/pages/questionindex/components/footer/Footer.tsx":"16","/Users/apple/daliy/leetCode/src/pages/login/components/WindowWarp/windowWarp.tsx":"17","/Users/apple/daliy/leetCode/src/pages/questionlist/index.jsx":"18","/Users/apple/daliy/leetCode/src/pages/resetpassword/pages/validation/components/ResetPwdWindow/resetPwdWindow.tsx":"19","/Users/apple/daliy/leetCode/src/pages/profile/store/sagas/sagaRoot.js":"20","/Users/apple/daliy/leetCode/src/pages/profile/store/reducers/profile_reqHistory.js":"21","/Users/apple/daliy/leetCode/src/pages/questionlist/store/reudcer/list.js":"22","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/right/Right.js":"23","/Users/apple/daliy/leetCode/src/pages/login/store/saga/rootSaga.js":"24","/Users/apple/daliy/leetCode/src/pages/questionindex/store/index.ts":"25","/Users/apple/daliy/leetCode/src/pages/login/store/reducers/index.ts":"26","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/Left.js":"27","/Users/apple/daliy/leetCode/src/pages/questionindex/store/actions.ts":"28","/Users/apple/daliy/leetCode/src/apis/comments.ts":"29","/Users/apple/daliy/leetCode/src/pages/login/components/LoginWindow/loginWindow.tsx":"30","/Users/apple/daliy/leetCode/src/pages/profile/components/Side/index.jsx":"31","/Users/apple/daliy/leetCode/src/pages/profile/components/Head/index.jsx":"32","/Users/apple/daliy/leetCode/src/pages/profile/components/Section/index.jsx":"33","/Users/apple/daliy/leetCode/src/pages/profile/store/redux_test.js":"34","/Users/apple/daliy/leetCode/src/pages/profile/store/sagas/req_questionInfo.js":"35","/Users/apple/daliy/leetCode/src/pages/profile/store/sagas/req_historySaga.js":"36","/Users/apple/daliy/leetCode/src/pages/resetpassword/pages/validation/components/ResetPwdMain/resetPwdMain.tsx":"37","/Users/apple/daliy/leetCode/src/pages/questionlist/components/indexNav/indexNav.jsx":"38","/Users/apple/daliy/leetCode/src/pages/questionlist/components/list/list.jsx":"39","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/mid/index.tsx":"40","/Users/apple/daliy/leetCode/src/mock/questionIndex.js":"41","/Users/apple/daliy/leetCode/src/pages/questionlist/store/action/index.js":"42","/Users/apple/daliy/leetCode/src/pages/login/store/reducers/loginMain.ts":"43","/Users/apple/daliy/leetCode/src/apis/index.ts":"44","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/loginMain.tsx":"45","/Users/apple/daliy/leetCode/src/pages/login/components/LoginFooter/loginFooter.tsx":"46","/Users/apple/daliy/leetCode/src/pages/resetpassword/pages/validation/components/ResetPwdMain/ResetForm/resetForm.tsx":"47","/Users/apple/daliy/leetCode/src/pages/questionlist/mock/index.js":"48","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-right/index.tsx":"49","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-left/index.tsx":"50","/Users/apple/daliy/leetCode/src/pages/questionlist/components/search/index.jsx":"51","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/components/comment/index.tsx":"52","/Users/apple/daliy/leetCode/src/pages/questionlist/components/randomStart/index.jsx":"53","/Users/apple/daliy/leetCode/src/pages/login/store/actions/loginMain.ts":"54","/Users/apple/daliy/leetCode/src/utils/shared.ts":"55","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/USALoginForm/usaLoginForm.tsx":"56","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/EmailRegisterForm/emailRegisterForm.tsx":"57","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/PwdLoginForm/pwdLoginForm.tsx":"58","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/phoneLoginForm.tsx":"59","/Users/apple/daliy/leetCode/src/pages/profile/components/Section/recordMonth/index.jsx":"60","/Users/apple/daliy/leetCode/src/pages/profile/components/Section/InfoDisplay/index.jsx":"61","/Users/apple/daliy/leetCode/src/pages/profile/components/Section/QuestionInfo/index.jsx":"62","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/components/comment/components/Common.tsx":"63","/Users/apple/daliy/leetCode/src/pages/profile/store/actions/proReqHistory_action.js":"64","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/CaptchaInput/captchaInput.tsx":"65","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/PhoneInput/phoneInput.tsx":"66","/Users/apple/daliy/leetCode/src/utils/hooks/index.ts":"67","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/components/mdEditor/index.tsx":"68","/Users/apple/daliy/leetCode/src/components/loading/index.tsx":"69","/Users/apple/daliy/leetCode/src/config/colors.ts":"70","/Users/apple/daliy/leetCode/src/components/likeBtn/index.tsx":"71","/Users/apple/daliy/leetCode/src/apis/share.ts":"72","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-left/Header.tsx":"73","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-left/Footer.tsx":"74","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-left/SolutionList.tsx":"75","/Users/apple/daliy/leetCode/src/apis/solution.ts":"76","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/store/index.ts":"77","/Users/apple/daliy/leetCode/src/pages/questionlist/router/config.js":"78","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/submitrecord/SubmitRecord.js":"79","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/desc/Desc.js":"80","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/store/epic.ts":"81","/Users/apple/daliy/leetCode/src/pages/questionindex/store/reducer.ts":"82","/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/store/index.ts":"83","/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/index.tsx":"84","/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/store/reducer.ts":"85","/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/components/Editor.tsx":"86","/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/components/ConfigBar.tsx":"87","/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/store/actions.ts":"88","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/components/dif-tag/DigTag.tsx":"89","/Users/apple/daliy/leetCode/src/config/code.ts":"90","/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/components/ConfigMain.tsx":"91","/Users/apple/daliy/leetCode/src/components/showModal/index.tsx":"92","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/types/index.ts":"93"},{"size":405,"mtime":1615017370730,"results":"94","hashOfConfig":"95"},{"size":425,"mtime":1615017370772,"results":"96","hashOfConfig":"95"},{"size":252,"mtime":1615017370725,"results":"97","hashOfConfig":"95"},{"size":468,"mtime":1615017370772,"results":"98","hashOfConfig":"95"},{"size":642,"mtime":1615017370772,"results":"99","hashOfConfig":"95"},{"size":283,"mtime":1615017861714,"results":"100","hashOfConfig":"95"},{"size":879,"mtime":1615017370744,"results":"101","hashOfConfig":"95"},{"size":308,"mtime":1615017370764,"results":"102","hashOfConfig":"95"},{"size":414,"mtime":1615017370751,"results":"103","hashOfConfig":"95"},{"size":257,"mtime":1615017861774,"results":"104","hashOfConfig":"95"},{"size":344,"mtime":1615017370750,"results":"105","hashOfConfig":"95"},{"size":166,"mtime":1615017370767,"results":"106","hashOfConfig":"95"},{"size":352,"mtime":1615017370752,"results":"107","hashOfConfig":"95"},{"size":1742,"mtime":1615017370763,"results":"108","hashOfConfig":"95"},{"size":424,"mtime":1615022857920,"results":"109","hashOfConfig":"95"},{"size":3328,"mtime":1615017370762,"results":"110","hashOfConfig":"95"},{"size":4517,"mtime":1615017861734,"results":"111","hashOfConfig":"95"},{"size":763,"mtime":1615017370766,"results":"112","hashOfConfig":"95"},{"size":335,"mtime":1615017861788,"results":"113","hashOfConfig":"95"},{"size":275,"mtime":1615017370751,"results":"114","hashOfConfig":"95"},{"size":355,"mtime":1615017370750,"results":"115","hashOfConfig":"95"},{"size":395,"mtime":1615017370767,"results":"116","hashOfConfig":"95"},{"size":576,"mtime":1615017370755,"results":"117","hashOfConfig":"95"},{"size":116,"mtime":1615017861740,"results":"118","hashOfConfig":"95"},{"size":996,"mtime":1615017370764,"results":"119","hashOfConfig":"95"},{"size":265,"mtime":1615017861738,"results":"120","hashOfConfig":"95"},{"size":1481,"mtime":1615099354772,"results":"121","hashOfConfig":"95"},{"size":1250,"mtime":1615017370763,"results":"122","hashOfConfig":"95"},{"size":1865,"mtime":1615050759225,"results":"123","hashOfConfig":"95"},{"size":2141,"mtime":1615017861732,"results":"124","hashOfConfig":"95"},{"size":2079,"mtime":1615017370749,"results":"125","hashOfConfig":"95"},{"size":792,"mtime":1615017370744,"results":"126","hashOfConfig":"95"},{"size":2095,"mtime":1615017370748,"results":"127","hashOfConfig":"95"},{"size":90,"mtime":1615017370750,"results":"128","hashOfConfig":"95"},{"size":354,"mtime":1615017370751,"results":"129","hashOfConfig":"95"},{"size":359,"mtime":1615017370750,"results":"130","hashOfConfig":"95"},{"size":1393,"mtime":1615017861782,"results":"131","hashOfConfig":"95"},{"size":1846,"mtime":1615017370764,"results":"132","hashOfConfig":"95"},{"size":1238,"mtime":1615050028696,"results":"133","hashOfConfig":"95"},{"size":1049,"mtime":1615017370755,"results":"134","hashOfConfig":"95"},{"size":2331,"mtime":1615017370731,"results":"135","hashOfConfig":"95"},{"size":556,"mtime":1615017370767,"results":"136","hashOfConfig":"95"},{"size":1057,"mtime":1615017861739,"results":"137","hashOfConfig":"95"},{"size":4438,"mtime":1615101614755,"results":"138","hashOfConfig":"95"},{"size":6443,"mtime":1615017861730,"results":"139","hashOfConfig":"95"},{"size":2218,"mtime":1615017861716,"results":"140","hashOfConfig":"95"},{"size":4866,"mtime":1615017861780,"results":"141","hashOfConfig":"95"},{"size":618,"mtime":1615017370766,"results":"142","hashOfConfig":"95"},{"size":2008,"mtime":1615017370757,"results":"143","hashOfConfig":"95"},{"size":630,"mtime":1615017370756,"results":"144","hashOfConfig":"95"},{"size":262,"mtime":1615017370765,"results":"145","hashOfConfig":"95"},{"size":5029,"mtime":1615017370753,"results":"146","hashOfConfig":"95"},{"size":225,"mtime":1615017370765,"results":"147","hashOfConfig":"95"},{"size":717,"mtime":1615017861737,"results":"148","hashOfConfig":"95"},{"size":3829,"mtime":1615017370774,"results":"149","hashOfConfig":"95"},{"size":1827,"mtime":1615017861729,"results":"150","hashOfConfig":"95"},{"size":6636,"mtime":1615102385130,"results":"151","hashOfConfig":"95"},{"size":2970,"mtime":1615107514813,"results":"152","hashOfConfig":"95"},{"size":5022,"mtime":1615017861724,"results":"153","hashOfConfig":"95"},{"size":1125,"mtime":1615017370748,"results":"154","hashOfConfig":"95"},{"size":4644,"mtime":1615017370745,"results":"155","hashOfConfig":"95"},{"size":1366,"mtime":1615017370746,"results":"156","hashOfConfig":"95"},{"size":4911,"mtime":1615017370752,"results":"157","hashOfConfig":"95"},{"size":147,"mtime":1615017370750,"results":"158","hashOfConfig":"95"},{"size":1809,"mtime":1615040089896,"results":"159","hashOfConfig":"95"},{"size":4880,"mtime":1615017861723,"results":"160","hashOfConfig":"95"},{"size":5030,"mtime":1615101626179,"results":"161","hashOfConfig":"95"},{"size":2124,"mtime":1615017370754,"results":"162","hashOfConfig":"95"},{"size":604,"mtime":1615017370728,"results":"163","hashOfConfig":"95"},{"size":123,"mtime":1615017370730,"results":"164","hashOfConfig":"95"},{"size":1073,"mtime":1615017370728,"results":"165","hashOfConfig":"95"},{"size":247,"mtime":1615017370725,"results":"166","hashOfConfig":"95"},{"size":160,"mtime":1615017370756,"results":"167","hashOfConfig":"95"},{"size":160,"mtime":1615017370755,"results":"168","hashOfConfig":"95"},{"size":2124,"mtime":1615017370756,"results":"169","hashOfConfig":"95"},{"size":1141,"mtime":1615017370725,"results":"170","hashOfConfig":"95"},{"size":2617,"mtime":1615017370758,"results":"171","hashOfConfig":"95"},{"size":525,"mtime":1615017370766,"results":"172","hashOfConfig":"95"},{"size":1734,"mtime":1615017370755,"results":"173","hashOfConfig":"95"},{"size":3723,"mtime":1615017370754,"results":"174","hashOfConfig":"95"},{"size":1245,"mtime":1615017370758,"results":"175","hashOfConfig":"95"},{"size":1248,"mtime":1615017370764,"results":"176","hashOfConfig":"95"},{"size":331,"mtime":1615017370762,"results":"177","hashOfConfig":"95"},{"size":276,"mtime":1615017370761,"results":"178","hashOfConfig":"95"},{"size":1297,"mtime":1615017370762,"results":"179","hashOfConfig":"95"},{"size":2683,"mtime":1615017370761,"results":"180","hashOfConfig":"95"},{"size":1629,"mtime":1615017370758,"results":"181","hashOfConfig":"95"},{"size":828,"mtime":1615017370762,"results":"182","hashOfConfig":"95"},{"size":469,"mtime":1615017370753,"results":"183","hashOfConfig":"95"},{"size":85,"mtime":1615017370729,"results":"184","hashOfConfig":"95"},{"size":3222,"mtime":1615017370758,"results":"185","hashOfConfig":"95"},{"size":1600,"mtime":1615017370729,"results":"186","hashOfConfig":"95"},{"size":792,"mtime":1615103942058,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"1mwum9c",{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"198"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"190"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"198"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"190"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"198"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"190"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"198"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"198"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"190"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"190"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"190"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"198"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"190"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"190"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"198"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"190"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"190"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"198"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"190"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"190"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"190"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"198"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"198"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"190"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"/Users/apple/daliy/leetCode/src/index.tsx",[],["401","402"],"/Users/apple/daliy/leetCode/src/reportWebVitals.ts",[],"/Users/apple/daliy/leetCode/src/App.tsx",[],"/Users/apple/daliy/leetCode/src/router/index.jsx",["403"],"import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport routerMap from \"./config\";\n\n\nconst RouterView = () => {\n  return (\n    <Router>\n      {/* <Redirect to=\"/home\"></Redirect> */}\n      <Switch>\n        {routerMap.map((item,index) => (\n          <Route key={index} path={item.path} component={item.component}></Route>\n        ))}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default RouterView;\n",["404","405"],"/Users/apple/daliy/leetCode/src/router/config.js",[],"/Users/apple/daliy/leetCode/src/pages/login/Login.js",[],"/Users/apple/daliy/leetCode/src/pages/profile/Profile.js",[],"/Users/apple/daliy/leetCode/src/pages/questionlist/QuestionList.js",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/QuestionIndex.js",[],"/Users/apple/daliy/leetCode/src/pages/resetpassword/ResetPassword.js",[],"/Users/apple/daliy/leetCode/src/pages/profile/store/index.js",[],"/Users/apple/daliy/leetCode/src/pages/questionlist/store/index.js",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/Body.js",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/header/Header.js",["406","407","408"],"import React from \"react\";\nimport Logo from \"../../../../assets/imgs/logo.svg\";\nimport \"./header.scss\";\nimport { Menu, Dropdown } from \"antd\";\nimport {Link} from 'react-router-dom'\nimport {\n  RightSquareOutlined,\n  BellOutlined,\n  UserOutlined,\n  DownOutlined\n} from \"@ant-design/icons\";\n\nfunction Header(props) {\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"0\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.alipay.com/\"\n        >\n          题目以中文显示\n        </a>\n      </Menu.Item>\n      <Menu.Item key=\"1\">\n        <a\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"http://www.taobao.com/\"\n        >\n          题目以英文显示\n        </a>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <div className=\"header\">\n      <ul className=\"header-nav\">\n        <li>\n          <img src={Logo} alt=\"力扣\"></img>\n        </li>\n        <li>学习</li>\n        <li>题库</li>\n        <li>讨论</li>\n        <li>竞赛</li>\n        <li>求职</li>\n        <li className=\"shop\">商店</li>\n        <li>\n          <a className=\"download\" href=\"#\">\n            下载 App\n          </a>\n        </li>\n        <li>\n          <a className=\"member\" href=\"#\">\n            Plus 会员\n          </a>\n        </li>\n        <Dropdown overlay={menu}>\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\n            中 <DownOutlined />\n          </a>\n        </Dropdown>\n        <li>\n          <RightSquareOutlined />\n        </li>\n        <li>\n          <BellOutlined />\n        </li>\n        <li>\n          <Link to='/profile'><UserOutlined /></Link>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Header;\n","/Users/apple/daliy/leetCode/src/pages/login/store/index.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/footer/Footer.tsx",["409"],"import React,{ FC, useEffect, useRef, useState } from 'react'\nimport './style.scss'\nimport { exeCode, submitCode } from '../../../../apis/comments'\nimport { message } from 'antd'\nimport { BarsOutlined, SwapOutlined, LeftOutlined, RightOutlined, CaretRightOutlined, } from '@ant-design/icons'\nimport { connect } from 'react-redux'\nimport { submitCodeaAction, ExeCodeRes, exeCodeResAction } from '../../store/actions'\ninterface CodeRes {\n    \"state\": string,\n    \"input\": string,\n    \"output\": string,\n    \"exceptResult\": string\n}\n\ninterface Props {\n    code:string,\n    disSubmtCode:(key:string) => void,\n    disExeCodeRes:(res:ExeCodeRes) => void\n}\n\nconst Footer: FC<Props> = (props) => {\n    const {code, disSubmtCode, disExeCodeRes} = props\n    const codeResult = useRef<null | HTMLDivElement>(null)\n    const [codeRes, setCodeRes] = useState<CodeRes | ''>('')\n    async function handleExeCode() {\n        const res = await exeCode('questionId',code, 'testCode')\n        if (res.data.code === 200) {\n            setCodeRes(res.data.data)\n            codeResult.current!.style.display = 'block'\n        } else {\n            message.error('网络错误！')\n        }\n    }\n    function handleCloseExeCode() {\n        codeResult.current!.style.display = 'none'\n    }\n  \n    async function handleCodeSubmit () {\n        const res = await submitCode ('questionId',code)\n        \n        if(res.data.code === 200){\n            disSubmtCode('4')\n            disExeCodeRes(res.data.data)\n            message.success('提交成功')\n        }else{\n            message.error('提交失败')\n        }    \n    }\n    return (\n        <>\n            <ul className='exe-code-box'>\n                <li><BarsOutlined />题目列表</li>\n                <li><SwapOutlined />随机一题</li>\n                <li className='before'><LeftOutlined />上一题</li>\n                <li className='totalnumber'>1/1982</li>\n                <li>下一题<RightOutlined /></li>\n                <li>控制台</li>\n                <li>贡献</li>\n                <li onClick={handleExeCode} className='execode'><CaretRightOutlined />执行代码</li>\n                <li onClick={handleCodeSubmit} className='submit'>提交</li>\n            </ul>\n            <div ref={codeResult} className='code-result'>\n                <span className='header'>\n                    执行结果\n                <span onClick={handleCloseExeCode} className='close'>X</span>\n                </span>\n                {\n                    codeRes?<ul className='result-info'>\n                    <li>状态 <span >{codeRes.state}</span></li>\n                    <li>输入 <span className=\"info\">{codeRes.input}</span></li>\n                    <li>输出 <span className=\"info\">{codeRes.output}</span></li>\n                    <li>结果 <span className=\"info\">{codeRes.exceptResult}</span></li>\n                </ul>:''\n                }\n            </div>\n        </>\n\n    )\n}\nconst mapState = (state:any) => {\n    return {\n        code:state.editorConfig.code\n    }\n}\nconst mapDispatch = (dispatch:any) => {\n    return {\n        disSubmtCode(key:string){\n            dispatch(submitCodeaAction(key))\n        },\n        disExeCodeRes(res:ExeCodeRes) {\n            dispatch(exeCodeResAction(res))\n        }\n    }\n}\n\nexport default connect(mapState, mapDispatch)(Footer)","/Users/apple/daliy/leetCode/src/pages/login/components/WindowWarp/windowWarp.tsx",[],"/Users/apple/daliy/leetCode/src/pages/questionlist/index.jsx",["410"],"import React, { useEffect } from 'react'\nimport Sider from './components/indexNav/indexNav'\nimport ListIndex from './components/list/list'\nimport '../questionlist/QuestionList.css'\nimport { useSelector } from 'react-redux'\nimport { useListData } from './store/action'\nimport './index.css'\n\n\nconst Index = (props) =>{\n    let {data,loading} = useSelector(state=>state.list)\n    let getData = useListData()\n    // let {scearch} = useLocation()\n    // let {difficulty,status} = qs.parse(search.substr(1))\n    useEffect(()=>{\n        getData()\n       },[])\n    return <div className='login' id='indexWrap'>\n        <Sider />\n        <ListIndex\n            data={data}\n            loading={loading}    \n        />\n        <div></div>\n    </div>\n}\n\nexport default Index","/Users/apple/daliy/leetCode/src/pages/resetpassword/pages/validation/components/ResetPwdWindow/resetPwdWindow.tsx",["411","412"],"import React, { createContext, useState } from \"react\"\nimport ResetPwdMain from '../ResetPwdMain/resetPwdMain'\nimport './index.scss'\n\n\n\nconst ResetPwdWindow: React.FC = () => {\n    return (\n        <div\n            className='resetpwd-window'\n        >\n            <ResetPwdMain />\n        </div>\n    )\n}\n\nexport default ResetPwdWindow","/Users/apple/daliy/leetCode/src/pages/profile/store/sagas/sagaRoot.js",[],"/Users/apple/daliy/leetCode/src/pages/profile/store/reducers/profile_reqHistory.js",[],"/Users/apple/daliy/leetCode/src/pages/questionlist/store/reudcer/list.js",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/right/Right.js",[],"/Users/apple/daliy/leetCode/src/pages/login/store/saga/rootSaga.js",["413"],"import { takeEvery } from \"redux-saga/effects\";\n\n\nfunction* watchFetchData() {\n  \n}\n\nexport default watchFetchData;\n","/Users/apple/daliy/leetCode/src/pages/questionindex/store/index.ts",[],"/Users/apple/daliy/leetCode/src/pages/login/store/reducers/index.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/Left.js",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/store/actions.ts",[],"/Users/apple/daliy/leetCode/src/apis/comments.ts",[],"/Users/apple/daliy/leetCode/src/pages/login/components/LoginWindow/loginWindow.tsx",["414"],"import React, { CSSProperties, useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport LoginFooter from '../LoginFooter/loginFooter'\nimport LoginMain from '../LoginMain/loginMain'\nimport { FormTypes } from '../../store/reducers/loginMain';\nimport { IRootState } from '../../store/reducers';\nimport './style.scss';\n\n\ninterface IMapState {\n    formType: FormTypes\n}\n\ninterface IBaseProps extends IMapState {\n    children?: React.ReactNode\n    style?: CSSProperties\n}\n\n\nconst LoginWindow: React.FC<IBaseProps> = (props) => {\n\n    const {formType} = props;\n\n    const phoneLoginStyle: CSSProperties = {\n        minHeight: '514px',\n        top: '50%'\n    };\n\n    const pwdLoginStyle: CSSProperties = {\n        minHeight: '462px', \n        top: '54%'\n    };\n\n    const usaLoginStyle: CSSProperties = {\n        minHeight: '384px',\n        top: '60%'\n    }\n\n    const emailRegisterStyle: CSSProperties = {\n        minHeight: '514px',\n        top: '50%'\n    }\n\n    const [windowStyle, setWindowStyle] = useState(phoneLoginStyle);\n\n    const getLoginWindowStyle = (): CSSProperties => {\n        switch(formType) {\n            case FormTypes.EmailRegisterForm:\n                return emailRegisterStyle;\n\n            case FormTypes.PhoneLoginForm:\n                return phoneLoginStyle;\n\n            case FormTypes.USALoginForm:\n                return usaLoginStyle;\n\n            case FormTypes.PwdLoginForm: \n                return pwdLoginStyle;\n            default:\n                return phoneLoginStyle;\n        }\n    }\n\n    useEffect(() => {\n        setWindowStyle(getLoginWindowStyle());\n    }, [formType]);\n    \n    return (\n        <div \n            className='login-window' \n            style={windowStyle}>\n            <LoginMain />\n            {/* 只要是 USALoginForm 则把 Footer 隐藏起来 */}\n            <LoginFooter style={{\n                display: formType === FormTypes.USALoginForm ? 'none' : 'block'\n            }}/>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state: IRootState): IMapState => ({\n    formType: state.loginMain.form\n});\n\nexport default connect(mapStateToProps, {})(LoginWindow);","/Users/apple/daliy/leetCode/src/pages/profile/components/Side/index.jsx",[],"/Users/apple/daliy/leetCode/src/pages/profile/components/Head/index.jsx",[],"/Users/apple/daliy/leetCode/src/pages/profile/components/Section/index.jsx",[],"/Users/apple/daliy/leetCode/src/pages/profile/store/redux_test.js",[],"/Users/apple/daliy/leetCode/src/pages/profile/store/sagas/req_questionInfo.js",["415"],"import { call, put, takeEvery, } from 'redux-saga/effects'\n// import { reqQuestion } from '../../API/index'\nimport { GETQUESTION } from '../redux_test'\n\n\nfunction* reqQuestionInfo(action) {\n\n    yield put({ type: GETQUESTION })\n}\n\n\nfunction* watchreqQuestionInfo() {\n    yield takeEvery(\"getQues\", reqQuestionInfo);\n}\n\nexport default watchreqQuestionInfo","/Users/apple/daliy/leetCode/src/pages/profile/store/sagas/req_historySaga.js",["416"],"import { call, put, takeLatest } from 'redux-saga/effects'\n// import { reqPersonal } from '../../API/index'\nimport { GETLISTOFTOPICS } from '../redux_test'\n\n\nfunction* reqHistoryData(action) {\n\n    yield put({ type: GETLISTOFTOPICS })\n}\n\n\nfunction* watchReqHistoryData() {\n    yield takeLatest(\"getList\", reqHistoryData);\n}\n\nexport default watchReqHistoryData","/Users/apple/daliy/leetCode/src/pages/resetpassword/pages/validation/components/ResetPwdMain/resetPwdMain.tsx",[],"/Users/apple/daliy/leetCode/src/pages/questionlist/components/indexNav/indexNav.jsx",[],"/Users/apple/daliy/leetCode/src/pages/questionlist/components/list/list.jsx",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/mid/index.tsx",[],"/Users/apple/daliy/leetCode/src/mock/questionIndex.js",[],"/Users/apple/daliy/leetCode/src/pages/questionlist/store/action/index.js",[],"/Users/apple/daliy/leetCode/src/pages/login/store/reducers/loginMain.ts",[],"/Users/apple/daliy/leetCode/src/apis/index.ts",["417"],"import axios from 'axios'\nimport { message } from 'antd'\nimport { storage } from '../utils/shared'\n\ntype PendingQueue = ((...args: any) => void)[]\n\nconst BASE_URL = 'http://localhost:3000/api'\n\nconst CONNECT_LIMIT = 6 // 最大网络连接数\nconst TIMEOUT = 1000 * 10 //最大请求到期时间 10s\n\nexport enum ErrorCode {\n  Success = 200,\n  BadRequest = 400, /**参数类型或者字段错误，只展示给我们开发者看，我会log到控制台 */\n  UnAuthorized = 401,\n  Abort = 520,\n  Connect_Fail = 1314, /**由于用户网络断了等特殊情况导致的请求失败 */\n}\nconst CodeMap = {\n  [ErrorCode.Success]: \"请求成功\",\n  [ErrorCode.UnAuthorized]: \"请登陆\",\n  [ErrorCode.Connect_Fail]: \"网络连接失败\",\n  [ErrorCode.BadRequest]: \"参数异常\",\n  [ErrorCode.Abort]: \"请求取消\"\n}\nlet now = window.performance\n  ? () => performance.now()\n  : () => Date.now();\n\n/** 当前请求数 */\nlet requestNum = 0\nlet pendingQueue: PendingQueue = []\nlet isRefreshing = false\n\n/** 不需要token的请求 */\nconst whiteList = new Set([\n  '/user/resetToken',\n  '/user/login',\n  '/user/register',\n  '/user/checkEmail',\n  '/user/checkUserId',\n  '/user/sendActiveMail',\n  '/user/requestcode',\n  '/user/logout',\n  '/user/findBackPassword',\n  '/user/checkUserLegality',\n  '/token',\n  '/course/queryCourse',\n])\n\nconst request = axios.create({\n  baseURL: BASE_URL,\n  timeout: TIMEOUT\n})\n\nrequest.interceptors.request.use(\n  async config => {\n    if (!storage.get('token') && !whiteList.has(config.url!)) {\n      config.cancelToken = new axios.CancelToken(c => c())\n      return config\n    }\n\n    if (!config.headers.priority && (isRefreshing || requestNum >= CONNECT_LIMIT)) { //如果正在请求新的token，代表当前token是过期了的\n      try {\n        await block() //等待前面的请求完\n      } catch (e) {//这里表示等待时间过长, 仍然取消请求\n        config.cancelToken = new axios.CancelToken(c => c())\n        config.data.message = '超时'\n        return config\n      }\n    }\n    config.headers = {\n      token: storage.get(\"token\") || \"\",\n      contentType: 'application/json;charset=utf-8',\n    }\n    return config\n  },\n  err => {\n    console.log('异常未知情况造成的错误'); /**正常情况应该永远不会出现这里 */\n    console.log(err);\n  }\n)\n\nrequest.interceptors.response.use(\n  async res => {\n    try {\n      return res\n    } finally {\n      requestNum--\n      send()\n    }\n  },\n  err => {\n    /** 只有网络连接失败和取消请求（没有携带token）会走到这里 */\n    try {\n      if (axios.isCancel(err)) { //是被取消的请求\n        if (!storage.get('token')) { //因为没有token取消的，需要重新登陆\n          return {\n            ...err,\n            data: {\n              message: \"未登录\",\n              code: ErrorCode.UnAuthorized\n            }\n          }\n        }\n        return {\n          data: {\n            message: err.data.message,\n            code: ErrorCode.Abort,\n            data: err\n          }\n        }\n      }\n      /** 网络异常 或者 请求代码执行出错，可能是参数错误，\n       *  比如onClick={func}, 把e传进了请求参数导致axiosJSON.stringify报错\n       */\n      return {\n        data: {\n          data: err,\n          message: \"网络异常\",\n          code: ErrorCode.Connect_Fail\n        }\n      }\n    } finally {\n      requestNum--\n      send()\n    }\n  }\n)\n\nrequest.interceptors.response.use(\n  (res: any) => {\n    const code = res.data.code as ErrorCode\n\n    switch (code) {\n      case ErrorCode.Success: {\n        const newTK = res.headers.token\n        if (newTK && newTK !== res.config.headers.token) {\n          storage.set(\"token\", res.headers.token)\n        }\n        return res.data\n      }\n      default:\n        message.info(CodeMap[code])\n        return {\n          code: code,\n          message: res.data.message,\n          data: res.data?.data\n        }\n    }\n  }\n)\n\nfunction block() {\n  return new Promise((resolve, reject) => {\n    const timerId: number = window.setTimeout(() => {\n      reject(undefined)\n    }, TIMEOUT)\n    pendingQueue.push(() => {\n      clearTimeout(timerId)\n      resolve(undefined)\n    })\n  })\n}\n\nfunction send() {\n  if (!isRefreshing && pendingQueue.length) {\n    const resolve = pendingQueue.shift()!\n    resolve()\n  }\n}\n\nexport default request\n\nexport interface Response<T = any> {\n  code: number,\n  message: string,\n  data: T\n}","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/loginMain.tsx",["418","419","420"],"import React, { useRef, useState } from 'react';\nimport {Dispatch} from 'redux'\nimport {connect} from 'react-redux'\nimport { Card, Button } from 'antd';\nimport { CaretRightOutlined, RightOutlined } from '@ant-design/icons'\nimport {useHistory} from 'react-router-dom'\nimport PhoneLoginForm from './PhoneLoginForm/phoneLoginForm'\nimport PwdLoginForm from './PwdLoginForm/pwdLoginForm'\nimport USALoginForm from './USALoginForm/usaLoginForm';\nimport {FormTypes} from '../../store/reducers/loginMain'\nimport {IRootState} from '../../store/reducers/index'\nimport { toEmailRegisterForm, toPhoneLoginForm, toPwdLoginForm, toResetPwdForm, ToUSALoginForm } from '../../store/actions/loginMain';\nimport './style.scss'\nimport EmailRegisterForm from './EmailRegisterForm/emailRegisterForm';\n\nenum CardTitle {\n    Welcome = '欢迎使用力扣',\n    PwdLogin = '账号密码登录',\n    EmailRegister = '邮箱注册',\n    USAccountLogin = '美国站账号登录'\n}\n\nenum LinkBtnName {\n    PwdLogin = '账号密码登录',\n    CaptchaLogin = '验证码登录',\n    EmailRegister = '邮箱注册',\n    ForgetPwd = '忘记密码',\n    HasUSAccount = '已有美国站账号',\n    BackCH = '返回中文站账号登录'\n}\n\n\n\ninterface IMapState {\n    formType?: FormTypes\n}\n\ninterface IMapDispatch {\n    toPwdLoginForm: () => void;\n    toPhoneLoginForm: () => void;\n    toEmailRegisterForm: () => void;\n    toResetPwdForm: () => void;\n    toUSALoginForm: () => void;\n}\n\ninterface IBaseProps extends IMapState, IMapDispatch {\n    children?: React.ReactNode\n}\n\n\nconst LoginMain: React.FC<IBaseProps> = (props) => {\n\n\n    // state\n    const {formType} = props;\n\n    // dispatch\n    const {\n        toEmailRegisterForm,\n        toPhoneLoginForm,\n        toPwdLoginForm,\n        toResetPwdForm,\n        toUSALoginForm\n    } = props;\n\n    const betweenLinkBtnStyle = {\n        display: formType === FormTypes.EmailRegisterForm ? 'none' :\n                 formType === FormTypes.USALoginForm ? 'none' : 'block'\n    }\n\n    const centerLinkBtnStyle = {\n        display: formType === FormTypes.PhoneLoginForm ? 'flex' :\n                 formType === FormTypes.EmailRegisterForm ? 'flex' :\n                 formType === FormTypes.USALoginForm ? 'flex' : 'none'\n    }\n\n    let history = useHistory();\n\n    const leftConvert = () => {\n        if (formType === FormTypes.PhoneLoginForm ) {\n            toPwdLoginForm();\n        } else {\n            toPhoneLoginForm();\n        }\n    }\n\n    const rightConvert = () => {\n        if (formType === FormTypes.PwdLoginForm) {\n            toPhoneLoginForm();\n            history.push('/resetpassword');\n        } else {\n            toEmailRegisterForm();\n        }\n    }\n\n    const centerConvert = () => {\n        switch(formType) {\n            case FormTypes.PhoneLoginForm: \n                toUSALoginForm();\n                break;\n            case FormTypes.USALoginForm:\n                toPhoneLoginForm();\n                break;\n            case FormTypes.EmailRegisterForm:\n                toPhoneLoginForm();\n                break;\n        }\n    }\n\n    return (\n        <Card \n            className='login-window-main'\n            title={\n                formType === FormTypes.PhoneLoginForm ? CardTitle.Welcome :\n                formType === FormTypes.PwdLoginForm ? CardTitle.PwdLogin : \n                formType === FormTypes.EmailRegisterForm ? CardTitle.EmailRegister :\n                CardTitle.USAccountLogin \n            }\n            bordered={false}\n        >\n\n            <PhoneLoginForm  style={{display: formType === FormTypes.PhoneLoginForm ? 'block' : 'none'}} />\n            <PwdLoginForm style={{display: formType === FormTypes.PwdLoginForm ? 'block' : 'none'}} />\n            <EmailRegisterForm style={{display: formType === FormTypes.EmailRegisterForm ? 'block' : 'none'}} />\n            <USALoginForm style={{display: formType === FormTypes.USALoginForm ? 'block' : 'none'}} />\n\n          <div className='link-button-warp'>\n                <Button \n                    className='link-button' \n                    type='link' \n                    onClick={leftConvert}\n                    style={betweenLinkBtnStyle}\n                >\n                    {\n                        formType === FormTypes.PhoneLoginForm ? LinkBtnName.PwdLogin :\n                        LinkBtnName.CaptchaLogin\n                    }\n                </Button>\n\n\n                <Button \n                    className='link-button' \n                    type='link' \n                    onClick={rightConvert}\n                    style={betweenLinkBtnStyle}\n                >\n                    {\n                        formType === FormTypes.PhoneLoginForm ? LinkBtnName.EmailRegister : \n                        LinkBtnName.ForgetPwd\n                    }\n                </Button>\n            </div>\n\n            <div className='us-username' style={centerLinkBtnStyle}>\n                <Button className='link-button' type='link' onClick={centerConvert}>\n                    {\n                        formType === FormTypes.PhoneLoginForm ? LinkBtnName.HasUSAccount : \n                        formType === FormTypes.USALoginForm ? LinkBtnName.BackCH :\n                        LinkBtnName.CaptchaLogin\n                    }\n                    <CaretRightOutlined \n                        style={{ \n                            fontSize: '12px', marginLeft: '2px',\n                            display: formType === FormTypes.PhoneLoginForm ? 'inline' : 'none'\n                        }}     \n                    />\n                    <RightOutlined \n                        style={{ \n                            fontSize: '10px', marginLeft: '2px',\n                            display: formType === FormTypes.USALoginForm ? 'inline' : 'none' \n                        }} \n                    />\n                </Button>\n            </div>\n        </Card>\n    )\n}\n\nconst mapStateToProps = (state: IRootState): IMapState => ({\n    formType: state.loginMain.form\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch): IMapDispatch => ({\n    toEmailRegisterForm: () => void dispatch(toEmailRegisterForm()),\n    toPhoneLoginForm: () => void dispatch(toPhoneLoginForm()),\n    toPwdLoginForm: () => void dispatch(toPwdLoginForm()),\n    toResetPwdForm: () => void dispatch(toResetPwdForm()),\n    toUSALoginForm: () => void dispatch(ToUSALoginForm())\n    \n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginMain);","/Users/apple/daliy/leetCode/src/pages/login/components/LoginFooter/loginFooter.tsx",[],"/Users/apple/daliy/leetCode/src/pages/resetpassword/pages/validation/components/ResetPwdMain/ResetForm/resetForm.tsx",["421"],"import React from 'react';\nimport ProForm, { ProFormText, ProFormCaptcha } from '@ant-design/pro-form';\nimport { Button, notification, message } from 'antd';\nimport { SmileOutlined } from '@ant-design/icons';\n\nexport enum ResetFormType {\n    ByPhoneReset = 'byPhoneReset',\n    ByEmailReset = 'byEmailReset'\n}\n\n\n\ninterface OtherProps {\n    style?: {[key: string]: string};\n    [key: string]: any;\n}\n\ninterface BaseResetFormProps extends OtherProps{\n    type: ResetFormType;\n}\n\nconst ResetForm: React.FC<BaseResetFormProps > = (props) => {\n\n    const {\n        type,\n        style\n    } = props;\n\n\n    const waitTime = (time: number = 100) => {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, time);\n        });\n    };\n\n\n    const openNotification = () => {\n        notification.open({\n            message: 'Notification Title',\n            description:\n                '我们已经给您发送了一封电子邮件，请稍等片刻。如果过了10分钟后还未收到，请及时联系我们。',\n            icon: <SmileOutlined style={{ color: '#108ee9' }} />,\n            duration: 5,\n            placement: 'topLeft'\n        });\n    };\n\n    \n    if (type === ResetFormType.ByPhoneReset) {\n        return (\n            <ProForm\n                style={style}\n                onFinish={async () => {\n                    await waitTime(2000);\n\n\n                    // message.success('');\n                }}\n                submitter={{\n                    searchConfig: {\n                        submitText: '重设我的密码',\n                    },\n                    render: (_, dom) => dom.pop(),\n                    submitButtonProps: {\n                        size: 'large',\n                        style: {\n                            width: '100%',\n                        },\n                    },\n                }}\n            >\n                <ProFormText\n                    fieldProps={{\n                        size: 'large',\n                        // prefix: <MobileOutlined />,\n                    }}\n                    name=\"phone\"\n                    placeholder=\"手机号\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入手机号!',\n                        },\n                        {\n                            pattern: /^1\\d{10}$/,\n                            message: '不合法的手机号格式!',\n                        },\n                    ]}\n                />\n                <ProFormCaptcha\n                    fieldProps={{\n                        size: 'large',\n                        // prefix: <MailOutlined />,\n                    }}\n                    captchaProps={{\n                        size: 'large',\n                    }}\n                    phoneName=\"phone\"\n                    name=\"captcha\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入验证码',\n                        },\n                    ]}\n                    placeholder=\"验证码\"\n                    onGetCaptcha={async (phone) => {\n                        await waitTime(1000);\n                        message.success(`手机号 ${phone} 验证码发送成功!`);\n                    }}\n                />\n            </ProForm>\n        );\n    } else {\n        return (\n            <ProForm\n                style={style}\n                onFinish={async () => {\n                    await waitTime(2000);\n                    openNotification();\n                }}\n                submitter={{\n                    searchConfig: {\n                        submitText: '重设我的密码',\n                    },\n                    render: (_, dom) => dom.pop(),\n                    submitButtonProps: {\n                        size: 'large',\n                        style: {\n                            width: '100%',\n                        },\n                    },\n                }}\n            >\n                <ProFormText\n                    fieldProps={{\n                        size: 'large',\n                        // prefix: <MobileOutlined />,\n                    }}\n                    name=\"phone\"\n                    placeholder=\"请输入邮箱\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入邮箱!',\n                        },\n                        {\n                            pattern: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/,\n                            message: '不合法的邮箱格式!',\n                        },\n                    ]}\n                />\n\n            </ProForm>\n        );\n    }\n\n}\n\nexport default ResetForm;","/Users/apple/daliy/leetCode/src/pages/questionlist/mock/index.js",["422"],"import Mock from 'mockjs'\nimport data from '../store'\n\nconst Random = Mock.Random\nconst dataList = []\nfor(let i = 10;i<100;i++){\n    const template ={\n        \"code\":1,\n        \"title\":Random.string(12,30),\n        \"questionId\":Random.string(11),\n        \"answer_num\":Random.integer(200,1000),\n        \"difficulty\":\"简单\",\n        \"passrate\":Random.integer(0,100)+'%',\n        \"status\":\"未完成\"\n    }\n    dataList.push(template)\n}\n\nMock.mock('/question/list','get',function() {\n    return Mock.mock({\n            \"code\": 1,\n            \"data\": dataList,\n            \"message\": \"请求成功！\"\n          })\n})\n\n\n","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-right/index.tsx",["423"],"import { FC } from \"react\";\nimport { Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport \"./style.scss\";\nimport { dispatchShowDetail } from \"../store\";\nimport { wrapRequest } from \"../../../../../../utils/hooks\";\nimport {\n  DetailInfo,\n  fetchDetailSolution,\n} from \"../../../../../../apis/solution\";\nimport { RootState } from \"../../../../store\";\nimport { Flags } from \"../../../../../../utils/shared\";\nimport { LoadingOutlined, UserOutlined } from \"@ant-design/icons\";\nimport Comment from \"../../left/components/comment\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport BraftEditor from \"braft-editor\";\nimport Loading from \"../../../../../../components/loading\";\n\ninterface Props {\n  dispatch: Dispatch;\n  answerId: number;\n}\n\nconst useGetDetail = wrapRequest(fetchDetailSolution);\n\nconst SolutionRight: FC<Props> = ({ dispatch, answerId }) => {\n  const close = () => {\n    dispatch(dispatchShowDetail(false));\n  };\n  const [data, flag] = useGetDetail(answerId);\n\n  return (\n    <div className=\"solution-right\">\n      <header className=\"flex a-center\">\n        <button className=\"close-btn\" onClick={close}>\n          关闭\n        </button>\n      </header>\n      <div className=\"sr-content\">\n        {flag === Flags.Pending ? (\n          <div className=\"flex j-center a-center\">\n            <Loading size=\"large\" />\n          </div>\n        ) : flag === Flags.Success ? (\n          <Main {...data} />\n        ) : (\n          \"网络异常\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst Main: FC<DetailInfo> = (props) => (\n  <div className=\"main\">\n    <div className=\"solution-header flex a-center\">\n      <Avatar icon={<UserOutlined />} src={props.image} alt=\"头像\" />\n      <span>{props.userName}</span>\n    </div>\n    <BraftEditor\n      value={BraftEditor.createEditorState(props.content)}\n      controls={[]}\n      readOnly={true}\n    />\n    <Comment />\n  </div>\n);\n\nexport default connect((state: RootState) => ({\n  answerId: state.solution.answerId,\n}))(SolutionRight);\n","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-left/index.tsx",[],"/Users/apple/daliy/leetCode/src/pages/questionlist/components/search/index.jsx",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/components/comment/index.tsx",["424","425","426","427"],"import { Divider, message, Select } from \"antd\";\nimport { Components } from \"antd/lib/date-picker/generatePicker\";\nimport {\n  createContext,\n  FC,\n  memo,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { ErrorCode } from \"../../../../../../../apis\";\nimport {\n  Comment,\n  queryComments,\n  sendComment,\n} from \"../../../../../../../apis/comments\";\nimport Loading from \"../../../../../../../components/loading\";\nimport { useGetQuestionId } from \"../../../../../../../utils/hooks\";\nimport { storage } from \"../../../../../../../utils/shared\";\nimport MdEditor from \"../mdEditor\";\nimport Common from \"./components/Common\";\n\ninterface CommentsProps {}\n\n/**\n * 为了在其它编辑器打开的时候关闭其它的，因此需要给每一个设置一个id\n */\nexport const ActiveEditorId = createContext({\n  id: -1,\n  setId(id: number) {},\n});\n\nconst CommentFC: FC<CommentsProps> = () => {\n  const [comments, setComments] = useState<Comment[] | null>(null);\n  const [curPage, setCurPage] = useState(1);\n  const [pageNum, setPageNum] = useState(1);\n  const questionId = useGetQuestionId();\n  const [sortBy, setSortBy] = useState(-1); //0: 热度 1: 时间\n\n  const getComments = useCallback(async (pageNum: number, parentId: any) => {\n    const res = await queryComments(pageNum, parentId);\n    if (res.code === ErrorCode.Success) {\n      setPageNum(res.data.totalPage);\n      setComments(res.data.g);\n      setSortBy(0)\n    } else {\n      setPageNum(0);\n      setComments([]);\n    }\n  }, []);\n\n  const updateComments = (at: string, content: string) => {\n    const newVal = comments?.slice();\n    if (newVal) {\n      newVal.push({\n        avatar: storage.get(\"avatar\")!,\n        content,\n        userId: storage.get(\"userId\")!,\n        nickname: storage.get(\"username\")!,\n        thumbup: 0,\n        replyNum: 0,\n        commentTime: new Date().toString(),\n        islike: 0,\n        commentId: Math.random() * 10000000 + \"\",\n      });\n      setComments(newVal);\n      setSortBy(1);\n    }\n  };\n\n  useEffect(() => {\n    getComments(curPage, questionId);\n  }, [curPage, questionId, getComments]);\n\n  const sendClick = async (content: string) => {\n    // if (questionId) {\n    //   sendComment(questionId, storage.get(\"userId\")!, content);\n    //   const res = await sendComment(\"1\", \"狂拽酷炫吊炸天\", content);\n    //   if (res.code === ErrorCode.Success) {\n    //   }\n    // } else {\n    //   message.info({\n    //     content: \"请先登陆\",\n    //   });\n    // }\n    const res = await sendComment(\"1\", \"狂拽酷炫吊炸天\", content);\n    if (res.code === ErrorCode.Success) {\n      updateComments(\"\", content);\n    }\n  };\n\n  useEffect(() => {\n    setComments((oldComments) => {\n      const val = oldComments?.slice();\n      if (val) {\n        switch (sortBy) {\n          case 0:\n            val.sort((next, prev) => prev.thumbup - next.thumbup);\n            break;\n          case 1:\n            val.sort(\n              (next, prev) =>\n                Date.parse(prev.commentTime) - Date.parse(next.commentTime)\n            );\n            break;\n        }\n      }\n      return val || oldComments;\n    });\n  }, [sortBy]);\n\n  const [id, setId] = useState(-1);\n\n  return (\n    <ActiveEditorId.Provider\n      value={{\n        id,\n        setId,\n      }}\n    >\n      <div className=\"comment-main\">\n        <div className=\"flex j-between\">\n          <div>\n            <span\n              style={{\n                fontWeight: 8000,\n                fontSize: \"20px\",\n                fontFamily: \"Tahoma\",\n                color: \"#595959\",\n                marginRight: \"5px\",\n              }}\n            >\n              {768}\n            </span>\n            条评论\n          </div>\n          <Select\n            onChange={(value: number) => {\n              setSortBy(value);\n            }}\n            defaultValue={0}\n          >\n            <Select.Option value={0}>热度</Select.Option>\n            <Select.Option value={1}>时间</Select.Option>\n          </Select>\n        </div>\n        <MdEditor onSubmit={sendClick as any} />\n        <Divider\n          style={{\n            borderTopColor: \"#bfbfbf\",\n          }}\n        >\n          <span\n            style={{\n              color: \"#bfbfbf\",\n              fontSize: \"14px\",\n            }}\n          >\n            精选评论\n          </span>\n        </Divider>\n        {comments ? (\n          comments.map((item) => (\n            <Common\n              key={item.commentId}\n              userName={item.nickname}\n              avatar={item.avatar}\n              content={item.content}\n              thumbup={item.thumbup}\n              replyNum={item.replyNum}\n              parentId={questionId!}\n              commentTime={item.commentTime}\n              commentId={item.commentId}\n              islike={item.islike}\n            />\n          ))\n        ) : (\n          <div className=\"flex j-center\">\n            <Loading size=\"large\" />\n          </div>\n        )}\n      </div>\n    </ActiveEditorId.Provider>\n  );\n};\n\nexport default memo(CommentFC);\n","/Users/apple/daliy/leetCode/src/pages/questionlist/components/randomStart/index.jsx",["428"],"import React from 'react'\nimport { Button,Card } from \"antd\";\n\nconst RandomStart = (props) =>{\n    return  (<div id=\"button_wrap\">\n        <Button>随机开始</Button>\n    </div>\n        \n    )\n}\n\nexport default RandomStart;","/Users/apple/daliy/leetCode/src/pages/login/store/actions/loginMain.ts",[],"/Users/apple/daliy/leetCode/src/utils/shared.ts",[],"/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/USALoginForm/usaLoginForm.tsx",[],"/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/EmailRegisterForm/emailRegisterForm.tsx",["429","430","431","432","433"],"import React, { CSSProperties, useEffect, useState } from 'react'\nimport { Form, Input, Button, message } from 'antd'\nimport request from '../../../../../apis/index'\nimport './style.scss';\nimport { useCaptcha } from '../../../../../utils/hooks';\n\n\ninterface IBaseProps {\n    children?: React.ReactNode;\n    style?: CSSProperties;\n}\n\ninterface IFormValues {\n    email: string,\n    password: string,\n    captcha: string\n}\n\nenum InputType {\n    Email = 'email',\n    Password = 'password',\n    Captcha = 'captcha'\n}\n\ninterface IValueObj {\n    email?: string;\n    password?: string;\n    captcha?: string;\n}\n\nconst EmailRegisterForm: React.FC<IBaseProps> = (props) => {\n    const { style } = props;\n\n    const [isPwdInputOnBlur, setIsPwdInputOnBlur] = useState(false);\n    const [isEmailInputOnBlur, setIsEmailInputOnBlur] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [captcha, setCaptcha] = useState('');\n\n\n\n    const onFinish = (values: IFormValues) => {\n        const { email, password, captcha } = values;\n        console.log(email, password, captcha);\n\n        request.post('/user/register', {\n            registerBody: email,\n            password,\n            authCode: Number(captcha),\n            method: 'email'\n\n        }).then(value => {\n            message.success('注册成功！')\n        }).catch(reason => {\n            console.log(reason);\n        });\n    }\n\n    const onValuesChange = (valueObj: IValueObj) => {\n        const changeType = Object.keys(valueObj)[0];\n        switch(changeType) {\n            case InputType.Email:\n                const email = valueObj.email as string;\n                setEmail(email)\n                break;\n            case InputType.Password:\n                const password = valueObj.password as string;\n                setPassword(password)\n                break;\n            case InputType.Captcha:\n                const captcha = valueObj.captcha as string;\n                setCaptcha(captcha)\n                break;\n        }\n    }\n\n    const [getCaptcha, IBtnStatus] = useCaptcha('email', email, 5, []);\n\n    return (\n        <Form\n            className='email-register-form'\n            style={style}\n            initialValues={{\n                email: '',\n                password: '',\n                captcha: ''\n            }}\n            onValuesChange={onValuesChange}\n            onFinish={onFinish}\n        >\n            <Form.Item\n                className='email-register-form-item email-register-email-item'\n                name='email'\n                rules={[\n                    { required: true, message: '请输入邮箱', validateTrigger: 'onBlur' },\n                    (/* { getFieldValue } */) => ({\n                        validator(_, value) {\n                            const email = value as string;\n\n                            const reg = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n                            const isValid = reg.test(email);\n                            if (!isValid && isEmailInputOnBlur && email != '') {\n                                return Promise.reject(new Error('邮箱地址不合法'))\n                            }\n\n                            return Promise.resolve();\n                        },\n                    })\n\n                ]}\n                validateTrigger={['onChange', 'onBlur']}\n            >\n                <Input\n                    className='email-register-input email-register-email-input'\n                    placeholder='输入邮箱'\n                    onBlur={() => setIsEmailInputOnBlur(true)}\n                    onFocus={() => setIsEmailInputOnBlur(false)}\n                />\n            </Form.Item>\n\n            <Form.Item\n                className='email-register-form-item email-register-password-item'\n                name='password'\n                rules={[\n                    { required: true, message: '请输入密码', validateTrigger: 'onBlur' },\n                    (/* { getFieldValue } */) => ({\n                        validator(_, value) {\n                            const password = value as string;\n\n                            const reg = /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{8,30}$/;\n                            const isValid = reg.test(password) && password.length >= 8;\n                            if (!isValid && isPwdInputOnBlur && password != '') {\n                                return Promise.reject(new Error('密码须为不小于8位的数字及字母组合'))\n                            }\n                            return Promise.resolve();\n                        }\n                    })\n                ]}\n                validateTrigger={['onBlur', 'onChange']}\n            >\n                <Input.Password\n                    className='email-register-input email-register-password-input'\n                    placeholder='输入密码'\n                    onBlur={() => setIsPwdInputOnBlur(true)}\n                    onFocus={() => setIsPwdInputOnBlur(false)}\n                />\n            </Form.Item>\n            <div className='captcha-item-warp'>\n                <Form.Item\n                    className='email-register-form-item email-register-captcha-item input-item'\n                    name='captcha'\n                    rules={[\n                        { required: true, message: '请输入验证码', validateTrigger: 'onBlur' }\n                    ]}\n                    validateTrigger={['onChange', 'onBlur']}\n                >\n                    <Input\n                        className='email-register-input email-register-captcha-input'\n                        placeholder='输入验证码'\n                    />\n\n                </Form.Item>\n\n\n                <Form.Item\n                    className='email-register-form-item email-register-captcha-item button-item'\n                >\n                    <Button\n                        onClick={getCaptcha}\n                        // loading={true}\n                        {...IBtnStatus.btnProps}\n                    >\n                        {IBtnStatus.children}\n                </Button>\n                </Form.Item>\n            </div>\n\n            <Form.Item\n                className='email-register-form-item email-register-btn-item'\n            >\n                <Button\n                    className='email-register-input email-register-btn-input'\n                    type='primary'\n                    htmlType='submit'\n                >\n                    注册\n                </Button>\n            </Form.Item>\n\n\n\n\n\n        </Form>\n    )\n}\n\nexport default EmailRegisterForm;\n","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/PwdLoginForm/pwdLoginForm.tsx",[],"/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/phoneLoginForm.tsx",["434"],"import { Form, Button, message } from 'antd';\nimport React, { CSSProperties, useEffect, useState } from 'react';\nimport PhoneInput, { IPhoneNumber } from './PhoneInput/phoneInput'\nimport CaptchaInput, { ICaptcha } from './CaptchaInput/captchaInput'\nimport './style.scss'\n\n\ninterface IBaseProps {\n    children?: React.ReactNode;\n    style?: CSSProperties;\n}\n\n\ninterface IFormValues {\n    captcha: ICaptcha;\n    phone: IPhoneNumber;\n}\n\n\nenum ItemHelpTypes {\n    EmptyPhone = '请输入手机号',\n    InvalidPhone = '请输入正确的手机号',\n    EmptyCaptcha = '请输入验证码',\n    NoneHelp = ''\n}\nexport interface IValidator {\n    validateStatus: 'success' | 'warning' | 'error' | 'validating';\n    help: ItemHelpTypes\n}\n\n\nconst PhoneLoginForm: React.FC<IBaseProps> = (props) => {\n\n    const [form] = Form.useForm();\n    const initalFormValues: IFormValues = {\n        phone: {\n            select: '+86',\n            number: ''\n        },\n        captcha: {\n            number: ''\n        }\n    };\n\n    const initValidator: IValidator = {\n        validateStatus: 'success',\n        help: ItemHelpTypes.NoneHelp\n    }\n\n    const [isPhoneInputOnBlur, setPhoneIsInputOnBlur] = useState(false);\n    const [isCaptchaInputOnBlur, setIsCaptchaInputOnBlur] = useState(false);\n    const [phoneNumber, setPhoneNumber] = useState('');\n    const [isPhoneValid, setIsPhoneValid] = useState(false);\n    const [captcha, setCaptcha] = useState('');\n    const [phoneValidator, setPhoneValidator] = useState<IValidator>(initValidator);\n    const [captchaValidator, setCaptchaValidator] = useState<IValidator>(initValidator);\n\n\n    // 将表单填入的信息提交\n    const onFinish = (values: IFormValues) => {\n        const { captcha: { number: captcha }, phone: { number: phone } } = values;\n\n        if (captcha === '') {\n            setCaptchaValidator({ validateStatus: 'error', help: ItemHelpTypes.EmptyCaptcha });\n        }\n\n        if (phone === '') {\n            setPhoneValidator({ validateStatus: 'error', help: ItemHelpTypes.EmptyPhone})\n        }\n\n        // message.error('验证码错误，请重新验证');\n        // console.log(values);\n\n\n    }\n\n\n    const onValuesChange = (values: IFormValues) => {\n        const phoneObj = values.phone;\n        const captchaObj = values.captcha;\n        if (phoneObj) {\n            const number = phoneObj.number as string;\n            const reg = /^1\\d{10}$/;\n            setIsPhoneValid(reg.test(number));\n            \n            setPhoneNumber(number);\n        } else if (captchaObj) {\n            const captcha = captchaObj.number as string;\n            setCaptcha(captcha);\n        }\n    }\n\n    useEffect(() => {\n        setPhoneValidator({ validateStatus: 'success', help: ItemHelpTypes.NoneHelp });\n\n        const reg = /^1\\d{10}$/;\n        const isValid = reg.test(phoneNumber);\n\n        if (isPhoneInputOnBlur) {\n            if (isValid || phoneNumber === '') {\n                setPhoneValidator({ validateStatus: 'success', help: ItemHelpTypes.NoneHelp });\n            } else {\n                setPhoneValidator({ validateStatus: 'error', help: ItemHelpTypes.InvalidPhone});\n            }\n        }\n    }, [phoneNumber, isPhoneInputOnBlur]);\n\n    useEffect(() => {\n        setCaptchaValidator({ validateStatus: 'success', help: ItemHelpTypes.NoneHelp });\n    }, [captcha, isCaptchaInputOnBlur])\n\n\n\n    return (\n        <Form\n            className='phone-login-form'\n            name='phone_login_form'\n            onFinish={onFinish}\n            form={form}\n            onValuesChange={onValuesChange}\n            initialValues={initalFormValues}\n            style={props.style}\n        >\n            <Form.Item\n                className='phone-login-form-item phone-login-phone-item'\n                name='phone'\n                {...phoneValidator}\n            >\n                <PhoneInput\n                    className='phone-login-input phone-login-phone-input'\n                    setOnBlur={setPhoneIsInputOnBlur}\n                    \n                />\n            </Form.Item>\n\n\n\n            <Form.Item\n                className='phone-login-form-item phone-login-captcha-item'\n                name=\"captcha\"\n                {...captchaValidator}\n            >\n                <CaptchaInput\n                    className='phone-login-input phone-login-captcha-input'\n                    setOnBlur={setIsCaptchaInputOnBlur}\n                    isPhoneValid={isPhoneValid}\n                />\n            </Form.Item>\n\n\n            <Form.Item\n                className='phone-login-form-item phone-login-btn-item'\n                validateStatus='validating'\n            >\n                <Button\n                    className='phone-login-input phone-login-btn-input'\n                    type='primary'\n                    htmlType='submit'\n                    style={{ width: '100%' }}\n\n                >\n                    登录 / 注册\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}\n\nexport default PhoneLoginForm;\n\n\n\n\n\n\n\n\n","/Users/apple/daliy/leetCode/src/pages/profile/components/Section/recordMonth/index.jsx",[],"/Users/apple/daliy/leetCode/src/pages/profile/components/Section/InfoDisplay/index.jsx",["435"],"import React,{useEffect} from 'react'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Tabs} from 'antd'\nimport {proReqHistory} from '../../../store/actions/proReqHistory_action'\nimport './index.scss'\nimport urlRecord from '../images/record.png'\nimport urlDiscuss from '../images/discuss.png'\nimport urlFollow from '../images/follow.png'\nimport urlDynamic from '../images/dynamic.png'\n\nconst { TabPane } = Tabs\n\n\n\nconst InfoDisply = (props) => {\n    // 模拟数据\n    var Mock = require('mockjs')\n    var list = Mock.mock({\n        // 属性 list 的值是一个数组，其中含有 1 到 10 个元素\n        'code': 200,\n        'message':\"ok\",\n        'data|15': [{\n            \"questionNum|1-1900\": 1,\n            'questionId|14332-682222': 1,\n            'title|1': [\"两数之和\", \"编辑距离\", \"三数之和\"],\n            'isPassed|1': [true, false]\n        }]\n    })\n\n    useEffect(() => {\n    })\n    function reqRecord(e) {\n        if(e == '1') {\n            props.getHistoryData()  \n        }\n    }\n    return (\n        <div className=\"pro-show-history\">\n                <div className=\"pro-card-container\">\n                    <Tabs type=\"card\" onTabClick={reqRecord}>\n                        <TabPane tab={<span>\n                            <img src={urlRecord} alt=\"\"/>\n                            <span>  提交记录</span>\n                        </span> } key=\"1\" >\n                            {list.data.map(value => {\n                                return (\n                                    <div className=\"pro-show\" key={value.questionId}>\n                                        <div className=\"left\">\n                                            <span>我在题目</span>\n                                            <Link className=\"same tixing\" to=\"/questionindex/:id\">{value.questionNum}.{value.title}</Link>\n                                            <span className=\"same\">中使用</span>\n                                            <span className=\"same\">java</span>\n                                            <span className=\"same\">进行了提交</span>\n                                        </div>\n                                        {\n                                            value.isPassed ?\n                                            <div className=\"right\">\n                                                <span className=\"pro-pass\">通过</span>\n                                                <span>2 天前</span>\n                                            </div>:\n                                            <div className=\"right\">\n                                                <span className=\"pro-error\">编译出错</span>\n                                                <span>2 天前</span>\n                                            </div>\n                                        }\n                                    </div>\n                                )\n                            })}\n                            <div className=\"pro-load\">\n                                <div className=\"pro-loadingmore\">加载更多...</div>\n                            </div>\n                        </TabPane>\n                        <TabPane tab={<span>\n                            <img src={urlDiscuss} alt=\"\"/>\n                            <span>  讨论发布</span>\n                        </span>} key=\"2\">\n                            <p>Content of Tab Pane 2</p>\n                            <p>Content of Tab Pane 2</p>\n                            <p>Content of Tab Pane 2</p>\n                        </TabPane>\n                        <TabPane tab={<span>\n                            <img src={urlDynamic} alt=\"\"/>\n                            <span>  我的动态</span>\n                        </span>} key=\"3\">\n                            <p>Content of Tab Pane 3</p>\n                            <p>Content of Tab Pane 3</p>\n                            <p>Content of Tab Pane 3</p>\n                        </TabPane>\n                        <TabPane tab={<span>\n                            <img src={urlFollow} alt=\"\" className=\"pro-img\"/>\n                            <span>  我的关注</span>\n                        </span>} key=\"4\">\n                            <p>Content of Tab Pane 3</p>\n                            <p>Content of Tab Pane 3</p>\n                            <p>Content of Tab Pane 3</p>\n                        </TabPane>\n                    </Tabs>\n                </div>\n            </div>\n    )\n}\n\nexport default connect(\n    state => ({list:state}),\n    {\n        getHistoryData: proReqHistory\n    }\n)(InfoDisply)","/Users/apple/daliy/leetCode/src/pages/profile/components/Section/QuestionInfo/index.jsx",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/components/comment/components/Common.tsx",[],"/Users/apple/daliy/leetCode/src/pages/profile/store/actions/proReqHistory_action.js",[],"/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/CaptchaInput/captchaInput.tsx",["436","437"],"import { Input, Button } from 'antd';\nimport { useEffect, useRef, useState } from 'react';\nimport { useCaptcha } from '../../../../../../utils/hooks';\nimport './style.scss'\n\nexport interface ICaptcha {\n    number?: string | undefined;\n}\n\ninterface BaseProps {\n    className?: string;\n    children?: React.ReactNode;\n    style?: {};\n    onChange?: (value: ICaptcha) => void;\n    value?: ICaptcha;\n    setOnBlur: React.Dispatch<React.SetStateAction<boolean>>\n    isPhoneValid: boolean\n}\n\n\n\nconst CaptchaInput: React.FC<BaseProps> = (props) => {\n\n    // state\n    const [number, setNumber] = useState('');\n\n    // props\n    const {\n        className,\n        value = {},\n        onChange,\n        setOnBlur,\n        isPhoneValid\n    } = props;\n\n\n    const [getCaptcha, btnStatus] = useCaptcha('email', '909397116@qq.com', 5, [isPhoneValid]);\n\n\n\n    // 让当前控件 onChange 的时候与 Form.Item 产生交互\n    const triggerChange = (changedValue: ICaptcha) => {\n        onChange?.({ number, ...value, ...changedValue });\n    };\n\n    const defOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const captchaValue = e.target.value;\n        setNumber(captchaValue);\n        triggerChange({\n            number: captchaValue\n        });\n    };\n\n    return (\n        <Input\n            className={`${className} captcha-input`}\n            placeholder='验证码'\n            onBlur={() => setOnBlur(true)}\n            onFocus={() => setOnBlur(false)}\n            onChange={defOnChange}\n            suffix={\n                <Button\n                    type='link'\n                    {...btnStatus.btnProps}\n                    onClick={getCaptcha}\n                >\n                    {btnStatus.children}\n                </Button>\n            }\n        />\n    )\n}\n\n\n\nexport default CaptchaInput;","/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/PhoneLoginForm/PhoneInput/phoneInput.tsx",[],"/Users/apple/daliy/leetCode/src/utils/hooks/index.ts",["438","439","440","441","442","443","444"],"import produce, { Immutable } from \"immer\"\nimport { useCallback, useEffect, useState } from \"react\"\nimport { Flags, LooseObj } from \"../shared\"\nimport { Modal } from 'antd'\nimport { Main_Dark, Main_Light } from \"../../config/colors\"\nimport request, { ErrorCode, Response } from '../../apis'\nimport { useParams } from \"react-router\"\nimport classNames from 'classnames'\ninterface Update<T> {\n  (updateFn: (draft: Immutable<T>) => void): void\n}\ninterface IConfirm {\n  msg?: string\n  title?: string\n  onOk?(): void\n  onCancel?(): void\n}\n\ninterface IBtnStatus {\n  children: string;\n  btnProps: {\n    loading: boolean,\n    disabled: boolean\n  }\n}\n\nexport const useImmer = <T extends LooseObj>(initState: T): [T, Update<T>] => {\n  const [state, setState] = useState<T>(initState)\n\n  const update: Update<T> = (updateFn) => {\n    const newState = produce<T>(state, updateFn)\n    setState(newState)\n  }\n  return [state, update]\n}\n\nexport const useConfirm = ({\n  msg = \"你确定吗\",\n  title = \"确定？\",\n  onOk,\n  onCancel\n}: IConfirm = {}) => {\n  return () => {\n    Modal.confirm({\n      title,\n      content: msg,\n      okText: \"确定\",\n      cancelText: \"取消\",\n      onOk,\n      onCancel,\n      okButtonProps: {\n        style: {\n          background: Main_Light,\n          color: \"#fff\"\n        }\n      },\n      cancelButtonProps: {\n        style: {\n          color: Main_Dark\n        }\n      }\n    })\n  }\n}\n\nexport const wrapRequest = <T extends any[], R>(req: (...args: T) => Promise<Response<R>>) => {\n  const useReqImpl = (...args: T): [Response<R>[\"data\"], Flags, () => void] => {\n    const [data, setData] = useState<Response[\"data\"]>(null)\n    const [flag, setFlag] = useState(Flags.Normal)\n\n    const send = useCallback(async () => {\n      setFlag(Flags.Pending)\n      const res = await req(...args)\n      if (res.code === ErrorCode.Success) {\n        setFlag(Flags.Success)\n      } else {\n        setFlag(Flags.Fail)\n      }\n      setData(res.data)\n    }, [...args])\n\n    useEffect(() => {\n      send()\n    }, [send])\n\n    return [data, flag, send]\n  }\n  return useReqImpl\n}\n\nexport const useGetQuestionId = () => {\n  const { questionId } = useParams<{\n    questionId: string | undefined\n  }>()\n  return questionId\n}\n\n\nexport const useCaptcha = (\n  type: 'email' | 'phone', \n  sendTarget: string, \n  initSeconds = 60, \n  deps: any[]\n): [() => void, IBtnStatus] => {\n  const [seconds, setSeconds] = useState(initSeconds);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [isCountDown, setIsCountDown] = useState(false);\n\n  const [btnStatus, setBtnStatus] = useState<IBtnStatus>({\n    children: '获取验证码',\n    btnProps: {\n      loading: false,\n      disabled: true\n    }\n  });\n\n  // 只有所有的 deps 全部有效后，captchaBtn 才能点击\n  useEffect(() => {\n    const res = deps.reduce((pre, current) => pre &= current, true);\n    setIsDisabled(!res);\n  }, deps)\n\n  useEffect(() => {\n    setBtnStatus({\n      children: `${\n        isLoading ? '发送中' : \n        isCountDown ? (seconds + ' 秒后可重发') : '获取验证码'\n      }`,\n      btnProps: {\n        loading: isLoading,\n        disabled: isDisabled\n      }\n    })\n  }, [seconds, isLoading, isCountDown, isDisabled])\n\n\n  let timer: any;\n\n  useEffect(() => {\n    return () => {\n      clearInterval(timer)\n    }\n  });\n\n  const startCountDown = () => {\n\n    // 倒计时60秒\n    // setSeconds(5);\n\n    let countDownTime = initSeconds;\n    // 每隔一秒，countDownTime 减 1\n    timer = setInterval(() => {\n\n      // countDownTime 为 0 时停止倒计时\n      if (countDownTime <= 1) {\n        setSeconds(initSeconds);\n        setIsCountDown(false);\n        setIsDisabled(false)\n        clearInterval(timer);\n        return;\n      }\n      countDownTime -= 1;\n      setSeconds(countDownTime);\n    }, 1000);\n  }\n\n  // 点击获取验证码\n  const getCaptcha = () => {\n\n    if (type === 'email') {\n      const reg = /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\n      if (!reg.test(sendTarget)) {\n        return;\n      }\n    }\n    // 按钮 loading：正在发送请求\n    setIsLoading(true);\n    setIsDisabled(true)\n\n    request.post('/user/requestcode', {\n      method: type,\n      number: sendTarget\n    }).then(reponse => {\n\n      // 停止 loading\n      setIsLoading(false);\n      // 开始倒计时\n      setIsCountDown(true);\n      startCountDown();\n      console.log(reponse);\n\n    }).catch(reason => {\n      console.log(reason);\n    })\n    \n\n    // setTimeout(() => {\n    //   // 按钮停止 loading：请求结束 \n    //   setIsLoading(false);\n\n    //   if (!isLoading) {\n    //     // 开始倒计时\n    //     setIsCountDown(true);\n\n    //     startCountDown();\n    //   }\n\n    // }, 1000);\n  }\n\n  return [getCaptcha, btnStatus];\n}\n\n// deps 用来存放交互过程中可能会改变的状态\nconst useClassNames = (baseClassName: string, deps: any[]): string => {\n  useEffect(() => {\n    classNames(baseClassName, {\n\n    })\n  }, deps)\n\n  return ''\n}","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/components/mdEditor/index.tsx",[],"/Users/apple/daliy/leetCode/src/components/loading/index.tsx",[],"/Users/apple/daliy/leetCode/src/config/colors.ts",[],"/Users/apple/daliy/leetCode/src/components/likeBtn/index.tsx",[],"/Users/apple/daliy/leetCode/src/apis/share.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-left/Header.tsx",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-left/Footer.tsx",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/solution-left/SolutionList.tsx",["445"],"import { FC } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { SolutionList as List } from \"../../../../../../apis/solution\";\nimport { RootState } from \"../../../../store\";\nimport { EyeOutlined } from \"@ant-design/icons\";\nimport { dispatchShowDetail, switchId } from \"../store\";\nimport Loading from \"../../../../../../components/loading\";\nimport LikeBtn from \"../../../../../../components/likeBtn\";\n\ninterface Props {\n  solutionList: readonly List[];\n  dispatch: Dispatch;\n  initial: boolean;\n}\n\nconst SolutionList: FC<Props> = ({ solutionList, dispatch, initial }) => {\n  const showDetail = (id: number) => {\n    dispatch(switchId(id));\n    dispatch(dispatchShowDetail(true));\n  };\n  return (\n    <ul className=\"solution-list\">\n      {initial ? (\n        solutionList.map((item) => (\n          <Item {...item} key={item.answerId} onClick={showDetail} />\n        ))\n      ) : (\n        <div className=\"flex j-center a-center\">\n          <Loading size=\"large\" />\n        </div>\n      )}\n    </ul>\n  );\n};\n\nconst Item: FC<{\n  avatar: string | null;\n  userName: string;\n  title: string;\n  summary: string;\n  thumbup: number;\n  view: string;\n  answerId: string;\n  islike: number;\n  onClick: (id: number) => void;\n}> = (item) => {\n  const clickLikeBtn = () => {};\n\n  return (\n    <li className=\"item\" onClick={item.onClick.bind(null, +item.answerId)}>\n      <div className=\"item-header flex a-center\">\n        <img className=\"avatar\" src={item.avatar!} alt={item.userName} />\n        <span>{item.title}</span>\n      </div>\n      <div className=\"item-content\">{item.summary}</div>\n      <div className=\"item-footer flex a-center\">\n        <div className=\"flex a-center ic\">\n          <LikeBtn islike={item.islike} target=\"answer\" targetId={item.answerId} />\n          {item.thumbup}\n        </div>\n        <div className=\"flex a-center ic\">\n          <EyeOutlined />\n          {item.view}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default connect((state: RootState) => ({\n  solutionList: state.solution.solutionList,\n  initial: state.solution.initial,\n}))(SolutionList);\n","/Users/apple/daliy/leetCode/src/apis/solution.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/store/index.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionlist/router/config.js",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/submitrecord/SubmitRecord.js",["446","447","448","449"],"import { Table, Tag, Space } from \"antd\";\nimport { memo, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCommit } from '../../../../../../apis/comments'\nimport { getKeys } from '../../../../../../utils/shared'\nconst columns = [\n  {\n    title: \"提交时间\",\n    dataIndex: \"commitTime\",\n    key: \"commitTime\",\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: \"提交结果\",\n    dataIndex: \"commitResult\",\n    key: \"commitResult\",\n  },\n  {\n    title: \"运行时间\",\n    dataIndex: \"runtime\",\n    key: \"runtime\",\n  },\n  {\n    title: \"语言\",\n    dataIndex: \"word\",\n    key: \"java\",\n  },\n];\n\nconst SubmitRecord = (props) => {\n  const [commitList, setCommitList] = useState()\n  useEffect(() =>{\n    getCommit('josdnf')\n    .then(res =>{\n      setCommitList(getKeys(res.data.data.commitList))\n      console.log(getKeys(res.data.data.commitList))\n    })\n  },[])\n  useEffect(() =>{\n    console.log(props)\n  })\n  return (\n    <div className=\"submit-record\">\n      {\n        props.exeCodeRes.result?<ul className='result-info'>\n        <li>执行结果 <span >{props.exeCodeRes.result == 'pass' ? '通过' : '解答错误'}</span></li>\n        <li>执行时间 <span className=\"info\">{props.exeCodeRes.runtime}</span></li>\n        <li>击败对手 <span className=\"info\">{props.exeCodeRes.runtimeBeat}</span></li>\n        <li>内存消耗 <span className=\"info\">{props.exeCodeRes.memory}</span></li>\n    </ul>:null\n      }\n      {\n        commitList? <Table pagination={false} columns={columns} dataSource={commitList} /> :''\n      }\n    </div>\n  );\n};\n\nconst mapState = (state) =>{\n  return {\n    exeCodeRes:state.desc.exeCodeRes\n  }\n}\n\nexport default connect(mapState)(memo(SubmitRecord));\n","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/desc/Desc.js",["450"],"import \"./desc.scss\";\nimport \"../../../../../../mock/questionIndex.js\";\nimport { getDescData, likeQuestion,  } from \"../../../../../../apis/comments\";\nimport DiffTag from \"../components/dif-tag/DigTag\";\nimport { devContetn } from \"../../../../../../utils/shared\";\nimport {\n  likeAction,\n  unLikeAction,\n  collectAction,\n  unCollectAction,\n} from \"../../../../store/actions\";\nimport {\n  LikeOutlined,\n  HeartOutlined,\n  RotateRightOutlined,\n  SwapOutlined,\n  BellOutlined,\n  MessageOutlined,\n  LikeFilled,\n  HeartFilled,\n} from \"@ant-design/icons\";\nimport { Fragment, useEffect, useState, memo } from \"react\";\nimport { connect } from \"react-redux\";\nconst Desc = (props) => {\n  let [descData, setDescData] = useState({ code: 0 });\n  let {\n    like,\n    dispatchLike,\n    dispatchUnlike,\n    collect,\n    dispatchCollect,\n    dispatchUnCollect,\n  } = props;\n  useEffect(() => {\n    getDescData().then((res) => {\n      setDescData(res.data);\n    });\n  }, [descData.code]);\n  return (\n    <div className=\"desc\">\n      {descData.code ? (\n        <>\n          <div className=\"title\">1.{descData.data.title}</div>\n          <ul className=\"tag\">\n            <li>\n              难度 <DiffTag difficulty={descData.data.difficulty} />\n            </li>\n            <li>\n              {like ? (\n                <LikeFilled onClick={dispatchUnlike} />\n              ) : (\n                <LikeOutlined onClick={dispatchLike} />\n              )}\n              {descData.data.thumbup}\n            </li>\n            <li>\n              {collect ? (\n                <HeartFilled onClick={dispatchUnCollect} />\n              ) : (\n                <HeartOutlined onClick={dispatchCollect} />\n              )}\n              收藏\n            </li>\n            <li>\n              <RotateRightOutlined /> 分享\n            </li>\n            <li>\n              <SwapOutlined /> 切换为英文\n            </li>\n            <li>\n              <BellOutlined /> 接收动态\n            </li>\n            <li>\n              <MessageOutlined /> 反馈\n            </li>\n          </ul>\n          <div className=\"content\">\n            {devContetn(descData.data.content).map((p, i) => (\n              <Fragment key={i}>\n                <p>{p} </p>\n                <br />\n              </Fragment>\n            ))}\n            <ul className='submit-number'>\n              <li>通过次数 {descData.data.commit_num}</li>\n              <li>提交次数 {descData.data.answe_num}</li>\n            </ul>\n          </div>\n          <ul className='footer'>\n            <li>在真实的面试中遇到过这道题？ <button>是</button> <button>否</button></li>\n            <li>力扣(leetCode)版权所有</li>\n            <li>相关企业</li>\n            <li>相关标签</li>\n            <li>相似题目</li>\n            <li>显示提示1</li>\n            <li>显示提示2</li>\n            <li>显示提示3</li>\n          </ul>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nconst mapState = (state) => {\n  return {\n    like: state.desc.like,\n    collect: state.desc.collect,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    dispatchLike() {\n      const disLikeAction = likeAction();\n      dispatch(disLikeAction);\n      likeQuestion(\"question\", true, \"jsaodfnasd\");\n    },\n    dispatchUnlike() {\n      const disUnlikeAction = unLikeAction();\n      dispatch(disUnlikeAction);\n      likeQuestion(\"question\", false, \"jsaodfnasd\");\n    },\n    dispatchCollect() {\n      const disLikeAction = collectAction();\n      dispatch(disLikeAction);\n    },\n    dispatchUnCollect() {\n      const disUnlikeAction = unCollectAction();\n      dispatch(disUnlikeAction);\n    },\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Desc);\n","/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/solution/store/epic.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/store/reducer.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/store/index.ts",["451","452","453"],"import { createStore, combineReducers } from 'redux'\nimport reducer, { initState } from './reducer'\nimport { produce } from 'immer'\n\ntype MappedReducer<T extends { [k: string]: (...args: any) => any }> = {\n  [K in keyof T]: ReturnType<T[K]>\n}\n\nconst editorConfigReducer = produce(reducer, initState)\n\nexport { editorConfigReducer }","/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/index.tsx",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/store/reducer.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/components/Editor.tsx",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/components/ConfigBar.tsx",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/store/actions.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/body/left/components/dif-tag/DigTag.tsx",[],"/Users/apple/daliy/leetCode/src/config/code.ts",[],"/Users/apple/daliy/leetCode/src/pages/questionindex/components/code-editor/components/ConfigMain.tsx",[],"/Users/apple/daliy/leetCode/src/components/showModal/index.tsx",[],"/Users/apple/daliy/leetCode/src/pages/login/components/LoginMain/types/index.ts",[],{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","replacedBy":"457"},{"ruleId":"458","severity":1,"message":"459","line":6,"column":3,"nodeType":"460","messageId":"461","endLine":6,"endColumn":11},{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","replacedBy":"457"},{"ruleId":"462","severity":1,"message":"463","line":49,"column":11,"nodeType":"464","endLine":49,"endColumn":44},{"ruleId":"462","severity":1,"message":"463","line":54,"column":11,"nodeType":"464","endLine":54,"endColumn":42},{"ruleId":"462","severity":1,"message":"465","line":59,"column":11,"nodeType":"464","endLine":59,"endColumn":80},{"ruleId":"466","severity":1,"message":"467","line":1,"column":20,"nodeType":"460","messageId":"461","endLine":1,"endColumn":29},{"ruleId":"468","severity":1,"message":"469","line":17,"column":10,"nodeType":"470","endLine":17,"endColumn":12,"suggestions":"471"},{"ruleId":"466","severity":1,"message":"472","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":30},{"ruleId":"466","severity":1,"message":"473","line":1,"column":32,"nodeType":"460","messageId":"461","endLine":1,"endColumn":40},{"ruleId":"458","severity":1,"message":"474","line":1,"column":10,"nodeType":"460","messageId":"461","endLine":1,"endColumn":19},{"ruleId":"468","severity":1,"message":"475","line":66,"column":8,"nodeType":"470","endLine":66,"endColumn":18,"suggestions":"476"},{"ruleId":"458","severity":1,"message":"477","line":1,"column":10,"nodeType":"460","messageId":"461","endLine":1,"endColumn":14},{"ruleId":"458","severity":1,"message":"477","line":1,"column":10,"nodeType":"460","messageId":"461","endLine":1,"endColumn":14},{"ruleId":"466","severity":1,"message":"478","line":26,"column":5,"nodeType":"460","messageId":"461","endLine":26,"endColumn":8},{"ruleId":"466","severity":1,"message":"479","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":23},{"ruleId":"466","severity":1,"message":"473","line":1,"column":25,"nodeType":"460","messageId":"461","endLine":1,"endColumn":33},{"ruleId":"466","severity":1,"message":"480","line":62,"column":9,"nodeType":"460","messageId":"461","endLine":62,"endColumn":23},{"ruleId":"466","severity":1,"message":"481","line":3,"column":10,"nodeType":"460","messageId":"461","endLine":3,"endColumn":16},{"ruleId":"458","severity":1,"message":"482","line":2,"column":8,"nodeType":"460","messageId":"461","endLine":2,"endColumn":12},{"ruleId":"466","severity":1,"message":"483","line":13,"column":10,"nodeType":"460","messageId":"461","endLine":13,"endColumn":25},{"ruleId":"466","severity":1,"message":"484","line":1,"column":19,"nodeType":"460","messageId":"461","endLine":1,"endColumn":26},{"ruleId":"466","severity":1,"message":"485","line":2,"column":10,"nodeType":"460","messageId":"461","endLine":2,"endColumn":20},{"ruleId":"466","severity":1,"message":"486","line":35,"column":19,"nodeType":"460","messageId":"461","endLine":35,"endColumn":29},{"ruleId":"466","severity":1,"message":"487","line":36,"column":10,"nodeType":"460","messageId":"461","endLine":36,"endColumn":17},{"ruleId":"458","severity":1,"message":"488","line":2,"column":17,"nodeType":"460","messageId":"461","endLine":2,"endColumn":21},{"ruleId":"466","severity":1,"message":"467","line":1,"column":32,"nodeType":"460","messageId":"461","endLine":1,"endColumn":41},{"ruleId":"466","severity":1,"message":"489","line":37,"column":12,"nodeType":"460","messageId":"461","endLine":37,"endColumn":20},{"ruleId":"466","severity":1,"message":"490","line":38,"column":12,"nodeType":"460","messageId":"461","endLine":38,"endColumn":19},{"ruleId":"491","severity":1,"message":"492","line":102,"column":73,"nodeType":"493","messageId":"494","endLine":102,"endColumn":75},{"ruleId":"491","severity":1,"message":"492","line":132,"column":74,"nodeType":"493","messageId":"494","endLine":132,"endColumn":76},{"ruleId":"466","severity":1,"message":"484","line":1,"column":24,"nodeType":"460","messageId":"461","endLine":1,"endColumn":31},{"ruleId":"491","severity":1,"message":"495","line":34,"column":14,"nodeType":"493","messageId":"494","endLine":34,"endColumn":16},{"ruleId":"466","severity":1,"message":"467","line":2,"column":10,"nodeType":"460","messageId":"461","endLine":2,"endColumn":19},{"ruleId":"466","severity":1,"message":"479","line":2,"column":21,"nodeType":"460","messageId":"461","endLine":2,"endColumn":27},{"ruleId":"468","severity":1,"message":"496","line":80,"column":8,"nodeType":"470","endLine":80,"endColumn":17,"suggestions":"497"},{"ruleId":"468","severity":1,"message":"498","line":80,"column":9,"nodeType":"499","endLine":80,"endColumn":16},{"ruleId":"468","severity":1,"message":"500","line":122,"column":6,"nodeType":"460","endLine":122,"endColumn":10},{"ruleId":"468","severity":1,"message":"501","line":122,"column":6,"nodeType":"460","endLine":122,"endColumn":10,"suggestions":"502"},{"ruleId":"466","severity":1,"message":"503","line":216,"column":7,"nodeType":"460","messageId":"461","endLine":216,"endColumn":20},{"ruleId":"468","severity":1,"message":"500","line":221,"column":6,"nodeType":"460","endLine":221,"endColumn":10},{"ruleId":"468","severity":1,"message":"504","line":221,"column":6,"nodeType":"460","endLine":221,"endColumn":10,"suggestions":"505"},{"ruleId":"466","severity":1,"message":"506","line":48,"column":9,"nodeType":"460","messageId":"461","endLine":48,"endColumn":21},{"ruleId":"458","severity":1,"message":"507","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":20},{"ruleId":"458","severity":1,"message":"508","line":1,"column":22,"nodeType":"460","messageId":"461","endLine":1,"endColumn":27},{"ruleId":"462","severity":1,"message":"465","line":11,"column":23,"nodeType":"464","endLine":11,"endColumn":26},{"ruleId":"491","severity":1,"message":"495","line":46,"column":50,"nodeType":"493","messageId":"494","endLine":46,"endColumn":52},{"ruleId":"458","severity":1,"message":"509","line":22,"column":41,"nodeType":"460","messageId":"461","endLine":22,"endColumn":45},{"ruleId":"466","severity":1,"message":"510","line":1,"column":10,"nodeType":"460","messageId":"461","endLine":1,"endColumn":21},{"ruleId":"466","severity":1,"message":"511","line":1,"column":23,"nodeType":"460","messageId":"461","endLine":1,"endColumn":38},{"ruleId":"466","severity":1,"message":"512","line":5,"column":6,"nodeType":"460","messageId":"461","endLine":5,"endColumn":19},"no-native-reassign",["513"],"no-negated-in-lhs",["514"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["515"],"'createContext' is defined but never used.","'useState' is defined but never used.","'takeEvery' is defined but never used.","React Hook useEffect has a missing dependency: 'getLoginWindowStyle'. Either include it or remove the dependency array.",["516"],"'call' is defined but never used.","'now' is assigned a value but never used.","'useRef' is defined but never used.","'toResetPwdForm' is assigned a value but never used.","'Button' is defined but never used.","'data' is defined but never used.","'LoadingOutlined' is defined but never used.","'message' is defined but never used.","'Components' is defined but never used.","'setCurPage' is assigned a value but never used.","'pageNum' is assigned a value but never used.","'Card' is defined but never used.","'password' is assigned a value but never used.","'captcha' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useCallback has a missing dependency: 'args'. Either include it or remove the dependency array.",["517"],"React Hook useCallback has a spread element in its dependency array. This means we can't statically verify whether you've passed the correct dependencies.","SpreadElement","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has a missing dependency: 'deps'. Either include it or remove the dependency array.",["518"],"'useClassNames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'baseClassName'. Either include it or remove the dependency array.",["519"],"'clickLikeBtn' is assigned a value but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","'memo' is defined but never used.","'createStore' is defined but never used.","'combineReducers' is defined but never used.","'MappedReducer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},"Update the dependencies array to be: [getData]",{"range":"530","text":"531"},"Update the dependencies array to be: [formType, getLoginWindowStyle]",{"range":"532","text":"533"},"Update the dependencies array to be: [args]",{"range":"534","text":"535"},"Update the dependencies array to be: [deps]",{"range":"536","text":"537"},"Update the dependencies array to be: [baseClassName]",{"range":"538","text":"539"},[549,551],"[getData]",[1616,1626],"[formType, getLoginWindowStyle]",[1944,1953],"[args]",[2885,2889],"[deps]",[4780,4784],"[baseClassName]"]