[{"D:\\PROJECT\\leetCode\\src\\index.tsx":"1","D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts":"2","D:\\PROJECT\\leetCode\\src\\App.tsx":"3","D:\\PROJECT\\leetCode\\src\\router\\index.jsx":"4","D:\\PROJECT\\leetCode\\src\\router\\config.js":"5","D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js":"6","D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js":"7","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js":"8","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js":"9","D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js":"10","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js":"11","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js":"12","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js":"13","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js":"14","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js":"15","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\data.js":"16","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js":"17","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx":"18","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx":"19","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx":"20","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts":"21","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx":"22","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts":"23","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts":"24","D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx":"25","D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts":"26","D:\\PROJECT\\leetCode\\src\\config\\colors.ts":"27","D:\\PROJECT\\leetCode\\src\\apis\\index.ts":"28","D:\\PROJECT\\leetCode\\src\\utils\\shared.ts":"29","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\index.js":"30","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js":"31","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\index.js":"32","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginFooter\\index.jsx":"33","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginHeader\\index.jsx":"34","D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\index.jsx":"35","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\phoneLogin.js":"36","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\pwdLogin.js":"37","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\constant.js":"38","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\loginHeader.js":"39","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx":"40","D:\\PROJECT\\leetCode\\src\\config\\code.ts":"41","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx":"42","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\store\\actions.ts":"43","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\store\\index.ts":"44","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\store\\reducer.ts":"45","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\store\\epics\\index.ts":"46","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx":"47"},{"size":417,"mtime":1611926463004,"results":"48","hashOfConfig":"49"},{"size":440,"mtime":1611827611826,"results":"50","hashOfConfig":"49"},{"size":270,"mtime":1611827611819,"results":"51","hashOfConfig":"49"},{"size":492,"mtime":1611827611827,"results":"52","hashOfConfig":"49"},{"size":669,"mtime":1611827611826,"results":"53","hashOfConfig":"49"},{"size":149,"mtime":1611827611822,"results":"54","hashOfConfig":"49"},{"size":1128,"mtime":1612057753301,"results":"55","hashOfConfig":"49"},{"size":165,"mtime":1611827611825,"results":"56","hashOfConfig":"49"},{"size":280,"mtime":1611827611823,"results":"57","hashOfConfig":"49"},{"size":168,"mtime":1611827611825,"results":"58","hashOfConfig":"49"},{"size":1819,"mtime":1611827611824,"results":"59","hashOfConfig":"49"},{"size":366,"mtime":1612419575895,"results":"60","hashOfConfig":"49"},{"size":926,"mtime":1612434510928,"results":"61","hashOfConfig":"49"},{"size":1617,"mtime":1611928955737,"results":"62","hashOfConfig":"49"},{"size":955,"mtime":1611928955737,"results":"63","hashOfConfig":"49"},{"size":851,"mtime":1611928955737,"results":"64","hashOfConfig":"49"},{"size":371,"mtime":1612419680223,"results":"65","hashOfConfig":"49"},{"size":388,"mtime":1612419359158,"results":"66","hashOfConfig":"49"},{"size":2768,"mtime":1612419401738,"results":"67","hashOfConfig":"49"},{"size":1687,"mtime":1612419344872,"results":"68","hashOfConfig":"49"},{"size":470,"mtime":1611926463006,"results":"69","hashOfConfig":"49"},{"size":3390,"mtime":1612419281394,"results":"70","hashOfConfig":"49"},{"size":1338,"mtime":1612419453320,"results":"71","hashOfConfig":"49"},{"size":859,"mtime":1612419281395,"results":"72","hashOfConfig":"49"},{"size":1673,"mtime":1611926463004,"results":"73","hashOfConfig":"49"},{"size":1186,"mtime":1612419297477,"results":"74","hashOfConfig":"49"},{"size":125,"mtime":1612419281391,"results":"75","hashOfConfig":"49"},{"size":6021,"mtime":1611926463004,"results":"76","hashOfConfig":"49"},{"size":2370,"mtime":1612431673778,"results":"77","hashOfConfig":"49"},{"size":370,"mtime":1612057753306,"results":"78","hashOfConfig":"49"},{"size":124,"mtime":1611827611822,"results":"79","hashOfConfig":"49"},{"size":242,"mtime":1612057753306,"results":"80","hashOfConfig":"49"},{"size":2427,"mtime":1612057753302,"results":"81","hashOfConfig":"49"},{"size":338,"mtime":1612057753302,"results":"82","hashOfConfig":"49"},{"size":2574,"mtime":1612057753303,"results":"83","hashOfConfig":"49"},{"size":0,"mtime":1612057753307,"results":"84","hashOfConfig":"49"},{"size":0,"mtime":1612057753307,"results":"85","hashOfConfig":"49"},{"size":312,"mtime":1612057753305,"results":"86","hashOfConfig":"49"},{"size":410,"mtime":1612057753307,"results":"87","hashOfConfig":"49"},{"size":1082,"mtime":1612419591348,"results":"88","hashOfConfig":"49"},{"size":90,"mtime":1612419297472,"results":"89","hashOfConfig":"49"},{"size":270,"mtime":1612434309084,"results":"90","hashOfConfig":"49"},{"size":482,"mtime":1612431621143,"results":"91","hashOfConfig":"49"},{"size":369,"mtime":1612434481324,"results":"92","hashOfConfig":"49"},{"size":577,"mtime":1612432908132,"results":"93","hashOfConfig":"49"},{"size":401,"mtime":1612432760271,"results":"94","hashOfConfig":"49"},{"size":834,"mtime":1612434407336,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"12bdsu8",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"106"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"106"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"106"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\PROJECT\\leetCode\\src\\index.tsx",[],["205","206"],"D:\\PROJECT\\leetCode\\src\\reportWebVitals.ts",[],"D:\\PROJECT\\leetCode\\src\\App.tsx",[],"D:\\PROJECT\\leetCode\\src\\router\\index.jsx",["207"],"import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport routerMap from \"./config\";\r\n\r\n\r\nconst RouterView = () => {\r\n  return (\r\n    <Router>\r\n      {/* <Redirect to=\"/home\"></Redirect> */}\r\n      <Switch>\r\n        {routerMap.map((item,index) => (\r\n          <Route key={index} path={item.path} component={item.component}></Route>\r\n        ))}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default RouterView;\r\n",["208","209"],"D:\\PROJECT\\leetCode\\src\\router\\config.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\profile\\Profile.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\Login.js",["210","211","212","213","214","215","216"],"import { Provider, useSelector } from 'react-redux'\r\nimport store from './store/index'\r\nimport { Card } from 'antd'\r\n\r\nimport Header from './components/LoginHeader'\r\nimport LoginMain from './components/LoginMain'\r\nimport Footer from './components/LoginFooter'\r\n\r\nimport './login.scss'\r\n\r\n\r\nconst Login = (props) =>{\r\n    // const { isPhoneLogin } = useSelector(allStates => ({\r\n    //     isPhoneLogin: allStates.loginHeader.isPhoneLogin\r\n    // }))\r\n    // return (\r\n    //     <Provider store={store}>\r\n    //         <div className='login' \r\n    //             // style={isPhoneLogin ? {height: '514px', margin: '80px auto 0 auto'} : {height: '462px', margin: '100px auto 0 auto'}}\r\n    //         >\r\n    //             <Card className='login-card'\r\n    //                 title={<Header />}\r\n    //                 bordered={false}\r\n    //             >\r\n    //                 <LoginMain />\r\n    //                 {/* assets */}\r\n    //                 <Footer />\r\n    //             </Card>\r\n    //         </div>\r\n    //     </Provider>\r\n    // ) \r\n    return (\r\n        <>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","D:\\PROJECT\\leetCode\\src\\pages\\questionlist\\QuestionList.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\QuestionIndex.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\resetpassword\\ResetPassword.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\header\\Header.js",["217","218","219"],"import React from \"react\";\r\nimport Logo from \"../../../../assets/imgs/logo.svg\";\r\nimport \"./header.scss\";\r\nimport { Menu, Dropdown } from \"antd\";\r\nimport {Link} from 'react-router-dom'\r\nimport {\r\n  RightSquareOutlined,\r\n  BellOutlined,\r\n  UserOutlined,\r\n  DownOutlined\r\n} from \"@ant-design/icons\";\r\n\r\nfunction Header(props) {\r\n  const menu = (\r\n    <Menu>\r\n      <Menu.Item key=\"0\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.alipay.com/\"\r\n        >\r\n          题目以中文显示\r\n        </a>\r\n      </Menu.Item>\r\n      <Menu.Item key=\"1\">\r\n        <a\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          href=\"http://www.taobao.com/\"\r\n        >\r\n          题目以英文显示\r\n        </a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div className=\"header\">\r\n      <ul className=\"header-nav\">\r\n        <li>\r\n          <img src={Logo} alt=\"力扣\"></img>\r\n        </li>\r\n        <li>学习</li>\r\n        <li>题库</li>\r\n        <li>讨论</li>\r\n        <li>竞赛</li>\r\n        <li>求职</li>\r\n        <li className=\"shop\">商店</li>\r\n        <li>\r\n          <a className=\"download\" href=\"#\">\r\n            下载 App\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a className=\"member\" href=\"#\">\r\n            Plus 会员\r\n          </a>\r\n        </li>\r\n        <Dropdown overlay={menu}>\r\n          <a className=\"ant-dropdown-link\" onClick={(e) => e.preventDefault()}>\r\n            中 <DownOutlined />\r\n          </a>\r\n        </Dropdown>\r\n        <li>\r\n          <RightSquareOutlined />\r\n        </li>\r\n        <li>\r\n          <BellOutlined />\r\n        </li>\r\n        <li>\r\n          <Link to='/profile'><UserOutlined /></Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\Body.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\Left.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\submitrecord\\SubmitRecord.js",["220","221"],"import { Table, Tag, Space } from \"antd\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"提交时间\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: \"提交结果\",\r\n    dataIndex: \"age\",\r\n    key: \"age\",\r\n  },\r\n  {\r\n    title: \"运行时间\",\r\n    dataIndex: \"address\",\r\n    key: \"address\",\r\n  },\r\n  {\r\n    title: \"内存消耗\",\r\n    key: \"tags\",\r\n    dataIndex: \"tags\",\r\n    render: (tags) => (\r\n      <>\r\n        {tags.map((tag) => {\r\n          let color = tag.length > 5 ? \"geekblue\" : \"green\";\r\n          if (tag === \"loser\") {\r\n            color = \"volcano\";\r\n          }\r\n          return (\r\n            <Tag color={color} key={tag}>\r\n              {tag.toUpperCase()}\r\n            </Tag>\r\n          );\r\n        })}\r\n      </>\r\n    ),\r\n  },\r\n  {\r\n    title: \"语言\",\r\n    key: \"action\",\r\n    render: (text, record) => (\r\n      <Space size=\"middle\">\r\n        <a>Invite {record.name}</a>\r\n      </Space>\r\n    ),\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: \"1\",\r\n    name: \"John Brown\",\r\n    age: 32,\r\n    address: \"New York No. 1 Lake Park\",\r\n    tags: [\"nice\", \"developer\"],\r\n  },\r\n  {\r\n    key: \"2\",\r\n    name: \"Jim Green\",\r\n    age: 42,\r\n    address: \"London No. 1 Lake Park\",\r\n    tags: [\"loser\"],\r\n  },\r\n  {\r\n    key: \"3\",\r\n    name: \"Joe Black\",\r\n    age: 32,\r\n    address: \"Sidney No. 1 Lake Park\",\r\n    tags: [\"cool\", \"teacher\"],\r\n  },\r\n];\r\n\r\nconst SubmitRecord = (props) => {\r\n  return (\r\n    <div className=\"submit-record\">\r\n      <Table pagination={false} columns={columns} dataSource={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitRecord;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\Desc.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\desc\\data.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\right\\Right.js",["222"],"import CodeEditor from '../../code-editor'\r\n\r\nconst Right = (props) => {\r\n  const width = props\r\n\r\n  return <div className='right' style={{\r\n    height: \"calc(100vh - 45px)\",\r\n    display: \"flex\",\r\n    flexShrink:0 ,\r\n    flexDirection: \"column\"\r\n  }}>\r\n    <div id='div1' style={{ height: \"100%\" }}>\r\n      <CodeEditor />\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Right","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\Editor.tsx",["223","224"],"import { FC, useCallback, useEffect, useRef, useState } from 'react'\r\nimport { Dispatch } from 'redux'\r\nimport { RootState } from '../store'\r\nimport { Controlled as CodeMirror } from 'react-codemirror2'\r\nimport 'codemirror/addon/display/autorefresh';\r\nimport 'codemirror/addon/comment/comment';\r\nimport 'codemirror/addon/edit/matchbrackets';\r\nimport 'codemirror/keymap/vim';\r\nimport 'codemirror/theme/eclipse.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/theme/ambiance.css';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/mode/clike/clike.js'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport 'codemirror/addon/hint/show-hint.css';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/hint/anyword-hint';\r\nimport 'codemirror/addon/selection/active-line';\r\nimport 'codemirror/mode/xml/xml.js';\r\nimport 'codemirror/addon/fold/foldgutter.css';\r\nimport 'codemirror/addon/fold/foldcode.js';\r\nimport 'codemirror/addon/fold/foldgutter.js';\r\nimport 'codemirror/addon/fold/brace-fold.js';\r\nimport 'codemirror/addon/fold/comment-fold.js';\r\n\r\nimport 'codemirror/addon/comment/comment'\r\nimport 'codemirror/keymap/sublime'\r\nimport 'codemirror/addon/edit/closebrackets.js'//自动括号\r\nimport { connect } from 'react-redux';\r\nimport { actSaveCode } from '../store/actions';\r\n\r\ninterface Config {\r\n  fontSize: number,\r\n  theme: \"dark\" | \"light\",\r\n  indent: number,\r\n  code: string,\r\n  dispatch: Dispatch\r\n}\r\n\r\nconst CodeEditor: FC<Config> = ({ fontSize, theme, indent, code, dispatch }) => {\r\n  const editor = useRef<CodeMirror>(null)\r\n  \r\n  useEffect(() => {\r\n    const $editor = (editor.current as any).editor\r\n    $editor.setSize('100%', '100%')\r\n  }, [])\r\n\r\n  return (\r\n    <CodeMirror\r\n      className={\"font-size-\" + fontSize + \" editor\"}\r\n      ref={editor}\r\n      value={code}\r\n      options={{\r\n        mode: {\r\n          name: \"text/x-java\"\r\n        },\r\n        theme: theme === 'light' ? 'eclipse' : 'material',\r\n        indentWithTabs: indent,\r\n        tabSize: indent,\r\n        lineNumbers: true,\r\n        smartIndent: true,\r\n        autoCloseBrackets: true,\r\n        matchBrackets: true,\r\n        extraKyes: {\r\n          \"Tab\": \"autocomplete\"\r\n        },\r\n        lineWrapping: true,\r\n        foldGutter: true,\r\n        gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter']\r\n      }}\r\n      onBeforeChange={(...arr) => {\r\n        dispatch(actSaveCode(arr[2]))\r\n      }}\r\n      onInputRead={(cm, change) => {\r\n        cm.setOption('hintOptions', {\r\n          completeSingle: false\r\n        });\r\n        if (![';'].includes(change.text[0]))\r\n          cm.execCommand('autocomplete');\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  (state: RootState) => ({ ...state.editorConfig })\r\n)(CodeEditor)","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigBar.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\components\\ConfigMain.tsx",["225","226","227","228","229","230","231"],"import { Dropdown, Menu } from 'antd'\r\nimport { FC } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Action, Dispatch } from 'redux'\r\nimport { RootState } from '../store'\r\nimport { Actions, actFontSize, actIndent, actTheme } from '../store/actions'\r\nimport { initState } from '../store/reducer'\r\nimport { DownOutlined } from '@ant-design/icons'\r\n\r\ntype State = typeof initState\r\n\r\ninterface Props extends State {\r\n  dispatch: Dispatch\r\n}\r\n\r\nconst configs: {\r\n  keyword: string,\r\n  title: string,\r\n  description: string,\r\n  options: Array<[string, string | number]>\r\n}[] = [\r\n    {\r\n      keyword: \"fontSize\",\r\n      title: \"字体设置\",\r\n      description: \"调整适合你的字体大小\",\r\n      options: [...Array(9).fill([\"\", 0])].map((v, i) => [12 + i + 'px', 12 + i]), //12-20px\r\n    }, {\r\n      keyword: \"theme\",\r\n      title: \"主题设置\",\r\n      description: \"切换不同的编辑器主题\",\r\n      options: [[\"dark\", \"dark\"], [\"light\", \"light\"]]\r\n    }, {\r\n      keyword: \"indent\",\r\n      title: \"Tab长度\",\r\n      description: \"按下Tab后的缩进长度，默认为2\",\r\n      options: [[\"2\", 2], [\"4\", 4]]\r\n    }\r\n  ]\r\n\r\nconst ConfigMain: FC<Props> = (props) => {\r\n  const { fontSize, theme, indent, dispatch } = props\r\n  return (\r\n    <div className=\"config-main\">\r\n      {\r\n        configs.map((v) => <EachConfig key={v.keyword} {...v} {...props} />)\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface ConfigProps extends State {\r\n  title: string,\r\n  description: string,\r\n  options: Array<[string, string | number]>,\r\n  keyword: string,\r\n  dispatch: Dispatch\r\n}\r\nconst EachConfig: FC<ConfigProps> = (props) => {\r\n  const { title, description, options, keyword, dispatch } = props\r\n  return <div key={title} className=\"config-item flex j-between\">\r\n    <div style={{ width: '70%' }}>\r\n      <div className=\"title\">{title}</div>\r\n      <div className=\"description\">{description}</div>\r\n    </div>\r\n    <div style={{ width: '30%' }}>\r\n      <Dropdown\r\n        overlay={\r\n          <Menu>\r\n            {\r\n              options.map(([k, v]) => {\r\n                const update = () => {\r\n                  let action: any\r\n                  switch (keyword) {\r\n                    case \"fontSize\":\r\n                      action = actFontSize(v as number)\r\n                      break\r\n                    case \"theme\":\r\n                      action = actTheme(v as \"dark\" | \"light\")\r\n                      break\r\n                    case \"indent\":\r\n                      action = actIndent(v as 2 | 4)\r\n                      break\r\n                  }\r\n                  dispatch(action)\r\n                }\r\n                return <Menu.Item\r\n                  key={k}\r\n                  onClick={update}\r\n                >\r\n                  {k}\r\n                </Menu.Item>\r\n              })\r\n            }\r\n          </Menu>\r\n        }\r\n        trigger={['click']}\r\n        placement=\"bottomCenter\"\r\n      >\r\n        <div className=\"config-dropdown flex j-between a-center\">\r\n          <a>{props[keyword as \"fontSize\" | \"theme\" | \"indent\"]}</a>\r\n          <DownOutlined />\r\n        </div>\r\n      </Dropdown>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default connect(\r\n  (state: RootState) => ({\r\n    fontSize: state.editorConfig.fontSize,\r\n    indent: state.editorConfig.indent,\r\n    theme: state.editorConfig.theme,\r\n    code: state.editorConfig.code\r\n  })\r\n)(ConfigMain)","D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\reducer.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\code-editor\\store\\actions.ts",[],"D:\\PROJECT\\leetCode\\src\\components\\showModal\\index.tsx",["232"],"/**\r\n * 食用方式像这样：\r\n *    点击 设置  就会弹出传入的content\r\n *    如果需要在某些情况手动关闭，比如网络请求成功后关掉弹框:\r\n *                            * 传入 ref \r\n *                            * myRef.current.close() 展示弹框\r\n *                            * myRef.current.open()  关闭弹框\r\n *     <ShowModal\r\n *       render={ <div>打开弹窗</div> }\r\n *       content={ <你的组件 /> }\r\n *       ref={myRef}\r\n *     />\r\n * \r\n */\r\nimport { forwardRef, memo, ReactNode, useImperativeHandle, useState } from 'react'\r\nimport { Modal } from 'antd'\r\n\r\ninterface Props {\r\n  className?:string\r\n  footer?: ReactNode\r\n  onCancel?(): void\r\n  show?: boolean\r\n  switch?: boolean\r\n  title?: string\r\n  render: ReactNode\r\n  content: ReactNode\r\n  [K: string]: any\r\n}\r\n\r\nconst ShowModal = forwardRef((props: Props, ref) => {\r\n  const {\r\n    footer,\r\n    onCancel,\r\n    content,\r\n    render,\r\n    show,\r\n  } = props\r\n  const [visible, setVisible] = useState(!!show)\r\n  useImperativeHandle(ref, () => ({\r\n    open: setVisible.bind(null, true),\r\n    close: setVisible.bind(null, false),\r\n  }), [ref, setVisible])\r\n\r\n  const click = () => {\r\n    setVisible(!visible)\r\n  }\r\n  const defaultOnChange = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <span onClick={click}>\r\n        {render}\r\n      </span>\r\n      <Modal\r\n        {...props}\r\n        style={{ padding: \"15px\" }}\r\n        visible={visible}\r\n        footer={footer || null}\r\n        maskClosable={true}\r\n        onCancel={onCancel || defaultOnChange}\r\n      >\r\n        {content}\r\n      </Modal>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default memo(ShowModal)","D:\\PROJECT\\leetCode\\src\\utils\\hooks\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\config\\colors.ts",[],"D:\\PROJECT\\leetCode\\src\\apis\\index.ts",["233","234","235","236","237"],"import axios from 'axios'\r\nimport { storage } from '../utils/shared'\r\n\r\ntype PendingQueue = ((...args: any) => void)[]\r\n\r\nconst BASE_URL = 'http://47.107.90.201:8080'\r\n\r\nconst CONNECT_LIMIT = 1 // 最大网络连接数\r\nconst TIMEOUT = 1000 * 10 //最大请求到期时间 10s\r\n\r\nlet retryNum = 0\r\nconst MAX_RETRY_NUM = 5\r\n\r\nexport enum ErrorCode {\r\n  Token_Expire_Code = 430,\r\n  RefreshToken_Expire_Code = 432,\r\n  No_Token = 425,\r\n  Abort = 16625,\r\n  Connect_Fail = 16626,\r\n  Succes = 200\r\n}\r\nlet now = window.performance\r\n  ? () => performance.now()\r\n  : () => Date.now();\r\nconst Concurrent_Timing = 2\r\n\r\nlet lastModified = 0\r\n\r\n/** 当前请求数 */\r\nlet requestNum = 0\r\nlet pendingQueue: PendingQueue = []\r\nlet isRefreshing = false\r\n\r\n/** 不需要token的请求 */\r\nconst whiteList = new Set([\r\n  '/user/resetToken',\r\n  '/user/login',\r\n  '/user/register',\r\n  '/user/checkEmail',\r\n  '/user/checkUserId',\r\n  '/user/sendActiveMail',\r\n  '/user/logout',\r\n  '/user/findBackPassword',\r\n  '/user/checkUserLegality',\r\n  '/token',\r\n])\r\n\r\nconst request = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: TIMEOUT\r\n})\r\n\r\nrequest.interceptors.request.use(\r\n  async config => {\r\n    if (!storage.get('token') && !whiteList.has(config.url!)) {\r\n      config.cancelToken = new axios.CancelToken(c => c())\r\n      return config\r\n    }\r\n    console.log('isRefreshing' + isRefreshing);\r\n    console.log('requestNum' + requestNum);\r\n\r\n    if (!config.headers.priority && (isRefreshing || requestNum >= CONNECT_LIMIT)) { //如果正在请求新的token，代表当前token是过期了的\r\n      try {\r\n        await block() //等待前面的请求完\r\n      } catch (e) {//这里表示等待时间过长, 仍然取消请求\r\n        config.cancelToken = new axios.CancelToken(c => c())\r\n        return config\r\n      }\r\n    }\r\n    requestNum++\r\n    config.headers = {\r\n      token: storage.get(\"token\") || \"\",\r\n      contentType: 'application/json;charset=utf-8',\r\n    }\r\n    config.data = {\r\n      userId: storage.get('userId') || ''\r\n    }\r\n    return config\r\n  }\r\n)\r\n\r\nrequest.interceptors.response.use(\r\n  async res => {\r\n    try {\r\n      if (res.data.error_code === ErrorCode.Token_Expire_Code) {\r\n        /**\r\n         *  token过期有两种情况\r\n         *  1.第一次过期, 重新请求token并且重新发送请求，将新的结果返回\r\n         *  2.并发请求中，全部过期，但是刚才有一个请求已经检测到过期，\r\n         *    于是已经重新获取token了，需要将这个请求重新发送\r\n         *  两种情况的判定：通过最近一次刷新token的时间（lastModified）来确定\r\n         */\r\n        console.log(now() - lastModified > Concurrent_Timing);\r\n\r\n        if (now() - lastModified > Concurrent_Timing) { //第一次过期\r\n          try {\r\n            console.log('refresh tk');\r\n            await refreshToken() //这里也会发一个请求，因此请求数+1了，因此这个函数最后会让请求数-1\r\n          } catch (e) { //连refreshToken也失效了，需要重新登陆了\r\n            storage.clear()\r\n            return e\r\n          }\r\n        }\r\n        requestNum--\r\n        //返回新的请求,舍弃之前的请求\r\n        const newRes = await request.request(res.config)\r\n        console.log(newRes);\r\n        return newRes\r\n      }\r\n      return res\r\n    } finally {\r\n      requestNum--\r\n      send()\r\n    }\r\n  },\r\n  err => {\r\n    /** 只有网络连接失败和取消请求（没有携带token）会走到这里 */\r\n    try {\r\n      if (axios.isCancel(err)) { //是被取消的请求\r\n        if (!storage.get('token')) { //因为没有token取消的，需要重新登陆\r\n          return {\r\n            ...err,\r\n            data: {\r\n              message: \"未登陆\",\r\n              error_code: ErrorCode.No_Token\r\n            }\r\n          }\r\n        }\r\n        return {\r\n          ...err,\r\n          data: {\r\n            message: '请求取消',\r\n            error_code: ErrorCode.Abort\r\n          }\r\n        }\r\n      }\r\n      /** 网络异常 */\r\n      return {\r\n        ...err,\r\n        data: {\r\n          message: \"网络异常\",\r\n          error_code: ErrorCode.Connect_Fail\r\n        }\r\n      }\r\n    } finally {\r\n      requestNum--\r\n      send()\r\n    }\r\n  }\r\n)\r\n\r\nrequest.interceptors.response.use(\r\n  res => {\r\n    if (res.data.error_code && res.data.error_code !== ErrorCode.Succes) {\r\n      throw {\r\n        message: res.data.message,\r\n        data: res.data\r\n      }\r\n    }\r\n    return res\r\n  }\r\n)\r\n\r\nasync function refreshToken() {\r\n  try {\r\n    isRefreshing = true\r\n    const refreshToken = storage.get('refreshToken')\r\n    const res = await request.post('/user/resetToken', {\r\n      refreshToken\r\n    }, {\r\n      headers: {\r\n        priority: 1 //刷新token是高权限请求可以不用阻塞直接插队\r\n      }\r\n    })\r\n    if (!res.data.data && !res.data.data.token && !res.data.data.refreshToken) {\r\n      console.log('refresh fail');\r\n      throw {\r\n        ...res,\r\n        data: {\r\n          error_code: ErrorCode.RefreshToken_Expire_Code\r\n        }\r\n      }\r\n    }\r\n    storage.set('token', res.data.data.token)\r\n    storage.set('refreshToken', res.data.data.refreshToken)\r\n  } catch (error) {  //如果refreshToken也过期, 清空过期期间的请求\r\n    pendingQueue = []\r\n    throw {\r\n      ...error,\r\n      data: {\r\n        error_code: ErrorCode.RefreshToken_Expire_Code\r\n      }\r\n    }\r\n  } finally {\r\n    isRefreshing = false\r\n    /** 这里也会发一个请求，因此请求数+1了，因此这个函数最后会让请求数-1 */\r\n    requestNum--\r\n    lastModified = now()\r\n  }\r\n}\r\n\r\n\r\nfunction block() {\r\n  return new Promise((resolve, reject) => {\r\n    const timerId: number = window.setTimeout(() => {\r\n      reject(undefined)\r\n    }, TIMEOUT)\r\n    pendingQueue.push(() => {\r\n      clearTimeout(timerId)\r\n      resolve(undefined)\r\n    })\r\n  })\r\n}\r\n\r\nfunction send() {\r\n  if (pendingQueue.length) {\r\n    const resolve = pendingQueue.shift()!\r\n    resolve(undefined)\r\n  }\r\n}\r\n\r\nexport default request",["238","239"],"D:\\PROJECT\\leetCode\\src\\utils\\shared.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\saga\\rootSaga.js",["240"],"import { takeEvery } from \"redux-saga/effects\";\r\n\r\n\r\nfunction* watchFetchData() {\r\n  \r\n}\r\n\r\nexport default watchFetchData;\r\n","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\index.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginFooter\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginHeader\\index.jsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\components\\LoginMain\\index.jsx",["241"],"import { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button, \r\n    Select\r\n} from 'antd'\r\n\r\nimport { TO_PHONE_LOGIN, TO_PWD_LOGIN } from '../../store/constant';\r\n\r\nconst LoginMain = () => {\r\n    const [form] = Form.useForm();\r\n    const dispatch = useDispatch;\r\n    const { Option } = Select;\r\n\r\n\r\n    const { isPhoneLogin } = useSelector(allStates => ({\r\n        isPhoneLogin: allStates.loginHeader.isPhoneLogin\r\n    }))\r\n\r\n    const changeLoginWay = () => {\r\n        console.log('changeway');\r\n        dispatch({ type: TO_PWD_LOGIN, isPhoneLogin: false })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form className='login-card-form' form={form}>\r\n                {/* phone or username*/}\r\n                <Form.Item className='login-card-form-item'>\r\n                    {/* phone */}\r\n                    <Input.Group compact style={{ display: `${isPhoneLogin ? 'block' : 'none'}` }}>\r\n                        <Select style={{ width: '23%' }} defaultValue=\"Zhejiang\">\r\n                            <Option value=\"Zhejiang\">+86</Option>\r\n                            <Option value=\"Jiangsu\">+852</Option>\r\n                        </Select>\r\n                        <Input className='login-card-form-input sp' style={{ width: '77%' }} placeholder='输入手机号' />\r\n                    </Input.Group>\r\n\r\n\r\n                    {/* username */}\r\n                    <Input className='login-card-form-input' placeholder='手机号/邮箱' style={{ display: `${!isPhoneLogin ? 'block' : 'none'}` }} />\r\n                </Form.Item>\r\n\r\n                {/* verification or password */}\r\n                <Form.Item className='login-card-form-item'>\r\n                    <Input className='login-card-form-input' placeholder={isPhoneLogin ? '验证码' : '输入密码'} />\r\n                </Form.Item>\r\n\r\n                {/* login/register or login */}\r\n                <Form.Item className='login-card-form-item'>\r\n                    <Button type='primary'>{isPhoneLogin ? '登录 / 注册' : '登录'}</Button>\r\n                </Form.Item>\r\n\r\n                {/* link button */}\r\n                <Form.Item className='login-card-form-item'>\r\n                    <Button type='link' onClick={changeLoginWay}>\r\n                        {isPhoneLogin ? '账号密码登录' : '验证码登录'}\r\n                    </Button>\r\n                    <Button type='link'>{isPhoneLogin ? '邮箱注册' : '忘记密码'}</Button>\r\n                </Form.Item>\r\n            </Form>        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginMain","D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\phoneLogin.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\pwdLogin.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\constant.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\login\\store\\reducers\\loginHeader.js",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\mid\\index.tsx",["242"],"import { Dispatch, FC, SetStateAction, useEffect, useRef } from 'react'\r\nimport { fromEvent } from 'rxjs';\r\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\r\n\r\ninterface Props {\r\n  setWidth: Dispatch<SetStateAction<number>>\r\n}\r\n\r\nconst MidDragBar: FC<Props> = ({ setWidth }) => {\r\n  const mid = useRef<HTMLDivElement>(null)\r\n\r\n  useEffect(() => {\r\n    const $mid = mid.current!;\r\n    const mouseDown$ = fromEvent($mid, \"mousedown\")\r\n    const mouseMove$ = fromEvent(document, \"mousemove\")\r\n    const mouseUp$ = fromEvent(document, \"mouseup\")\r\n\r\n    const sup = mouseDown$.pipe(\r\n      map(e => {\r\n        const { offsetX } = e as MouseEvent\r\n        return offsetX\r\n      }),\r\n      switchMap((offsetX) => mouseMove$.pipe(\r\n        map((e) => {\r\n          return (e as MouseEvent).clientX - offsetX\r\n        }),\r\n        takeUntil(mouseUp$)\r\n      )),\r\n    ).subscribe(val => {\r\n      setWidth(val)\r\n    })\r\n\r\n    return () => {\r\n      sup.unsubscribe()\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div ref={mid} className=\"mid-drag-bar\"></div>\r\n  )\r\n}\r\nexport default MidDragBar","D:\\PROJECT\\leetCode\\src\\config\\code.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\index.tsx",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\store\\actions.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\store\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\store\\reducer.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\store\\epics\\index.ts",[],"D:\\PROJECT\\leetCode\\src\\pages\\questionindex\\components\\body\\left\\components\\comment\\components\\Common.tsx",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":6,"column":3,"nodeType":"249","messageId":"250","endLine":6,"endColumn":11},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"251","line":1,"column":10,"nodeType":"249","messageId":"250","endLine":1,"endColumn":18},{"ruleId":"247","severity":1,"message":"252","line":1,"column":20,"nodeType":"249","messageId":"250","endLine":1,"endColumn":31},{"ruleId":"247","severity":1,"message":"253","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":13},{"ruleId":"247","severity":1,"message":"254","line":3,"column":10,"nodeType":"249","messageId":"250","endLine":3,"endColumn":14},{"ruleId":"247","severity":1,"message":"255","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":14},{"ruleId":"247","severity":1,"message":"256","line":6,"column":8,"nodeType":"249","messageId":"250","endLine":6,"endColumn":17},{"ruleId":"247","severity":1,"message":"257","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":14},{"ruleId":"258","severity":1,"message":"259","line":49,"column":11,"nodeType":"260","endLine":49,"endColumn":44},{"ruleId":"258","severity":1,"message":"259","line":54,"column":11,"nodeType":"260","endLine":54,"endColumn":42},{"ruleId":"258","severity":1,"message":"261","line":59,"column":11,"nodeType":"260","endLine":59,"endColumn":80},{"ruleId":"258","severity":1,"message":"261","line":8,"column":23,"nodeType":"260","endLine":8,"endColumn":26},{"ruleId":"258","severity":1,"message":"261","line":45,"column":9,"nodeType":"260","endLine":45,"endColumn":12},{"ruleId":"247","severity":1,"message":"262","line":4,"column":9,"nodeType":"249","messageId":"250","endLine":4,"endColumn":14},{"ruleId":"263","severity":1,"message":"264","line":1,"column":14,"nodeType":"249","messageId":"250","endLine":1,"endColumn":25},{"ruleId":"263","severity":1,"message":"265","line":1,"column":46,"nodeType":"249","messageId":"250","endLine":1,"endColumn":54},{"ruleId":"263","severity":1,"message":"266","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":16},{"ruleId":"263","severity":1,"message":"267","line":6,"column":10,"nodeType":"249","messageId":"250","endLine":6,"endColumn":17},{"ruleId":"263","severity":1,"message":"268","line":41,"column":11,"nodeType":"249","messageId":"250","endLine":41,"endColumn":19},{"ruleId":"263","severity":1,"message":"269","line":41,"column":21,"nodeType":"249","messageId":"250","endLine":41,"endColumn":26},{"ruleId":"263","severity":1,"message":"270","line":41,"column":28,"nodeType":"249","messageId":"250","endLine":41,"endColumn":34},{"ruleId":"263","severity":1,"message":"271","line":41,"column":36,"nodeType":"249","messageId":"250","endLine":41,"endColumn":44},{"ruleId":"258","severity":1,"message":"261","line":100,"column":11,"nodeType":"260","endLine":100,"endColumn":14},{"ruleId":"272","severity":1,"message":"273","line":42,"column":7,"nodeType":"274","endLine":42,"endColumn":24,"suggestions":"275"},{"ruleId":"263","severity":1,"message":"276","line":11,"column":5,"nodeType":"249","messageId":"250","endLine":11,"endColumn":13},{"ruleId":"263","severity":1,"message":"277","line":12,"column":7,"nodeType":"249","messageId":"250","endLine":12,"endColumn":20},{"ruleId":"278","severity":1,"message":"279","line":155,"column":7,"nodeType":"280","messageId":"281","endLine":158,"endColumn":8},{"ruleId":"278","severity":1,"message":"279","line":177,"column":7,"nodeType":"280","messageId":"281","endLine":182,"endColumn":8},{"ruleId":"278","severity":1,"message":"279","line":188,"column":5,"nodeType":"280","messageId":"281","endLine":193,"endColumn":6},{"ruleId":"243","replacedBy":"282"},{"ruleId":"245","replacedBy":"283"},{"ruleId":"247","severity":1,"message":"284","line":1,"column":10,"nodeType":"249","messageId":"250","endLine":1,"endColumn":19},{"ruleId":"247","severity":1,"message":"285","line":9,"column":10,"nodeType":"249","messageId":"250","endLine":9,"endColumn":24},{"ruleId":"272","severity":1,"message":"286","line":36,"column":6,"nodeType":"274","endLine":36,"endColumn":8,"suggestions":"287"},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Provider' is defined but never used.","'useSelector' is defined but never used.","'store' is defined but never used.","'Card' is defined but never used.","'Header' is defined but never used.","'LoginMain' is defined but never used.","'Footer' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'width' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","'useState' is defined but never used.","'Action' is defined but never used.","'Actions' is defined but never used.","'fontSize' is assigned a value but never used.","'theme' is assigned a value but never used.","'indent' is assigned a value but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useImperativeHandle has an unnecessary dependency: 'ref'. Either exclude it or remove the dependency array.","ArrayExpression",["290"],"'retryNum' is assigned a value but never used.","'MAX_RETRY_NUM' is assigned a value but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object",["288"],["289"],"'takeEvery' is defined but never used.","'TO_PHONE_LOGIN' is defined but never used.","React Hook useEffect has a missing dependency: 'setWidth'. Either include it or remove the dependency array. If 'setWidth' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["291"],"no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},"Update the dependencies array to be: [setVisible]",{"range":"296","text":"297"},"Update the dependencies array to be: [setWidth]",{"range":"298","text":"299"},[1017,1034],"[setVisible]",[978,980],"[setWidth]"]